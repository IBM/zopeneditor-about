import{r as n,o as l,a as h,b as o,d as t,w as a,F as d,e,c as i}from"./app.ffea5396.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";var p="/zopeneditor-about/assets/program-control-flow.37108527.png";const g={},m=o("h1",{id:"program-control-flow-browser",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#program-control-flow-browser","aria-hidden":"true"},"#"),e(" Program Control Flow Browser")],-1),w=e("The Program Control Flow Browser provides an interactive graph that visualizes the control flow of a COBOL program. This is an advanced capability available with an "),f=e("active license"),u=e("."),_=o("p",null,[o("img",{src:p,alt:"'program-control-flow-sample'"})],-1),b=o("h2",{id:"opening-the-program-control-flow-browser",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#opening-the-program-control-flow-browser","aria-hidden":"true"},"#"),e(" Opening the Program Control Flow Browser")],-1),v=e("To open a program in the Program Control Flow Browser, it must first be successfully parsed by the language servers. This requires the program to be free of critical syntax errors and for all referenced copybooks or include files to be "),y=e("properly resolved"),C=e(". Any issues that may impede parsing are reported in the "),F={href:"https://code.visualstudio.com/docs/editing/editingevolved#_errors-warnings",target:"_blank",rel:"noopener noreferrer"},B=e("Problems view"),P=e(" within VS Code, where users can identify and address them accordingly. If a program cannot be parsed, or is still in the process of being parsed, attempting to open it in the Program Control Flow Browser will result in an error message being displayed."),k=i("<p>The Program Control Flow Browser can be opened in the following ways:</p><ul><li><code>Cmd \u2318</code>/<code>Ctrl</code> + <code>Shift</code> + <code>P</code> to open the command palette and run the command <strong><code>&gt;IBM Z Open Editor: Show in Program Control Flow</code></strong> while viewing a COBOL program.</li><li>Right-click within a COBOL program and select <strong>Show In &gt; Program Control Flow</strong>.</li></ul>",2),x=e("Either method is available for local programs or for remote programs accessed through Zowe Explorer or the "),O=e("z/OS Resources Table"),T=e(". The view opens in the VS Code panel by default but can be repositioned to other areas of the editor if required. The view cannot be opened for a copybook or include file."),S=i('<h2 id="navigation" tabindex="-1"><a class="header-anchor" href="#navigation" aria-hidden="true">#</a> Navigation</h2><p>The graph in the Program Control Flow Browser can be navigated by scrolling horizontally and vertically, or by using arrow keys to move the view in any direction.</p><p>Zooming is controlled through a set of buttons located in the bottom-left corner of the graph. These buttons allow zooming in and out of the graph, and a reset button on the far right sets the zoom level to 100%, returning the graph to its default scale.</p><p>A caret icon to the left of the zoom controls toggles the visibility of the minimap, which starts collapsed by default. When expanded, the minimap displays a scaled-down overview of the entire graph, and clicking within it will reposition the main graph view to the selected location.</p><h2 id="actions" tabindex="-1"><a class="header-anchor" href="#actions" aria-hidden="true">#</a> Actions</h2><p>Each node in the Program Control Flow Browser represents a paragraph, section, or the procedure division within a COBOL program. Clicking a node highlights the corresponding element in the source code, and opens a details panel showing the full name of the paragraph or section (or the program name, if the procedure division node is selected), along with its start and end line numbers in the program.</p><p>When a node is clicked, the graph automatically focuses on control flow paths that may transfer control to or from the selected node, while unrelated nodes become slightly transparent.</p><p>For paragraph and section nodes, additional actions are available via the overflow menu (three vertical dots) in the top-right of the node:</p><ul><li><p><strong>Show Program Control Flow From Here</strong>: Displays a graph showing all control flow paths that originate from the selected node. This helps visualize how control progresses through the program from that point.</p></li><li><p><strong>Show Program Control Flow To Here</strong>: Displays a graph showing all control flow paths that lead to the selected node. This helps identify potential entry points or calling paths that reach the selected code.</p></li></ul><p>A <strong>Reload</strong> button is also available in the top-right corner of the browser. Clicking this button will regenerate the graph for the currently opened COBOL program, incorporating any recent edits made to the source code. If a <strong>Show Program Control Flow From Here</strong> or <strong>Show Program Control Flow To Here</strong> action has been applied, using <strong>Reload</strong> will reset the graph to its default state and display all nodes.</p><h2 id="limitations" tabindex="-1"><a class="header-anchor" href="#limitations" aria-hidden="true">#</a> Limitations</h2><p>Support for very large COBOL programs is still a work in progress. In some cases, the Program Control Flow Browser may not display the full control flow accurately, and certain actions may not behave as expected. Improvements to large program support are planned for future updates.</p>',12);function L(z,I){const r=n("RouterLink"),s=n("ExternalLinkIcon");return l(),h(d,null,[m,o("p",null,[w,t(r,{to:"/Docs/advanced_activation.html"},{default:a(()=>[f]),_:1}),u]),_,b,o("p",null,[v,t(r,{to:"/Docs/setting_propertygroup.html"},{default:a(()=>[y]),_:1}),C,o("a",F,[B,t(s)]),P]),k,o("p",null,[x,t(r,{to:"/Docs/advanced_resource_table.html"},{default:a(()=>[O]),_:1}),T]),S],64)}var V=c(g,[["render",L]]);export{V as default};
