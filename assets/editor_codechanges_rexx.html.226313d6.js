import{r,o as a,a as c,b as n,d as t,w as i,F as l,c as s,e}from"./app.8943f21e.js";import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";var h="/zopeneditor-about/assets/rexx-outline.874bbe03.gif",p="/zopeneditor-about/assets/rexx-completion.d6ede0cc.gif",u="/zopeneditor-about/assets/rexx-hover.177d05b4.gif",g="/zopeneditor-about/assets/rexx-copy.3e497dfe.gif",m="/zopeneditor-about/assets/rexx-references.c3178797.gif",f="/zopeneditor-about/assets/rexx-toggle-comment.af36ebf3.gif";const y={},b=s('<h1 id="making-rexx-code-changes" tabindex="-1"><a class="header-anchor" href="#making-rexx-code-changes" aria-hidden="true">#</a> Making REXX code changes</h1><p>In addition to COBOL, PL/I, and High Level Assembler (HLASM), IBM Z\xAE Open Editor supports TSO/E REXX editing. You can use the following features to edit REXX programs effectively.</p><p>With the syntax highlighting capability, you can quickly distinguish the comments, strings, constants, variables, keywords, labels, functions, comparison, and arithmetic in a REXX program.</p><p>The editor provides the following features and capabilities:</p><h2 id="browsing-code-by-using-the-outline-view" tabindex="-1"><a class="header-anchor" href="#browsing-code-by-using-the-outline-view" aria-hidden="true">#</a> Browsing code by using the Outline view</h2><p>As you view the source, you can use the Outline view to efficiently explore and navigate the code of the program. By looking through the items in this view, you can see the internal routines, and directly navigate to one by selecting it.</p><p><img src="'+h+'" alt="REXX Outline"></p><p><strong>How to use it</strong></p><p>You can use the Outline view only after you have opened a file or program. If the Outline view is not already expanded, you can open it by clicking <strong>View &gt; Open view &gt; Outline</strong>.</p><p>You can use this view to:</p><ul><li>Recognize internal routines quickly via the icons in the outline view.</li><li>Go to a wanted location in the code by clicking that section header in the view.</li><li>Sort by Position or Name.</li><li>Search for identifiers within the outline by pressing Ctrl+Shift+O (Windows), or Cmd+Shift+O (Mac) within the Editor window.</li></ul><p>When you move your cursor over the program, outline nodes are automatically selected. To toggle this and other features related to the Outline View, hover over the upper right corner of the Outline View. You can see the option <strong>...</strong>, where you can click to find multiple options to organize your outline view such as Follow on Cursor, Filter by Type and Sort by Name, Position, and Type.</p><h2 id="code-completion" tabindex="-1"><a class="header-anchor" href="#code-completion" aria-hidden="true">#</a> Code completion</h2><p>The code completion feature suggests simple symbols, constant symbols, compound symbols, stems, function calls, keyword instructions, and built-in functions. The editor applies a suggestion to the file based on the context of the cursor position. For a cursor position inside a stem, the suggestion replaces the entire symbol. For a cursor position inside the tail of a compound symbol, the suggestion replaces a segment of the symbol. The casing of the suggestion replaces the casing of the symbol in the file. The code completion suggestions are not filtered by case.</p><p><img src="'+p+'" alt="Code Completion"></p><p><strong>How to use it</strong></p><p>The code completion suggestion is displayed automatically while you are typing outside of any comments or strings.</p><h2 id="hovering-for-declaration" tabindex="-1"><a class="header-anchor" href="#hovering-for-declaration" aria-hidden="true">#</a> Hovering for declaration</h2><p>The hover feature provides rich information about keyword instructions and built-in functions. By moving your cursor over these elements, a small pop-up window is displayed containing a title, description, and example usage.</p><p><img src="'+u+'" alt="REXX Hover"></p><p><strong>How to use it</strong></p><p>You can see hovers for keyword instructions and built-in functions by moving your cursor over the element. The hover disappears when your cursor moves elsewhere.</p><h2 id="previewing-include-control-directives" tabindex="-1"><a class="header-anchor" href="#previewing-include-control-directives" aria-hidden="true">#</a> Previewing include control directives</h2><p>To preview the contents of a %INCLUDE statement, point to the file name. If the file cannot be resolved, a red warning underline will appear on the file name. To open the file in a separate editor, press Ctrl and click (on Windows), or press Cmd and click (on Mac).</p><p><img src="'+g+'" alt="REXX INCLUDE File Preview"></p><p><strong>How to use it</strong></p>',26),w=e("To resolve include files, you must specify the filepath to the include files in your "),v=e("ZAPP file property groups"),x=e(" to resolve the references. The location can be a local one such as another directory in your workspace, or it can be an MVS data set on a remote z/OS system using Zowe connectivity to find and load the files."),_=e("If no filepath is specified, the include files are not found in the provided filepath and an error is shown. To resolve this, follow the instructions provided and our "),k=e("ZAPP overview"),C=e(" and "),T=e("Property Groups"),E=e(" pages."),S=s('<h2 id="operations-on-symbols" tabindex="-1"><a class="header-anchor" href="#operations-on-symbols" aria-hidden="true">#</a> Operations on symbols</h2><p>By right clicking on a symbol, you can see a list of available operations.</p><p><strong>How to use it</strong></p><ul><li>Click <strong>Find All References</strong>: Alt+Shift+F12 (Windows) or Option+Shift+F12(Mac)</li><li>Click <strong>Peek References</strong>: Shift+F12 (Windows and Mac)</li></ul><p>A reference is defined as any matching symbol not in a comment or string. Keywords and built-in functions do not appear as references. The matches are determined by the context of the symbol. Internal routines match to their calls. Stems match to other stems. Simple symbols match to other simple symbols. Constant symbols match to other constant symbols. For compound symbols, the tail is broken into separate pieces, delimited by its periods, and matched to other constant or simple symbols. Additionally, the derivation and scope of a symbol is not considered.</p><p><img src="'+m+'" alt="REXX PEEK REFERENCES"></p><h2 id="syntax-checking" tabindex="-1"><a class="header-anchor" href="#syntax-checking" aria-hidden="true">#</a> Syntax checking</h2><p>The syntax checking feature underlines unrecognized statements and expressions in red, which helps you to make quick corrections and reduce compile errors.</p><p><strong>How to use it</strong></p><p>To see all the syntax errors in the open files, open the Problems view through the View menu or by clicking the error and warning icon at the bottom in the status bar. Double-click the list item to directly go to the problem.</p><h2 id="undoing-and-redoing" tabindex="-1"><a class="header-anchor" href="#undoing-and-redoing" aria-hidden="true">#</a> Undoing and redoing</h2><p>Undo your changes by pressing Ctrl+Z (Windows) or Cmd+Z (Mac). Redo your changes by pressing Ctrl+Shift+Z (Windows) or Cmd+Shift+Z (Mac).</p><h2 id="commenting-and-uncommenting-rexx-code" tabindex="-1"><a class="header-anchor" href="#commenting-and-uncommenting-rexx-code" aria-hidden="true">#</a> Commenting and uncommenting REXX code</h2><p>You can comment out one or multiple selected lines of code or a selected section of code by using the toggle comment function.</p><p><strong>How to use it</strong></p><p>To toggle comment for one or multiple selected lines of code, press Cmd+/ (Mac) or Ctrl+/ (Windows), or go to <code>Edit &gt; Toggle Line Comment</code>.</p><p>To toggle comments for a selected section of code, press Option+Shift+A (Mac) or Alt+Shift+A (Windows), or go to <code>Edit &gt; Toggle Block Comment</code>.</p><p>See the following example where we first toggle line comment on a single line, then toggle line comment on multiple selected lines, and finally toggle block comment on a selection:</p><p><img src="'+f+'" alt="rexx toggle comment"></p>',19);function O(X,R){const o=r("RouterLink");return a(),c(l,null,[b,n("p",null,[w,t(o,{to:"/Docs/setting_propertygroup.html"},{default:i(()=>[v]),_:1}),x]),n("p",null,[_,t(o,{to:"/Docs/zapp.html"},{default:i(()=>[k]),_:1}),C,t(o,{to:"/Docs/setting_propertygroup.html"},{default:i(()=>[T]),_:1}),E]),S],64)}var A=d(y,[["render",O]]);export{A as default};
