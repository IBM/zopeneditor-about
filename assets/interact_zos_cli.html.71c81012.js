import{r as l,o as r,a as c,b as e,d as s,w as o,F as d,e as n,c as i}from"./app.06a10f17.js";import{_ as p}from"./rse-help-web.56c77c6d.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const m={},h=e("h1",{id:"using-command-line-to-interact-with-z-os",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#using-command-line-to-interact-with-z-os","aria-hidden":"true"},"#"),n(" Using command line to interact with z/OS")],-1),b=n("You can use the Terminal window in VS Code to run command-line operations on your client. For example, you can use the terminal to perform file-based operations and execute any kind of "),g={href:"https://git-scm.com/docs",target:"_blank",rel:"noopener noreferrer"},f=n("Git commands"),w=n(" on your local files right from this terminal."),_=i('<p>In addition, you can interact with z/OS\xAE by using commands that are provided by IBM\xAE RSE API plug-in for Zowe\u2122 CLI (RSE CLI plug-in), Zowe CLI, or both in the Terminal window. These commands provide various capabilities for interacting with z/OS resources that include MVS\u2122, jobs, and z/OS UNIX System Services.</p><p>To open the Terminal window, click <strong>Terminal &gt; New Terminal</strong> or press Ctrl+`. It is opened at the bottom below the editor and inside the working directory that contains all the files that are shown in the Files view.</p><h2 id="comparison-between-zowe-cli-and-rse-cli-plug-in" tabindex="-1"><a class="header-anchor" href="#comparison-between-zowe-cli-and-rse-cli-plug-in" aria-hidden="true">#</a> Comparison between Zowe CLI and RSE CLI plug-in</h2><p>Both of Zowe CLI and RSE CLI plug-in provide the commands, with slight differences in command names and options, to let you perform the following tasks:</p><ul><li>List, create, rename, delete z/OS UNIX System Services files and directories and MVS data sets and members</li><li>Run JCL jobs</li><li>Browse job spool files</li></ul><p>Though the capabilities of Zowe CLI and RSE CLI plug-in are similar, the installation and configuration requirements are different:</p>',6),v=n("To use the commands provided by Zowe CLI to interact with z/OS, you must "),S={href:"https://docs.zowe.org/stable/user-guide/systemrequirements-zosmf.html",target:"_blank",rel:"noopener noreferrer"},y=n("configure z/OSMF"),x=n(" before you install Zowe CLI."),L=e("li",null,[e("p",null,"RSE CLI plug-in extends Zowe CLI to let you interact with z/OS resources by using IBM Remote System Explorer API (RSE API) as an alternative to using z/OSMF. The RSE API is a collection of REST APIs that allow a client to work with various components on the z/OS host system, including MVS data sets, z/OS UNIX files and commands, JES jobs, and more. The overall solution results in a complete set of operations that allows you to do everything as you could do with z/OSMF. Therefore, RSE CLI plug-in is a great alternative if you have used the Remote System Explorer API with other IBM offerings such as IBM Developer for z/OS or IBM Explorer for z/OS.")],-1),I=n("For more information about the commands provided by Zowe CLI and RSE CLI plug-in, see the "),C=n("command mapping table"),z=n("."),O=e("h2",{id:"using-rse-cli-plug-in-commands",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#using-rse-cli-plug-in-commands","aria-hidden":"true"},"#"),n(" Using RSE CLI plug-in commands")],-1),E=e("h3",{id:"prerequisites",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prerequisites","aria-hidden":"true"},"#"),n(" Prerequisites")],-1),R=n("Installing IBM RSE API Plug-in for Zowe CLI"),T=n("Creating a RSE or z/OSMF profile by using Zowe CLI to connect to z/OS"),k=i(`<h3 id="running-rse-cli-plug-in-commands" tabindex="-1"><a class="header-anchor" href="#running-rse-cli-plug-in-commands" aria-hidden="true">#</a> Running RSE CLI plug-in commands</h3><p>After installing RSE CLI plug-in, you can use it in a command-line window on your development machine. You can issue commands to perform the following tasks:</p><ul><li>List, create, download, upload, and delete MVS data sets and members as well as z/OS UNIX System Services files and directories.</li><li>Submit jobs, list jobs and spool files, download or view spool content, view job status, cancel a job, and delete a job.</li></ul><p>For example, after you created your RSE profile for the user <code>USER1</code> and a data set with your COBOL programs called <code>USER1.SAMPLE.COBOL</code>, you can work on your MVS data sets with the following commands:</p><p>List your data sets and members:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse <span class="token function">ls</span> ds USER1
zowe rse <span class="token function">ls</span> all-members USER1.SAMPLE.COBOL
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Download members:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse download ds <span class="token string">&quot;USER1.SAMPLE.COBOL(SAM1)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>You will see that new folders appear on the left with the names based on your data set that contains the file SAM1. You can rename it by adding a <code>.cbl</code> extension to edit it in the COBOL editor, and then upload it later using drag-and-drop or via the command line.</p><p>Check the status of your jobs:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse <span class="token function">ls</span> js <span class="token operator">|</span> <span class="token function">grep</span> ACTIVE
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The command above shows an example of how RSE CLI plug-in commands can be used in combination with other Linux\xAE commands and scripts. This example returns the complete list of jobs and pipes that list into the Linux <code>grep</code> command to filter it down to show only the active jobs. This kind of capability enables you to define all kinds of batch jobs and automation for remotely interacting with z/OS.</p>`,12),B=n("For the full list of available commands, see "),M=n("IBM RSE API Plug-in for Zowe CLI commands"),q=n("."),A=i(`<h3 id="search-for-files-on-unix-system-services-by-content-or-file-name" tabindex="-1"><a class="header-anchor" href="#search-for-files-on-unix-system-services-by-content-or-file-name" aria-hidden="true">#</a> Search for files on UNIX System Services by content or file name</h3><p>With RSE API Plug-in for Zowe CLI, you can search for files in UNIX System Services by file name or content. There are two types of outputs depending on whether content is included in the search query or not:</p><p>If content is not included, you will see a list of file paths that match the criteria passed in with the number of matches.</p><div class="language-Bash ext-Bash line-numbers-mode"><pre class="language-Bash"><code>$ zowe rse search uss /u/user &quot;*.txt&quot;

Found 3 results for search:
  - /u/user/example.txt
  - /u/user/test/example2.txt
  - /u/user/test/example3.txt
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>If content is included in the query and matches are found in the referenced file, you will see a list of file paths and its matched lines from the file&#39;s content.</p><div class="language-Bash ext-Bash line-numbers-mode"><pre class="language-Bash"><code>$ zowe rse search uss /u/user &quot;*.txt&quot; --t &quot;hello world!&quot;

Found 2 results for search:

/u/user/test/examples/example.txt -- 2 matches:

1) &quot;hello world! ...&quot;
   Line: 1 -- Start Offset: 1 -- end Offset: 17

1) &quot;.. hello world!&quot;
   Line: 5 -- Start Offset: 23 -- end Offset: 40

/u/user/test/examples/example.txt -- 1 match:

1) &quot;hello world! ...&quot;
   Line: 13 -- Start Offset: 12 -- end Offset: 30
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>To try this yourself, run the following command:</p><div class="language-Bash ext-Bash line-numbers-mode"><pre class="language-Bash"><code>zowe rse search uss &lt;uss-path&gt; &lt;file/pattern&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>There are also options that can be passed to this command such as:</p><ul><li><code>--text | -t (string)</code> The text pattern to be searched for in the provided file. Example: hello</li><li><code>--regex-file-name | --rfn (boolean)</code> Regex for filename. If Regex pattern is not used, wildcard patterns are used</li><li><code>--regex-content | --rc (boolean)</code> Regex for content. If Regex pattern is not used, wildcard patterns are used.</li><li><code>--case-sensitive-file-name | --csfn (boolean)</code> Case-sensitive for filename</li><li><code>--case-sensitive-content | --csc (boolean)</code> Case-sensitive for content</li><li><code>--path-results-only | --pro (boolean)</code> Reduce the response to only the path results</li></ul><p>When <code>text</code> is not passed in as an option by default the CLI command will act as if <code>--pathResultsOnly</code> is set to <code>true</code>, since there will be no matches to show, which provides a cleaner output (see example above).</p><h3 id="run-interactive-tso-commands" tabindex="-1"><a class="header-anchor" href="#run-interactive-tso-commands" aria-hidden="true">#</a> Run interactive TSO commands</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse issue cmd <span class="token string">&quot;TSO EX &#39;HLQ.REXX.EXEC(ASKNAME)&#39;&quot;</span> --shell-id myshell
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The system prompts for a response:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>What is your name?
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Enter your response:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse issue cmd <span class="token string">&quot;BABE RUTH&quot;</span> --shell-id myshell
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The system again responds:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Your name is:  BABE RUTH
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The preceding example shows how RSE CLI plug-in commands can be used to execute interactive TSO commands by using the <code>--shell-id</code> option. This example executes a REXX exec that prompts the user for a name. It also demonstrates how to respond and allow the interactive command to continue to completion.</p><h3 id="getting-help-about-commands-and-options" tabindex="-1"><a class="header-anchor" href="#getting-help-about-commands-and-options" aria-hidden="true">#</a> Getting help about commands and options</h3><p>To learn about a command and all options for the command, add <code>--help</code> after the command. For example, by specifying <code>zowe rse list --help</code>, you can see all the different items that can be listed and a help response like this in the terminal:</p><div class="language-terminal ext-terminal line-numbers-mode"><pre class="language-terminal"><code>DESCRIPTION
 -----------

   List z/OS UNIX System Services file and folders, data sets and data set members, or jobs and spool
   files. Optionally, you can list their details and attributes.

 USAGE
 -----

   zowe rse-api-for-zowe-cli list &lt;command&gt;

   Where &lt;command&gt; is one of the following:

 COMMANDS
 --------

   all-members | am            List all members of a pds
   data-set | ds               List data sets
   jobs | js                   List z/OS jobs on JES spool/queues
   spool-files-by-jobid | sfbj List spool files of a z/OS job
   uss-files | uss             List z/OS UNIX System Services files

GLOBAL OPTIONS
 --------------

   --response-format-json  | --rfj (boolean)

      Produce JSON formatted data from a command

   --help  | -h (boolean)

      Display help text

   --help-examples  (boolean)

      Display examples for all the commands in a the group

   --help-web  | --hw (boolean)

      Display HTML help in browser

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>If you want to view the help response in a web browser, enter <code>--help-web</code>. For example, <code>zowe rse list --help-web</code>.</p><p><img src="`+p+'" alt="Online Help rendered as a web page"></p><h3 id="debugging-cli-commands-via-logs" tabindex="-1"><a class="header-anchor" href="#debugging-cli-commands-via-logs" aria-hidden="true">#</a> Debugging CLI commands via logs</h3><p>RSE CLI plug-in will write logs to Zowe CLI&#39;s log file located in <code>~/.zowe/zowe/zowe.log</code>. The default log level for Zowe CLI&#39;s logging is <code>WARN</code>. To change the log level, set the environment variable <code>ZOWE_APP_LOG_LEVEL</code> to the preferred level.</p>',27),j=n("For more information about Zowe CLI's logging, see "),Z={href:"https://docs.zowe.org/stable/user-guide/cli-configuringcli-ev/#setting-cli-log-levels",target:"_blank",rel:"noopener noreferrer"},P=n("Setting CLI log levels"),U=n("."),F=e("h2",{id:"using-zowe-cli-z-osmf-commands",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#using-zowe-cli-z-osmf-commands","aria-hidden":"true"},"#"),n(" Using Zowe CLI z/OSMF commands")],-1),N=e("h3",{id:"prerequisites-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prerequisites-1","aria-hidden":"true"},"#"),n(" Prerequisites")],-1),D=n("Installing Zowe CLI"),V=n("Creating a connection profile using Zowe CLI guide"),X=i(`<h3 id="running-zowe-cli-commands" tabindex="-1"><a class="header-anchor" href="#running-zowe-cli-commands" aria-hidden="true">#</a> Running Zowe CLI commands</h3><p>For example, after you created your Zowe CLI z/OSMF profile for the user <code>USER1</code> and a data set with your COBOL programs called <code>USER1.SAMPLE.COBOL</code>, you can work on your MVS data sets with the following commands:</p><ul><li><p>List your data sets and members:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe files <span class="token function">ls</span> ds USER1
zowe files <span class="token function">ls</span> all-members USER1.SAMPLE.COBOL
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>Download members:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe files download ds <span class="token string">&quot;USER1.SAMPLE.COBOL(SAM1)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>You will see that new folders appear on the left with the names based on your data set that contains the file SAM1. You can rename it by adding a <code>.cbl</code> extension to edit it in the COBOL editor, and then upload it later using drag-and-drop or via the command line.</p></li><li><p>Check the status of your jobs:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe <span class="token function">jobs</span> <span class="token function">ls</span> js <span class="token operator">|</span> <span class="token function">grep</span> ACTIVE
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The preceding command shows an example of how Zowe CLI commands can be used in combination with other Linux commands and scripts. This example returns the complete list of jobs and pipes that list into the Linux <code>grep</code> command to filter it down to show only the active jobs. This kind of capability enables you to define all kinds of batch jobs and automation for remotely interacting with z/OS.</p></li></ul><p>For an overview of available Zowe CLI commands, type <code>zowe --help</code>.</p>`,4),Y=n("To learn about all the capabilities of Zowe CLI, see "),W={href:"https://docs.zowe.org/stable/user-guide/cli-using-usingcli",target:"_blank",rel:"noopener noreferrer"},G=n("Zowe CLI Online Documentation"),H=n(".");function J($,K){const t=l("ExternalLinkIcon"),a=l("RouterLink");return r(),c(d,null,[h,e("p",null,[b,e("a",g,[f,s(t)]),w]),_,e("ul",null,[e("li",null,[e("p",null,[v,e("a",S,[y,s(t)]),x])]),L]),e("p",null,[I,s(a,{to:"/Docs/rse_cli_command.html"},{default:o(()=>[C]),_:1}),z]),O,E,e("ul",null,[e("li",null,[s(a,{to:"/Docs/setup_integration.html#installing-ibm-rse-api-plug-in-for-zowe-cli"},{default:o(()=>[R]),_:1})]),e("li",null,[s(a,{to:"/Docs/connect_to_zos_with_zowe_cli_e2e.html"},{default:o(()=>[T]),_:1})])]),k,e("p",null,[B,s(a,{to:"/Docs/rse_cli_command.html"},{default:o(()=>[M]),_:1}),q]),A,e("p",null,[j,e("a",Z,[P,s(t)]),U]),F,N,e("ul",null,[e("li",null,[s(a,{to:"/Docs/setup_integration.html#installing-zowe-cli"},{default:o(()=>[D]),_:1})]),e("li",null,[s(a,{to:"/Docs/connect_to_zos_with_zowe_cli_e2e.html"},{default:o(()=>[V]),_:1})])]),X,e("p",null,[Y,e("a",W,[G,s(t)]),H])],64)}var se=u(m,[["render",J]]);export{se as default};
