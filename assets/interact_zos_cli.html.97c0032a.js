import{r,o as l,a as d,b as n,d as s,w as o,F as c,e,c as i}from"./app.4d0516a8.js";import{_ as p}from"./rse-help-web.56c77c6d.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const h={},m=n("h1",{id:"using-command-line-to-interact-with-z-os",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#using-command-line-to-interact-with-z-os","aria-hidden":"true"},"#"),e(" Using command line to interact with z/OS")],-1),b=e("You can use the Terminal window in VS Code to run command-line operations on your client. For example, you can use the terminal to perform file-based operations and execute any kind of "),g={href:"https://git-scm.com/docs",target:"_blank",rel:"noopener noreferrer"},f=e("Git commands"),w=e(" on your local files right from this terminal."),v=i('<p>In addition, you can interact with z/OS\xAE by using commands that are provided by IBM\xAE RSE API plug-in for Zowe\u2122 CLI (RSE CLI plug-in), Zowe CLI, or both in the Terminal window. These commands provide various capabilities for interacting with z/OS resources that include MVS\u2122, jobs, and USS.</p><p>To open the Terminal window, click <strong>Terminal &gt; New Terminal</strong> or press Ctrl+`. It is opened at the bottom below the editor and inside the working directory that contains all the files that are shown in the Files view.</p><h2 id="comparison-between-zowe-cli-and-rse-cli-plug-in" tabindex="-1"><a class="header-anchor" href="#comparison-between-zowe-cli-and-rse-cli-plug-in" aria-hidden="true">#</a> Comparison between Zowe CLI and RSE CLI plug-in</h2><p>Both of Zowe CLI and RSE CLI plug-in provide the commands, with slight differences in command names and options, to let you perform the following tasks:</p><ul><li>List, create, rename, delete USS files and directories and MVS data sets and members</li><li>Run JCL jobs</li><li>Browse job spool files</li></ul><p>Though the capabilities of Zowe CLI and RSE CLI plug-in are similar, the installation and configuration requirements are different:</p>',6),S=e("To use the commands provided by Zowe CLI to interact with z/OS, you must "),y={href:"https://docs.zowe.org/stable/user-guide/systemrequirements-zosmf.html",target:"_blank",rel:"noopener noreferrer"},_=e("configure z/OSMF"),I=e(" before you install Zowe CLI."),L=n("li",null,[n("p",null,"RSE CLI plug-in extends Zowe CLI to let you interact with z/OS resources by using IBM Remote System Explorer API (RSE API) as an alternative to using z/OSMF. The RSE API is a collection of REST APIs that allow a client to work with various components on the z/OS host system, including MVS data sets, z/OS UNIX files and commands, JES jobs, and more. The overall solution results in a complete set of operations that allows you to do everything as you could do with z/OSMF. Therefore, RSE CLI plug-in is a great alternative if you have used the Remote System Explorer API with other IBM offerings such as IBM Developer for z/OS or IBM Explorer for z/OS.")],-1),z=e("For more information about the commands provided by Zowe CLI and RSE CLI plug-in, see the "),E=e("command mapping table"),x=e("."),C=n("h2",{id:"using-rse-cli-plug-in-commands",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#using-rse-cli-plug-in-commands","aria-hidden":"true"},"#"),e(" Using RSE CLI plug-in commands")],-1),R=n("h3",{id:"prerequisites-installing-rse-cli-plug-in",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#prerequisites-installing-rse-cli-plug-in","aria-hidden":"true"},"#"),e(" Prerequisites: Installing RSE CLI plug-in")],-1),T=e("To install RSE CLI plug-in, see the "),O=e("Installing IBM RSE API Plug-in for Zowe CLI"),k=e(" section in topic Setting up integrations."),M=i(`<h3 id="creating-an-rse-profile" tabindex="-1"><a class="header-anchor" href="#creating-an-rse-profile" aria-hidden="true">#</a> Creating an RSE profile</h3><p>To avoid typing connection details on every command, you can create a user profile. You can create multiple profiles and switch between them if necessary. To create a profile via command line, issue the following command in the terminal:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe profiles create rse rseCLI --host host.company.com --port <span class="token number">6800</span> --user user --password password --base-path rseapi --reject-unauthorized <span class="token boolean">false</span> --protocol https --encoding IBM-1047
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Notes:</strong></p><ul><li><code>rseCLI</code>: The name of the RSE profile. You can use any name that you want.</li><li><code>--protocol</code>: To override the default value with HTTP, specify <code>--protocol http</code>. The default value is <strong>https</strong>.</li></ul><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>When setting up your profile, you must specify the protocol to be used by the RSE RESTful API. Make sure your administrator configured the z/OS Explorer RSE to use https for enhanced security. For additional safety, set <code>rejectUnauthorized: true</code> to reject self-signed certificates, which should not be trusted in production environments.</p></div><ul><li><code>--reject-unauthorized</code>: To reject self-signed certificates, specify <strong>true</strong>. The default value is <strong>false</strong>.</li><li><code>--port</code>: The port on which RSE API is running on the host. The default value is <strong>6800</strong>. If you do not know the port number, check with your system administrator.</li><li><code>--base-path</code>: The base path of the API for the REST API operations. The default value is <strong>rseapi</strong>.</li><li><code>--encoding</code>: The default host encoding for the profile. The default value is <strong>IBM-1047</strong>.</li></ul><p>After the RSE profile is created, you can test if the connection with the IBM Remote System Explorer API is working by typing the command to list data sets, for example, <code>zowe rse list data-set HLQ</code> where HLQ is a high-level qualifier or user ID that is accessible by the user ID in the profile that is created to view data sets.</p><h3 id="running-rse-cli-plug-in-commands" tabindex="-1"><a class="header-anchor" href="#running-rse-cli-plug-in-commands" aria-hidden="true">#</a> Running RSE CLI plug-in commands</h3><p>After installing RSE CLI plug-in, you can use it in a command-line window on your development machine. You can issue commands to perform the following tasks:</p><ul><li>List, create, download, upload, and delete MVS data sets and members as well as USS files and directories.</li><li>Submit jobs, list jobs and spool files, download or view spool content, view job status, cancel a job, and delete a job.</li></ul><p>For example, after you created your RSE profile for the user <code>USER1</code> and a data set with your COBOL programs called <code>USER1.SAMPLE.COBOL</code>, you can work on your MVS data sets with the following commands:</p><ul><li><p>List your data sets and members:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse <span class="token function">ls</span> ds USER1
zowe rse <span class="token function">ls</span> all-members USER1.SAMPLE.COBOL
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>Download members:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse download ds <span class="token string">&quot;USER1.SAMPLE.COBOL(SAM1)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>You will see that new folders appear on the left with the names based on your data set that contains the file SAM1. You can rename it by adding a <code>.cbl</code> extension to edit it in the COBOL editor, and then upload it later using drag-and-drop or via the command line.</p></li><li><p>Check the status of your jobs:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse <span class="token function">ls</span> js <span class="token operator">|</span> <span class="token function">grep</span> ACTIVE
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The command above shows an example of how RSE CLI plug-in commands can be used in combination with other Linux\xAE commands and scripts. This example returns the complete list of jobs and pipes that list into the Linux <code>grep</code> command to filter it down to show only the active jobs. This kind of capability enables you to define all kinds of batch jobs and automation for remotely interacting with z/OS.</p></li></ul>`,13),A=e("For the full list of available commands, see "),j=e("IBM RSE API Plug-in for Zowe CLI commands"),B=e("."),P=i(`<h3 id="getting-help-about-commands-and-options" tabindex="-1"><a class="header-anchor" href="#getting-help-about-commands-and-options" aria-hidden="true">#</a> Getting help about commands and options</h3><p>To learn about a command and all options for the command, add <code>--help</code> after the command. For instance, by specifying <code>zowe rse list --help</code>, you can see all the different items that can be listed and a help response like this in the terminal:</p><div class="language-terminal ext-terminal line-numbers-mode"><pre class="language-terminal"><code>DESCRIPTION
 -----------

   List uss file and folders, data sets and data set members, or jobs and spool
   files. Optionally, you can list their details and attributes.

 USAGE
 -----

   zowe rse-api-for-zowe-cli list &lt;command&gt;

   Where &lt;command&gt; is one of the following:

 COMMANDS
 --------

   all-members | am            List all members of a pds
   data-set | ds               List data sets
   jobs | js                   List z/OS jobs on JES spool/queues
   spool-files-by-jobid | sfbj List spool files of a z/OS job
   uss-files | uss             List USS files

GLOBAL OPTIONS
 --------------

   --response-format-json  | --rfj (boolean)

      Produce JSON formatted data from a command

   --help  | -h (boolean)

      Display help text

   --help-examples  (boolean)

      Display examples for all the commands in a the group

   --help-web  | --hw (boolean)

      Display HTML help in browser

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>If you want to view the help response in a web browser, enter <code>--help-web</code>, for example, <code>zowe rse list --help-web</code>.</p><p><img src="`+p+'" alt="Online Help rendered as a web page"></p><h3 id="single-sign-on-support-for-rse-profiles" tabindex="-1"><a class="header-anchor" href="#single-sign-on-support-for-rse-profiles" aria-hidden="true">#</a> Single sign-on support for RSE profiles</h3><p>Once an RSE profile has been created users can use Single sign-on (SSO) support for connecting to the RSE API host component. JWTs are stored securely in the profile&#39;s YAML file in the <code>~/.zowe/profiles/rse</code> home directory.</p><h4 id="login-to-authentication-service" tabindex="-1"><a class="header-anchor" href="#login-to-authentication-service" aria-hidden="true">#</a> Login to Authentication Service</h4><ol><li>In the terminal, enter the command <code>zowe rse auth login</code>.</li><li>Enter credentials for z/OS connection when prompted.</li><li>Recieve a message with information about the JWT, including the JWT&#39;s expiration date and time as well as the creation date and time.</li></ol><h4 id="logout-from-authentication-service" tabindex="-1"><a class="header-anchor" href="#logout-from-authentication-service" aria-hidden="true">#</a> Logout from Authentication Service</h4><ol><li>In the terminal, enter the command <code>zowe rse auth logout</code>.</li><li>Recieve the message <code>JWT Token has been retired.</code>.</li></ol><h2 id="using-zowe-cli-z-osmf-commands" tabindex="-1"><a class="header-anchor" href="#using-zowe-cli-z-osmf-commands" aria-hidden="true">#</a> Using Zowe CLI z/OSMF commands</h2><h3 id="prerequisites-installing-zowe-cli" tabindex="-1"><a class="header-anchor" href="#prerequisites-installing-zowe-cli" aria-hidden="true">#</a> Prerequisites: Installing Zowe CLI</h3>',13),Z=e("To install Zowe CLI, see the "),U=e("Installing Zowe CLI"),F=e(" section in topic Setting up integrations."),q=i(`<h3 id="creating-a-zowe-cli-z-osmf-profile" tabindex="-1"><a class="header-anchor" href="#creating-a-zowe-cli-z-osmf-profile" aria-hidden="true">#</a> Creating a Zowe CLI z/OSMF profile</h3><p>Before using Zowe CLI, you must create a z/OSMF profile and connect to z/OS. Follow these steps to create a z/OSMF profile:</p><ol><li><p>Issue this command with your hostname, z/OSMF port, username, and password:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe profiles create zosmf-profile zoweCLI --host host.company.com --port <span class="token number">443</span> --user USER1 --pass password --reject-unauthorized <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Note</strong>: After you create or add a Zowe profile, you need to reload the explorer views to make the profile appear in the graphical Zowe tree views provided by Zowe Explorer.</p></li><li><p>Test the profile with the following command:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe zosmf check status
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ol><h3 id="running-zowe-cli-commands" tabindex="-1"><a class="header-anchor" href="#running-zowe-cli-commands" aria-hidden="true">#</a> Running Zowe CLI commands</h3><p>For example, after you created your Zowe CLI z/OSMF profile for the user <code>USER1</code> and a data set with your COBOL programs called <code>USER1.SAMPLE.COBOL</code>, you can work on your MVS data sets with the following commands:</p><ul><li><p>List your data sets and members:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe files <span class="token function">ls</span> ds USER1
zowe files <span class="token function">ls</span> all-members USER1.SAMPLE.COBOL
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>Download members:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe files download ds <span class="token string">&quot;USER1.SAMPLE.COBOL(SAM1)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>You will see that new folders appear on the left with the names based on your data set that contains the file SAM1. You can rename it by adding a <code>.cbl</code> extension to edit it in the COBOL editor, and then upload it later using drag-and-drop or via the command line.</p></li><li><p>Check the status of your jobs:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe <span class="token function">jobs</span> <span class="token function">ls</span> js <span class="token operator">|</span> <span class="token function">grep</span> ACTIVE
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The command above shows an example of how Zowe CLI commands can be used in combination with other Linux commands and scripts. This example returns the complete list of jobs and pipes that list into the Linux <code>grep</code> command to filter it down to show only the active jobs. This kind of capability enables you to define all kinds of batch jobs and automation for remotely interacting with z/OS.</p></li><li><p>Run interactive commands:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse issue cmd <span class="token string">&quot;TSO EX &#39;HLQ.REXX.EXEC(ASKNAME)&#39;&quot;</span> --shell-id myshell
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The system prompts for a response:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>What is your name?
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Enter your response:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse issue cmd <span class="token string">&quot;BABE RUTH&quot;</span> --shell-id myshell
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The system again responds:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Your name is:  BABE RUTH
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The example above shows how RSE CLI plug-in commands can be used to execute interactive TSO commands using the <code>--shell-id</code> option. This example executes a REXX exec that prompts the user for a name. It also demonstrates how to respond and allow the interactive command to continue to completion.</p></li></ul><p>For an overview of available Zowe CLI commands, type <code>zowe --help</code>.</p>`,7),D=e("To learn about all capabilities of Zowe CLI, see "),N={href:"https://docs.zowe.org/stable/user-guide/cli-usingcli.html",target:"_blank",rel:"noopener noreferrer"},V=e("Zowe CLI Online Documentation"),Y=e(".");function H(J,W){const t=r("ExternalLinkIcon"),a=r("RouterLink");return l(),d(c,null,[m,n("p",null,[b,n("a",g,[f,s(t)]),w]),v,n("ul",null,[n("li",null,[n("p",null,[S,n("a",y,[_,s(t)]),I])]),L]),n("p",null,[z,s(a,{to:"/Docs/rse_cli_command.html"},{default:o(()=>[E]),_:1}),x]),C,R,n("p",null,[T,s(a,{to:"/Docs/setup_integration.html#installing-ibm-rse-api-plug-in-for-zowe-cli"},{default:o(()=>[O]),_:1}),k]),M,n("p",null,[A,s(a,{to:"/Docs/rse_cli_command.html"},{default:o(()=>[j]),_:1}),B]),P,n("p",null,[Z,s(a,{to:"/Docs/setup_integration.html#installing-zowe-cli"},{default:o(()=>[U]),_:1}),F]),q,n("p",null,[D,n("a",N,[V,s(t)]),Y])],64)}var K=u(h,[["render",H]]);export{K as default};
