import{r,o as l,a as c,b as e,d as s,w as t,F as d,e as n,c as i}from"./app.2a0287be.js";import{_ as p}from"./rse-help-web.56c77c6d.js";import{_ as h}from"./plugin-vue_export-helper.21dcd24c.js";const u={},m=e("h1",{id:"using-command-line-to-interact-with-z-os",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#using-command-line-to-interact-with-z-os","aria-hidden":"true"},"#"),n(" Using command line to interact with z/OS")],-1),b=n("You can use the Terminal window in VS Code to run command-line operations on your client. For example, you can use the terminal to perform file-based operations and execute any kind of "),f={href:"https://git-scm.com/docs",target:"_blank",rel:"noopener noreferrer"},g=n("Git commands"),v=n(" on your local files right from this terminal."),w=i('<p>In addition, you can interact with z/OS\xAE by using commands that are provided by IBM\xAE RSE API plug-in for Zowe\u2122 CLI (RSE CLI plug-in), Zowe CLI, or both in the Terminal window. These commands provide various capabilities for interacting with z/OS resources that include MVS\u2122, jobs, and z/OS UNIX System Services.</p><p>To open the Terminal window, click <strong>Terminal &gt; New Terminal</strong> or press Ctrl+`. It is opened at the bottom below the editor and inside the working directory that contains all the files that are shown in the Files view.</p><h2 id="comparison-between-zowe-cli-and-rse-cli-plug-in" tabindex="-1"><a class="header-anchor" href="#comparison-between-zowe-cli-and-rse-cli-plug-in" aria-hidden="true">#</a> Comparison between Zowe CLI and RSE CLI plug-in</h2><p>Both of Zowe CLI and RSE CLI plug-in provide the commands, with slight differences in command names and options, to let you perform the following tasks:</p><ul><li>List, create, rename, delete z/OS UNIX System Services files and directories and MVS data sets and members</li><li>Run JCL jobs</li><li>Browse job spool files</li></ul><p>Though the capabilities of Zowe CLI and RSE CLI plug-in are similar, the installation and configuration requirements are different:</p>',6),x=n("To use the commands provided by Zowe CLI to interact with z/OS, you must "),y={href:"https://docs.zowe.org/stable/user-guide/systemrequirements-zosmf.html",target:"_blank",rel:"noopener noreferrer"},k=n("configure z/OSMF"),S=n(" before you install Zowe CLI."),z=e("li",null,[e("p",null,"RSE CLI plug-in extends Zowe CLI to let you interact with z/OS resources by using IBM Remote System Explorer API (RSE API) as an alternative to using z/OSMF. The RSE API is a collection of REST APIs that allow a client to work with various components on the z/OS host system, including MVS data sets, z/OS UNIX files and commands, JES jobs, and more. The overall solution results in a complete set of operations that allows you to do everything as you could do with z/OSMF. Therefore, RSE CLI plug-in is a great alternative if you have used the Remote System Explorer API with other IBM offerings such as IBM Developer for z/OS or IBM Explorer for z/OS.")],-1),_=n("For more information about the commands provided by Zowe CLI and RSE CLI plug-in, see the "),I=n("command mapping table"),L=n("."),q=e("h2",{id:"using-rse-cli-plug-in-commands",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#using-rse-cli-plug-in-commands","aria-hidden":"true"},"#"),n(" Using RSE CLI plug-in commands")],-1),O=e("h3",{id:"prerequisites",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prerequisites","aria-hidden":"true"},"#"),n(" Prerequisites")],-1),C=n("Installing IBM RSE API Plug-in for Zowe CLI"),E=n("Creating a RSE or z/OSMF profile by using Zowe CLI to connect to z/OS"),T=i(`<h3 id="running-rse-cli-plug-in-commands" tabindex="-1"><a class="header-anchor" href="#running-rse-cli-plug-in-commands" aria-hidden="true">#</a> Running RSE CLI plug-in commands</h3><p>After installing RSE CLI plug-in, you can use it in a command-line window on your development machine. You can issue commands to perform the following tasks:</p><ul><li>List, create, download, upload, and delete MVS data sets and members as well as z/OS UNIX System Services files and directories.</li><li>Submit jobs, list jobs and spool files, download or view spool content, view job status, cancel a job, and delete a job.</li></ul><p>For example, after you created your RSE profile for the user <code>USER1</code> and a data set with your COBOL programs called <code>USER1.SAMPLE.COBOL</code>, you can work on your MVS data sets with the following commands:</p><p>List your data sets and members:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse <span class="token function">ls</span> ds USER1
zowe rse <span class="token function">ls</span> all-members USER1.SAMPLE.COBOL
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Download members:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse download ds <span class="token string">&quot;USER1.SAMPLE.COBOL(SAM1)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>You will see that new folders appear on the left with the names based on your data set that contains the file SAM1. You can rename it by adding a <code>.cbl</code> extension to edit it in the COBOL editor, and then upload it later using drag-and-drop or via the command line.</p><p>Check the status of your jobs:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse <span class="token function">ls</span> js <span class="token operator">|</span> <span class="token function">grep</span> ACTIVE
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The command above shows an example of how RSE CLI plug-in commands can be used in combination with other Linux\xAE commands and scripts. This example returns the complete list of jobs and pipes that list into the Linux <code>grep</code> command to filter it down to show only the active jobs. This kind of capability enables you to define all kinds of batch jobs and automation for remotely interacting with z/OS.</p>`,12),A=n("For the full list of available commands, see "),R=n("IBM RSE API Plug-in for Zowe CLI commands"),U=n("."),M=i(`<h3 id="searching-for-files-on-unix-system-services-by-content-or-file-name" tabindex="-1"><a class="header-anchor" href="#searching-for-files-on-unix-system-services-by-content-or-file-name" aria-hidden="true">#</a> Searching for files on UNIX System Services by content or file name</h3><p>With RSE API Plug-in for Zowe CLI, you can search for files in UNIX System Services by file name or content. There are two types of outputs depending on whether content is included in the search query or not:</p><p>If content is not included, you will see a list of file paths that match the criteria passed in with the number of matches.</p><div class="language-Bash ext-Bash line-numbers-mode"><pre class="language-Bash"><code>$ zowe rse search uss /u/user &quot;*.txt&quot;

Found 3 results for search:
  - /u/user/example.txt
  - /u/user/test/example2.txt
  - /u/user/test/example3.txt
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>If content is included in the query and matches are found in the referenced file, you will see a list of file paths and its matched lines from the file&#39;s content.</p><div class="language-Bash ext-Bash line-numbers-mode"><pre class="language-Bash"><code>$ zowe rse search uss /u/user &quot;*.txt&quot; --t &quot;hello world!&quot;

Found 2 results for search:

/u/user/test/examples/example.txt -- 2 matches:

1) &quot;hello world! ...&quot;
   Line: 1 -- Start Offset: 1 -- end Offset: 17

1) &quot;.. hello world!&quot;
   Line: 5 -- Start Offset: 23 -- end Offset: 40

/u/user/test/examples/example.txt -- 1 match:

1) &quot;hello world! ...&quot;
   Line: 13 -- Start Offset: 12 -- end Offset: 30
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>To try this yourself, run the following command:</p><div class="language-Bash ext-Bash line-numbers-mode"><pre class="language-Bash"><code>zowe rse search uss &lt;uss-path&gt; &lt;file/pattern&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>There are also options that can be passed to this command such as:</p><ul><li><code>--text | -t (string)</code> The text pattern to be searched for in the provided file. Example: hello</li><li><code>--regex-file-name | --rfn (boolean)</code> Regex for filename. If Regex pattern is not used, wildcard patterns are used</li><li><code>--regex-content | --rc (boolean)</code> Regex for content. If Regex pattern is not used, wildcard patterns are used.</li><li><code>--case-sensitive-file-name | --csfn (boolean)</code> Case-sensitive for filename</li><li><code>--case-sensitive-content | --csc (boolean)</code> Case-sensitive for content</li><li><code>--path-results-only | --pro (boolean)</code> Reduce the response to only the path results</li></ul><p>When <code>text</code> is not passed in as an option by default the CLI command will act as if <code>--pathResultsOnly</code> is set to <code>true</code>, since there will be no matches to show, which provides a cleaner output (see example above).</p><h3 id="editing-files-in-the-terminal" tabindex="-1"><a class="header-anchor" href="#editing-files-in-the-terminal" aria-hidden="true">#</a> Editing files in the terminal</h3><p>The <code>edit</code> command enables you to edit the contents of a data set or UNIX file using the terminal and the default editor. To edit a data set, provide the full name, such as HLQ.DATASET for a sequential or HLQ.DATASET(MEMBER) for a partitioned data set member. To edit a UNIX file, specify the complete path, such as /u/user/test.txt, as shown in the syntax.</p><h4 id="edit-a-data-set" tabindex="-1"><a class="header-anchor" href="#edit-a-data-set" aria-hidden="true">#</a> Edit a Data Set</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse-api-for-zowe-cli edit data-set <span class="token operator">&lt;</span>dataset-name<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="edit-a-unix-system-services-file" tabindex="-1"><a class="header-anchor" href="#edit-a-unix-system-services-file" aria-hidden="true">#</a> Edit a UNIX System Services File</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse-api-for-zowe-cli edit uss-file <span class="token operator">&lt;</span>file-path<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>When run without any additional options, the command launches the default editor of the operating system and opens the contents of the specified data set or UNIX file for editing. You can also specify a different editor using --editor option, such as --editor vim / --editor nano. Make the necessary changes in the editor, then save and close it. After that, the terminal prompts you to confirm the upload:</p><div class="language-txt ext-txt line-numbers-mode"><pre class="language-txt"><code>Overwrite remote with local edits? (Answer after editing) y/n.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p><strong><code>y</code></strong> \u2192 Uploads changes to the mainframe successfully</p></li><li><p><strong><code>n</code></strong> \u2192 Exits without uploading; temporary file remains for further editing.</p></li></ul><h4 id="options-to-edit-file" tabindex="-1"><a class="header-anchor" href="#options-to-edit-file" aria-hidden="true">#</a> Options to Edit File</h4><ul><li><p><strong><code>--extension | --ext</code></strong> Set the file extension of the file for editing to leverage an editor&#39;s file-type-specific formatting, that is, &quot;--extension jcl&quot;.</p></li><li><p><strong><code>--editor | --ed</code></strong> Override the default editor for the specified file type. Set the option to the editor&#39;s executable file path or program name, that is, &quot;--editor vim&quot;.</p></li><li><p><strong><code>--binary | -b</code></strong> Transfer the file content in binary mode.</p></li><li><p><strong><code>--encoding | --ec</code></strong> Transfer the file content using encoding mode and ensure that data conversion occurs based on the specified file encoding.</p></li></ul><h3 id="comparing-files-in-the-terminal" tabindex="-1"><a class="header-anchor" href="#comparing-files-in-the-terminal" aria-hidden="true">#</a> Comparing files in the terminal</h3><p>The <code>compare</code> command enables you to compare the contents of two data sets, UNIX files, or spool files, as well as compare local files to a data set, UNIX file, or spool file using the terminal and the default browser. To compare data sets, provide the full name, such as HLQ.DATASET for a sequential or HLQ.DATASET(MEMBER) for a partitioned data set member. To compare UNIX files, specify the complete path, such as /u/user/test.txt, as shown in the syntax. To compare spool files, specify the spool description in the format of jobName1:jobId1:spoolId1, as shown in the syntax.</p><h4 id="compare-data-sets" tabindex="-1"><a class="header-anchor" href="#compare-data-sets" aria-hidden="true">#</a> Compare data sets</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse-api-for-zowe-cli compare data-set <span class="token operator">&lt;</span>dataSetName<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> <span class="token operator">&lt;</span>dataSetName<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="compare-a-local-file-with-a-data-set" tabindex="-1"><a class="header-anchor" href="#compare-a-local-file-with-a-data-set" aria-hidden="true">#</a> Compare a local file with a data set</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse-api-for-zowe-cli compare local-file-data-set <span class="token operator">&lt;</span>localFilePath<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>dataSetName<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="compare-a-local-file-with-a-spool-file" tabindex="-1"><a class="header-anchor" href="#compare-a-local-file-with-a-spool-file" aria-hidden="true">#</a> Compare a local file with a spool file</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse-api-for-zowe-cli compare local-file-spool-dd <span class="token operator">&lt;</span>localFilePath<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>spoolDescription<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="compare-a-local-file-with-a-z-os-unix-file" tabindex="-1"><a class="header-anchor" href="#compare-a-local-file-with-a-z-os-unix-file" aria-hidden="true">#</a> Compare a local file with a z/OS UNIX file</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse-api-for-zowe-cli compare local-file-uss-file <span class="token operator">&lt;</span>localFilePath<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>ussFilePath<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="compare-spool-files" tabindex="-1"><a class="header-anchor" href="#compare-spool-files" aria-hidden="true">#</a> Compare spool files</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse-api-for-zowe-cli compare spool-dd <span class="token operator">&lt;</span>spoolDescription<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> <span class="token operator">&lt;</span>spoolDescription<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="compare-a-z-os-unix-file" tabindex="-1"><a class="header-anchor" href="#compare-a-z-os-unix-file" aria-hidden="true">#</a> Compare a z/OS UNIX File</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse-api-for-zowe-cli compare uss-files <span class="token operator">&lt;</span>ussFilePath<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> <span class="token operator">&lt;</span>ussFilePath<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>When run without any additional options, the command launches in the terminal and shows the contents of the specified files with the differences between them highlighted. Pass the <code>--browser-view</code> option to open the files and display the highlighted differences in the default browser.</p><h4 id="options-to-compare-file" tabindex="-1"><a class="header-anchor" href="#options-to-compare-file" aria-hidden="true">#</a> Options to Compare File</h4><ul><li><p><strong><code>--encoding | --ec</code></strong> Transfer the content of the first data set using encoding mode, which performs data conversion based on the specified file encoding . If encoding mode is set and the <code>encoding2</code> flag is not set, both data sets are transferred using encoding mode.</p></li><li><p><strong><code>encoding2 | --ec2</code></strong> Transfer the content of the second data set with its own encoding mode.</p></li><li><p><strong><code>context-lines | --cl</code></strong> The number of context lines that display before and after detected non-matching lines. By default, all matching lines are displayed. If you want to limit the amount of data returned to only lines with differences, use the context lines option to reduce the matching lines to only those before and after non-matching lines. Using a value of 0 removes all matching lines.</p></li><li><p><strong><code>browser-view | --bv</code></strong> Opens the differences between two given files in the browser.</p></li><li><p><strong><code>seqnum | --sn</code></strong> If you compare two files that contain sequence numbers, this option controls whether the sequence numbers are removed from the end of each string. By default, sequence numbers are preserved. Use the --no-seqnum option to exclude them.</p></li></ul><hr><h3 id="working-with-z-os-unix-archive-files" tabindex="-1"><a class="header-anchor" href="#working-with-z-os-unix-archive-files" aria-hidden="true">#</a> Working with z/OS UNIX Archive Files</h3><p>The <code>archive</code> commands enable you to interact with files and directories inside archive files such as <code>.zip</code> or <code>.tar</code> located in the z/OS UNIX System Services. You can list archive contents, retrieve file data, update files using local content, or delete files within an archive.</p><h4 id="list-files-in-an-archive" tabindex="-1"><a class="header-anchor" href="#list-files-in-an-archive" aria-hidden="true">#</a> List Files in an Archive</h4><p>Lists the files and directories inside a z/OS UNIX System Services archive. You can specify a relative path to narrow down the listing. This enables quick inspection of the archive contents without file extraction and is ideal for archive structure verification before you perform further operations.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Usage:</span>
zowe rse-api-for-zowe-cli archive list-files <span class="token operator">&lt;</span>archivePath<span class="token operator">&gt;</span> <span class="token punctuation">[</span>relativePath<span class="token punctuation">]</span>

<span class="token comment"># List root directory in the archive</span>
zowe rse-api-for-zowe-cli archive list-files <span class="token string">&quot;/u/ibmuser/archive.zip&quot;</span>

<span class="token comment"># List contents of a specific folder within the archive</span>
zowe rse-api-for-zowe-cli archive list-files <span class="token string">&quot;/u/ibmuser/archive.zip&quot;</span> <span class="token string">&quot;test/&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li><strong>Aliases</strong>: <code>lf</code></li></ul><h4 id="get-file-content-from-an-archive" tabindex="-1"><a class="header-anchor" href="#get-file-content-from-an-archive" aria-hidden="true">#</a> Get File Content from an Archive</h4><p>Retrieves the content of a file within a z/OS UNIX System Services archive. You can view the content directly or download it locally with encoding support. This command is useful to inspect or save specific files from the archive and supports flexible options to handle different file types and encodings.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Usage:</span>
zowe rse-api-for-zowe-cli archive get-content <span class="token operator">&lt;</span>archivePath<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>relativePath<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>

<span class="token comment"># Retrieve the content of a file from archive</span>
zowe rse-api-for-zowe-cli archive get-content <span class="token string">&quot;/u/ibmuser/archive.zip&quot;</span> <span class="token string">&quot;test/tst.txt&quot;</span>

<span class="token comment"># Download file from archive and save locally</span>
zowe rse-api-for-zowe-cli archive get-content <span class="token string">&quot;/u/ibmuser/archive.zip&quot;</span> <span class="token string">&quot;test/tst.txt&quot;</span> -f <span class="token string">&quot;./local-output.txt&quot;</span>

<span class="token comment"># Use additional encoding options when required</span>
zowe rse-api-for-zowe-cli archive get-content <span class="token string">&quot;/u/ibmuser/archive.zip&quot;</span> <span class="token string">&quot;test/tst.txt&quot;</span> -f <span class="token string">&quot;./local-output.txt&quot;</span> --encoding IBM-1047 --local-encoding utf-8
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li><strong>Aliases</strong>: <code>gc</code></li></ul><h4 id="update-file-content-in-an-archive" tabindex="-1"><a class="header-anchor" href="#update-file-content-in-an-archive" aria-hidden="true">#</a> Update File Content in an Archive</h4><p>Updates the content of a file inside a z/OS UNIX System Services archive using a local file. This enables you to modify and create new files within the archive without full extraction and also supports binary and encoding options as follows. It provides a convenient way to keep archive contents up to date.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Usage:</span>
zowe rse-api-for-zowe-cli archive update-content <span class="token operator">&lt;</span>archivePath<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>relativePath<span class="token operator">&gt;</span> -f <span class="token operator">&lt;</span>localFilePath<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>

<span class="token comment"># Update archive file using content from a local file</span>
zowe rse-api-for-zowe-cli archive update-content <span class="token string">&quot;/u/ibmuser/archive.zip&quot;</span> <span class="token string">&quot;test/tst.txt&quot;</span> -f <span class="token string">&quot;./updated.txt&quot;</span>

<span class="token comment"># Include encoding when required</span>
zowe rse-api-for-zowe-cli archive update-content <span class="token string">&quot;/u/ibmuser/archive.zip&quot;</span> <span class="token string">&quot;test/tst.txt&quot;</span> -f <span class="token string">&quot;./updated.txt&quot;</span> --encoding IBM-1047 --local-encoding utf-8
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li><strong>Aliases</strong>: <code>uc</code></li></ul><h4 id="delete-a-file-from-an-archive" tabindex="-1"><a class="header-anchor" href="#delete-a-file-from-an-archive" aria-hidden="true">#</a> Delete a File from an Archive</h4><p>Deletes a file or directory from within a z/OS UNIX System Services archive. This command enables you to clean up archive contents remotely without unpacking the archive. It safely removes unwanted items directly on the server.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Usage:</span>
zowe rse-api-for-zowe-cli archive delete <span class="token operator">&lt;</span>archivePath<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>relativePath<span class="token operator">&gt;</span>

<span class="token comment"># Delete a file from the archive</span>
zowe rse-api-for-zowe-cli archive delete <span class="token string">&quot;/u/ibmuser/archive.zip&quot;</span> <span class="token string">&quot;test/tst.txt&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><strong>Aliases</strong>: <code>d</code></li></ul><h4 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h4><p>The following are the common options supported by applicable archive commands for <code>get-content</code> and <code>update-content</code>:</p><ul><li><p><strong><code>--file &lt;path&gt;</code> | <code>-f</code></strong><br> Specifies the local file path used to upload content to or download content from an archive. When used with <code>get-content</code>, this path serves as the destination where the archive file content is saved. When used with <code>update-content</code>, it serves as the source of the local file that is uploaded into the archive. If not specified with <code>get-content</code>, the content is displayed in the terminal or returned inline.</p></li><li><p><strong><code>--binary</code> | <code>-b</code></strong><br> Indicates whether the transfer is treated as binary. By default, this is <code>true</code>. If set to <code>false</code>, the transfer occurs in text mode to enable character encoding conversions.</p></li><li><p><strong><code>--encoding &lt;hostEncoding&gt;</code> | <code>--ec</code></strong><br> The character encoding used by the file on the z/OS UNIX host. When you retrieve or upload a text file, this option ensures accurate translation between the host and local environments. For example: <code>--encoding IBM-1047</code>.</p></li><li><p><strong><code>--local-encoding &lt;encoding&gt;</code> | <code>--lc</code></strong><br> The encoding used on your local system for the file you upload or save. Use this when the local file uses a specific character set different from the host. For example: <code>--local-encoding utf-8</code>.</p></li></ul><h4 id="command-summary" tabindex="-1"><a class="header-anchor" href="#command-summary" aria-hidden="true">#</a> Command Summary</h4><table><thead><tr><th>Command</th><th>Description</th><th>Alias</th></tr></thead><tbody><tr><td><code>list-files</code></td><td>List contents of a z/OS UNIX archive</td><td><code>lf</code></td></tr><tr><td><code>get-content</code></td><td>Get file content from an archive</td><td><code>gc</code></td></tr><tr><td><code>update-content</code></td><td>Update a file inside an archive using a local file</td><td><code>uc</code></td></tr><tr><td><code>delete</code></td><td>Delete a file or folder from an archive</td><td><code>d</code></td></tr></tbody></table><hr><h3 id="working-with-vsam-data-sets" tabindex="-1"><a class="header-anchor" href="#working-with-vsam-data-sets" aria-hidden="true">#</a> Working with VSAM data sets</h3><p>RSE API v1.2.3 introduces VSAM support for <code>allocateLike</code> and <code>delete</code> actions.</p><p>Allocate Like VSAM:</p><p>Create another VSAM data set with identical attributes:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse create ds HLQ.SAMPLE.ALL --like HLQ.SAMPLE.VSAM
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Delete VSAM:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse delete ds HLQ.SAMPLE.VSAM
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="running-interactive-tso-commands" tabindex="-1"><a class="header-anchor" href="#running-interactive-tso-commands" aria-hidden="true">#</a> Running interactive TSO commands</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse issue cmd <span class="token string">&quot;TSO EX &#39;HLQ.REXX.EXEC(ASKNAME)&#39;&quot;</span> --shell-id myshell
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The system prompts for a response:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>What is your name?
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Enter your response:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe rse issue cmd <span class="token string">&quot;BABE RUTH&quot;</span> --shell-id myshell
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The system again responds:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Your name is:  BABE RUTH
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The preceding example shows how RSE CLI plug-in commands can be used to execute interactive TSO commands by using the <code>--shell-id</code> option. This example executes a REXX exec that prompts the user for a name. It also demonstrates how to respond and allow the interactive command to continue to completion.</p><h3 id="getting-help-about-commands-and-options" tabindex="-1"><a class="header-anchor" href="#getting-help-about-commands-and-options" aria-hidden="true">#</a> Getting help about commands and options</h3><p>To learn about a command and all options for the command, add <code>--help</code> after the command. For example, by specifying <code>zowe rse list --help</code>, you can see all the different items that can be listed and a help response like this in the terminal:</p><div class="language-terminal ext-terminal line-numbers-mode"><pre class="language-terminal"><code>DESCRIPTION
 -----------

   List z/OS UNIX System Services file and folders, data sets and data set members, or jobs and spool
   files. Optionally, you can list their details and attributes.

 USAGE
 -----

   zowe rse-api-for-zowe-cli list &lt;command&gt;

   Where &lt;command&gt; is one of the following:

 COMMANDS
 --------

   all-members | am            List all members of a pds
   data-set | ds               List data sets
   jobs | js                   List z/OS jobs on JES spool/queues
   spool-files-by-jobid | sfbj List spool files of a z/OS job
   uss-files | uss             List z/OS UNIX System Services files

GLOBAL OPTIONS
 --------------

   --response-format-json  | --rfj (boolean)

      Produce JSON formatted data from a command

   --help  | -h (boolean)

      Display help text

   --help-examples  (boolean)

      Display examples for all the commands in a the group

   --help-web  | --hw (boolean)

      Display HTML help in browser

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>If you want to view the help response in a web browser, enter <code>--help-web</code>. For example, <code>zowe rse list --help-web</code>.</p><p><img src="`+p+'" alt="Online Help rendered as a web page"></p><h3 id="debugging-cli-commands-via-logs" tabindex="-1"><a class="header-anchor" href="#debugging-cli-commands-via-logs" aria-hidden="true">#</a> Debugging CLI commands via logs</h3><p>RSE CLI plug-in will write logs to Zowe CLI&#39;s log file located in <code>~/.zowe/zowe/zowe.log</code>. The default log level for Zowe CLI&#39;s logging is <code>WARN</code>. To change the log level, set the environment variable <code>ZOWE_APP_LOG_LEVEL</code> to the preferred level.</p>',87),P=n("For more information about Zowe CLI's logging, see "),B={href:"https://docs.zowe.org/stable/user-guide/cli-configuringcli-ev/#setting-cli-log-levels",target:"_blank",rel:"noopener noreferrer"},N=n("Setting CLI log levels"),F=n("."),j=e("h2",{id:"using-zowe-cli-z-osmf-commands",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#using-zowe-cli-z-osmf-commands","aria-hidden":"true"},"#"),n(" Using Zowe CLI z/OSMF commands")],-1),D=e("h3",{id:"prerequisites-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prerequisites-1","aria-hidden":"true"},"#"),n(" Prerequisites")],-1),X=n("Installing Zowe CLI"),Z=n("Creating a connection profile using Zowe CLI guide"),V=i(`<h3 id="running-zowe-cli-commands" tabindex="-1"><a class="header-anchor" href="#running-zowe-cli-commands" aria-hidden="true">#</a> Running Zowe CLI commands</h3><p>For example, after you created your Zowe CLI z/OSMF profile for the user <code>USER1</code> and a data set with your COBOL programs called <code>USER1.SAMPLE.COBOL</code>, you can work on your MVS data sets with the following commands:</p><ul><li><p>List your data sets and members:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe files <span class="token function">ls</span> ds USER1
zowe files <span class="token function">ls</span> all-members USER1.SAMPLE.COBOL
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>Download members:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe files download ds <span class="token string">&quot;USER1.SAMPLE.COBOL(SAM1)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>You will see that new folders appear on the left with the names based on your data set that contains the file SAM1. You can rename it by adding a <code>.cbl</code> extension to edit it in the COBOL editor, and then upload it later using drag-and-drop or via the command line.</p></li><li><p>Check the status of your jobs:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zowe <span class="token function">jobs</span> <span class="token function">ls</span> js <span class="token operator">|</span> <span class="token function">grep</span> ACTIVE
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The preceding command shows an example of how Zowe CLI commands can be used in combination with other Linux commands and scripts. This example returns the complete list of jobs and pipes that list into the Linux <code>grep</code> command to filter it down to show only the active jobs. This kind of capability enables you to define all kinds of batch jobs and automation for remotely interacting with z/OS.</p></li></ul><p>For an overview of available Zowe CLI commands, type <code>zowe --help</code>.</p>`,4),W=n("To learn about all the capabilities of Zowe CLI, see "),H={href:"https://docs.zowe.org/stable/user-guide/cli-using-usingcli",target:"_blank",rel:"noopener noreferrer"},Y=n("Zowe CLI Online Documentation"),Q=n(".");function G(J,$){const o=r("ExternalLinkIcon"),a=r("RouterLink");return l(),c(d,null,[m,e("p",null,[b,e("a",f,[g,s(o)]),v]),w,e("ul",null,[e("li",null,[e("p",null,[x,e("a",y,[k,s(o)]),S])]),z]),e("p",null,[_,s(a,{to:"/Docs/rse_cli_command.html"},{default:t(()=>[I]),_:1}),L]),q,O,e("ul",null,[e("li",null,[s(a,{to:"/Docs/setup_integration.html#installing-ibm-rse-api-plug-in-for-zowe-cli"},{default:t(()=>[C]),_:1})]),e("li",null,[s(a,{to:"/Docs/connect_to_zos_with_zowe_cli_e2e.html"},{default:t(()=>[E]),_:1})])]),T,e("p",null,[A,s(a,{to:"/Docs/rse_cli_command.html"},{default:t(()=>[R]),_:1}),U]),M,e("p",null,[P,e("a",B,[N,s(o)]),F]),j,D,e("ul",null,[e("li",null,[s(a,{to:"/Docs/setup_integration.html#installing-zowe-cli"},{default:t(()=>[X]),_:1})]),e("li",null,[s(a,{to:"/Docs/connect_to_zos_with_zowe_cli_e2e.html"},{default:t(()=>[Z]),_:1})])]),V,e("p",null,[W,e("a",H,[Y,s(o)]),Q])],64)}var se=h(u,[["render",G]]);export{se as default};
