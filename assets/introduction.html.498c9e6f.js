import{r,o as a,a as l,b as e,d as t,w as s,F as d,e as o,c}from"./app.0ad13b50.js";import{_ as h}from"./plugin-vue_export-helper.21dcd24c.js";const p={},u=e("h1",{id:"introduction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),o(" Introduction")],-1),_=o("IBM Z\xAE Open Editor is an extension for Visual Studio Code that provides language support for the IBM\xAE Enterprise "),g={href:"https://www.ibm.com/docs/en/cobol-zos/6.4",target:"_blank",rel:"noopener noreferrer"},f=o("COBOL 6.4"),m=o(", "),b={href:"https://www.ibm.com/docs/en/epfz/6.1",target:"_blank",rel:"noopener noreferrer"},w=o("PL/I 6.1"),v=o(", "),y={href:"https://www.ibm.com/docs/en/hla-and-tf/1.6",target:"_blank",rel:"noopener noreferrer"},S=o("High Level Assembler for z/OS 3.1"),k=o(", "),L={href:"https://www.ibm.com/docs/en/zos/3.1.0?topic=tsoe-zos-rexx-users-guide",target:"_blank",rel:"noopener noreferrer"},B=o("z/OS TSO/E REXX"),C=o(", and "),O={href:"https://www.ibm.com/docs/en/SSLTBW_3.1.0/pdf/ieab600_v3r1.pdf",target:"_blank",rel:"noopener noreferrer"},I=o("z/OS MVS JCL (Job Control Language)"),x=o(" programming languages for z/OS\xAE. This also includes capabilities for embedded statements for CICS 6.2, IMS 15.1.0 and SQL DB2 for z/OS 12.1. Earlier versions of any of these components will also work."),E=o("The extension realizes its language support by implementing fully functional "),M={href:"https://langserver.org/",target:"_blank",rel:"noopener noreferrer"},z=o("language servers"),P=o(" together with additional editor enhancements that enable mainframe developers to utilize features such as:"),V=c("<ul><li>Real-time syntax checking and highlighting while you type</li><li>Problems view with all syntax errors and (in COBOL) unreachable code</li><li>Outline view and outline search</li><li>For both variables and paragraphs: <ul><li>Declaration hovers</li><li>Peek definition</li><li>Go to definition</li><li>Find all references</li></ul></li><li>Code and variable completion</li><li>Finding and navigating references</li><li>Previewing of copybooks and include files</li><li>Navigate to copybooks and include files</li><li>Refactoring such as &quot;rename symbol&quot;</li><li>Custom code snippet support and more than 200 example code snippets out of the box</li><li>Search and replace refactoring across multiple program files</li></ul>",1),D=o("For a detailed list of the enabled LSP features and in-progress features, see "),Z=o("Known issues and limitations"),A=o("."),F=e("h2",{id:"key-capabilities",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#key-capabilities","aria-hidden":"true"},"#"),o(" Key Capabilities")],-1),R=e("p",null,"These are the key features and benefits of IBM Z Open Editor:",-1),T=e("li",null,[e("p",null,"Modern editing experience for COBOL, PL/I, HLASM, REXX, and JCL development"),e("p",null,"IBM Z Open Editor is available as an extension for Visual Studio Code (VS Code), which is the most popular development environment according to recent surveys. With so many current and next generation developers having experience with VS Code, IBM Enterprise language support in VS Code makes enterprise programming more attractive and productive by allowing developers to use this popular editor, with the option to integrate numerous other extensions from the VS Code Marketplace.")],-1),U=e("p",null,"Full language support via the Language Server Protocol (LSP)",-1),X=o("The extension supports many COBOL, PL/I, HLASM, REXX, and JCL capabilities that were not available in traditional editing environments such as "),H={href:"https://www.ibm.com/docs/en/zos-basic-skills?topic=ispf-editor",target:"_blank",rel:"noopener noreferrer"},N=o("ISPF"),J=o(", by providing "),Y={href:"https://langserver.org/",target:"_blank",rel:"noopener noreferrer"},W=o("Language Server Protocol"),q=o(" implementations. See above for the list of key features. Although supported by many other editors now, the Language Server Protocol was specifically created for VS Code and therefore is a good way for providing language support in the editor."),G=e("li",null,[e("p",null,"Extended language server capabilities for more productivity"),e("p",null,[o("In addition to the capabilities specified in the Language Server Protocol, the implementation is extended with more capabilities that are useful to enterprise developers. For example, you can use hovers for COBOL "),e("code",null,"COPY"),o(", PL/I "),e("code",null,"%INCLUDE"),o(", and HLASM "),e("code",null,"COPY"),o(" statements to preview the contents of the copybooks without opening in separate editor tabs and navigating away from your current editing position.")])],-1),K=e("p",null,"Integration with modern Software Configuration Management (SCM)",-1),j=o("Even if your organization does not standardize on an SCM, using the Git that is integrated in VS Code or using popular extensions such as "),Q={href:"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens",target:"_blank",rel:"noopener noreferrer"},$=o("GitLens"),ee=o(` locally in a workspace will boost your productivity. You can work on COBOL, PL/I, HLASM, REXX, and JCL programs on your local workspace and snapshot work at any point, go back or branch into alternative explorations, merge your or your colleagues' branches back in, or revert to any earlier state of your code in a flash. Use side-by-side views and "blame" annotations to explore the changes between snapshots, how they looked before, and the time of changes. See exactly for each line when it was last changed and by whom. Explore the entire history of all changes for a specific file or all files in your workspace in a chronological history viewer.`),oe=e("p",null,"z/OS interactions using the open source Zowe clients",-1),te=o("If you have z/OSMF or "),ne=o("IBM Remote System Explorer API (RSE API)"),ie=o(" configured, you can use "),se={href:"https://docs.zowe.org/stable/user-guide/cli-using-usingcli",target:"_blank",rel:"noopener noreferrer"},re=o("Zowe CLI"),ae=o(", the "),le={href:"https://docs.zowe.org/stable/user-guide/ze-install.html",target:"_blank",rel:"noopener noreferrer"},de=o("Zowe Explorer VS Code Extension (Zowe Explorer)"),ce=o(", or both, to load and edit your files directly from z/OS or download them into your local workspace and then upload the changed files into the same or new data sets to compile and run your application. You can do all of these operations from IBM Z Open Editor directly with right-clicks and dialog interactions, and perform command-line operations using the VS Code Terminal view that integrates right below your editor, giving you one central view to everything."),he=e("p",null,"After configuration, IBM Z Open Editor can also take advantage of the Zowe CLI protocol for resolving dependencies over the network. For example, you can edit your COBOL programs locally, but resolve copybook dependencies directly out of MVS\u2122 using the same Zowe connections.",-1),pe=e("p",null,"IBM User Build",-1),ue=o("IBM User Build allows z/OS developers who have the IBM Dependency Based Build (DBB) v2 and v3 host component to run user builds right from their local integrated development environment (IDE). With the User Build setting enabled in your IDE, you can access IBM User Build options simply by right-clicking inside a COBOL, PL/I, or HLASM file. Refer to the "),_e={href:"https://www.ibm.com/docs/en/developer-for-zos/16.0?topic=code-setting-up-user-build",target:"_blank",rel:"noopener noreferrer"},ge=o("full IBM User Build documentation"),fe=o(" to learn more about how to leverage User Build."),me=e("p",null,"Enterprise-level advanced capabilities",-1),be=o("IBM Z Open Editor v4 introduced advanced capabilities for enterprise-level development use cases that go beyond programming and simple z/OS Resources access. You would typically find such features in IBM's commercial zDevOps solutions such as IBM Developer for z/OS Enterprise Edition (IDzEE). These are at the moment an advanced green screen emulator, preprocessor support for COBOL and PL/I, a new Web view built on top of Zowe Explorer that displays z/OS resources such as data sets, unix files and jobs in a sortable table, custom HLASM macro support and a new DBB user build VS Code Problems view integration. Find a detailed exploration of these features in the "),we=o("Advanced Capabilities"),ve=o(" section.");function ye(Se,ke){const n=r("ExternalLinkIcon"),i=r("RouterLink");return a(),l(d,null,[u,e("p",null,[_,e("a",g,[f,t(n)]),m,e("a",b,[w,t(n)]),v,e("a",y,[S,t(n)]),k,e("a",L,[B,t(n)]),C,e("a",O,[I,t(n)]),x]),e("p",null,[E,e("a",M,[z,t(n)]),P]),V,e("p",null,[D,t(i,{to:"/Docs/knownissues.html"},{default:s(()=>[Z]),_:1}),A]),F,R,e("ul",null,[T,e("li",null,[U,e("p",null,[X,e("a",H,[N,t(n)]),J,e("a",Y,[W,t(n)]),q])]),G,e("li",null,[K,e("p",null,[j,e("a",Q,[$,t(n)]),ee])]),e("li",null,[oe,e("p",null,[te,t(i,{to:"/Docs/setup_integration.html#installing-the-requisite-ibm-rse-api-z-os-host-component"},{default:s(()=>[ne]),_:1}),ie,e("a",se,[re,t(n)]),ae,e("a",le,[de,t(n)]),ce]),he]),e("li",null,[pe,e("p",null,[ue,e("a",_e,[ge,t(n)]),fe])]),e("li",null,[me,e("p",null,[be,t(i,{to:"/Docs/advanced_overview.html"},{default:s(()=>[we]),_:1}),ve])])])],64)}var Ce=h(p,[["render",ye]]);export{Ce as default};
