(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{510:function(e,t,a){"use strict";a.r(t);var r=a(45),i=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"ibm-wazi-developer-for-red-hat-codeready-workspaces-set-up-an-ssl-certificate-in-an-openshift-container-platform"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ibm-wazi-developer-for-red-hat-codeready-workspaces-set-up-an-ssl-certificate-in-an-openshift-container-platform"}},[e._v("#")]),e._v(" IBM Wazi Developer for Red Hat CodeReady Workspaces: Set up an SSL Certificate in an OpenShift Container Platform")]),e._v(" "),a("blockquote",[a("p",[e._v("by Arvin Bhatnagar")])]),e._v(" "),a("p",[e._v("A number of cloud based applications that run on OpenShift速 Container Platform (OCP) uses a signed "),a("a",{attrs:{href:"https://www.ibm.com/support/knowledgecenter/SSCH39_1.0.0/org.eclipse.rse.doc.user/tasks/tworkssl.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("SSL certificate"),a("OutboundLink")],1),e._v(" to provide encryption over the wire. For instance, "),a("a",{attrs:{href:"https://www.ibm.com/products/wazi-developer",target:"_blank",rel:"noopener noreferrer"}},[e._v("IBM速 Wazi Developer for Red Hat速 CodeReady Workspaces"),a("OutboundLink")],1),e._v(", a single integrated solution that delivers a cloud native development experience for z/OS速, uses a signed SSL certificate for encryption by default. More information about IBM Wazi Developer for Red Hat CodeReady Workspaces can be found in the "),a("a",{attrs:{href:"https://www.ibm.com/support/knowledgecenter/SSCH39_1.0.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Knowledge Center"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"why-a-signed-ssl-certificate-is-needed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-a-signed-ssl-certificate-is-needed"}},[e._v("#")]),e._v(" Why a signed SSL certificate is needed")]),e._v(" "),a("p",[e._v("Setting up an OpenShift Container Platform with a signed SSL certificate can present a number of challenges. The challenges are due to complex cloud architectures and the various formats and types of certificates to contend with. These complexities and the volume of information can make the overall process overwhelming to simply replace a default "),a("code",[e._v("self-signed")]),e._v(" certificate with a "),a("code",[e._v("signed")]),e._v(" certificate from a "),a("code",[e._v("trusted")]),e._v(" CA server.")]),e._v(" "),a("p",[e._v("An OCP "),a("a",{attrs:{href:"https://docs.openshift.com/container-platform/4.3/networking/configuring_ingress_cluster_traffic/configuring-ingress-cluster-traffic-ingress-controller.html#configuring-ingress-cluster-traffic-ingress-controller",target:"_blank",rel:"noopener noreferrer"}},[e._v("Ingress Controller"),a("OutboundLink")],1),e._v(" accepts external web based requests and proxys them based on the configured routes. The default certificate for an Ingress Controller is a self-signed certificate used for all applications under the "),a("code",[e._v(".apps")]),e._v(" subdomain. Replacing the default certificate with one issued by a public Certificate of Authority (CA) allows incoming requests to connect securely to cloud based applications without the hassle of security warnings.")]),e._v(" "),a("h2",{attrs:{id:"how-to-set-up-a-signed-ssl-certificate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-set-up-a-signed-ssl-certificate"}},[e._v("#")]),e._v(" How to set up a signed SSL certificate")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Request a certificate.")]),e._v(" "),a("p",[e._v("The certificate for the Ingress Controller "),a("code",[e._v(".apps")]),e._v(" subdomain must be a wildcard certificate. For example, if the domain of the OCP is "),a("code",[e._v("openshift.ibm.com")]),e._v(" then the wildcard would be "),a("code",[e._v("*.apps.openshift.ibm.com")]),e._v(". A sample certificate server request using the "),a("a",{attrs:{href:"https://www.openssl.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("OpenSSL tool"),a("OutboundLink")],1),e._v(" would be something similar to the following:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("openssl req -new -sha256 -nodes -out certserverrequest.csr -newkey rsa:2048 -keyout certserverkey.key -config <(\ncat <<-EOF\n[ req ]\ndefault_bits = 2048\nprompt = no\ndefault_md = sha256\ndistinguished_name = dn\nreq_extensions = req_ext\n[ dn ]\nC=US\nST=State\nL=Local\nO=IBM\nOU=Cluster Admins R Us\nCN=*.apps.openshift.ibm.com\n\n[ req_ext ]\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1 = *.apps.openshift.ibm.com\nEOF\n)\n")])])]),a("p",[a("strong",[e._v("Note:")]),e._v(" Remember to save the generated private key file. We will be using this later on. Also, the OpenSSL tool is not installed on Windows by default.")])]),e._v(" "),a("li",[a("p",[e._v("Convert the format of the certificate.")]),e._v(" "),a("p",[e._v("Certificates come in multiple formats. Ultimately we need a certificate in "),a("strong",[e._v("PEM")]),e._v(" or Privacy Enhanced Mail format to install into the OCP. A PEM formatted certificate, when opened with a text editor will start with "),a("code",[e._v("-----BEGIN CERTIFICATE-----")]),e._v(" followed by a Base64 encoded DER certificate and end with "),a("code",[e._v("-----END CERTIFICATE-----")]),e._v(". A PEM formatted certificate can contain multiple certificates, this is important because we will need to combine the wildcard certificate, the intermediate certificate, and the root certificate into a single file for installing into the OCP.")]),e._v(" "),a("p",[e._v("Once a certificate is issued from the CA it might be in a PKCS#12 or PFX format which is an encrypted file. To convert a PKCS#12 certificate into a PEM formatted certificate issue the following "),a("code",[e._v("openssl")]),e._v(" command. Remember to do this for the intermediate and root certificates as well (if needed).")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("openssl x509 -inform DER -outform DER -text -in <issuedcert.crt> -out <issuedcert.pem>\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Combine the issued wildcard certificate, the intermediate certificate, and the root certificate into a single PEM formatted certificate.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cat <issuedcert.pem> <intermediatecert.pem> <rootcert.pem> > ocpcert.pem\n")])])])])]),e._v(" "),a("h2",{attrs:{id:"deploy-the-ssl-certificate-into-ocp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-the-ssl-certificate-into-ocp"}},[e._v("#")]),e._v(" Deploy the SSL Certificate into OCP")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Log in to the OCP.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("oc login https://api.openshift.ibm.com:6443 -u kubeadmin\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Create a "),a("code",[e._v("configmap")]),e._v(" called "),a("em",[e._v("custom-ca")]),e._v(" in the "),a("strong",[e._v("openshift-config")]),e._v(" namespace using "),a("code",[e._v("ocpcert.pem")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("oc create configmap custom-ca --from-file=ca-bundle.crt=<ocpcert.pem> -n openshift-config\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Update the "),a("strong",[e._v("cluster-wide")]),e._v(" proxy configuration with the "),a("code",[e._v("configmap")]),e._v(" we just created.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('oc patch proxy/cluster --type=merge --patch=\'{"spec":{"trustedCA":{"name":"custom-ca"}}}\'\n')])])])]),e._v(" "),a("li",[a("p",[e._v("Create a "),a("code",[e._v("secret")]),e._v(" for the certificate and private key using "),a("code",[e._v("ocpcert.pem")]),e._v(" and "),a("code",[e._v("certserverkey.key")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("oc create secret tls <Secret Name> --cert=<ocpcert.pem> --key=<certserverkey.key> -n openshift-ingress\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Update the Ingress Controller configuration with the "),a("code",[e._v("secret")]),e._v(" we just created.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('oc patch ingresscontroller.operator default --type=merge -p \'{"spec":{"defaultCertificate": {"name": "<Secret Name>"}}}\' -n openshift-ingress-operator\n')])])]),a("blockquote",[a("p",[e._v("Reference\n"),a("a",{attrs:{href:"https://docs.openshift.com/container-platform/4.3/authentication/certificates/replacing-default-ingress-certificate.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Replacing the default ingress certificate"),a("OutboundLink")],1)])])])]),e._v(" "),a("p",[e._v("When a "),a("code",[e._v("signed")]),e._v(" SSL certificate iss issued by a "),a("code",[e._v("trusted")]),e._v(" CA server, then there is no further configurations required by the client browser accessing applications running on the OpenShift Container Platform from the "),a("code",[e._v(".apps")]),e._v(" subdomain. It is recommended to use certificates from a "),a("code",[e._v("trusted")]),e._v(" CA server versus a "),a("code",[e._v("self-signed")]),e._v(" SSL certificate which would require further configurations on all client browsers to import both the intermediate and root certificates.")]),e._v(" "),a("p",[e._v("The approach and instructions introduced in this article applies to an OpenShift Container Platform 4.3, but it might be applicable to later versions. Always confirm with the OpenShift documentation before proceeding.")])])}),[],!1,null,null,null);t.default=i.exports}}]);