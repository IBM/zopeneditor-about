(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{402:function(e,t,o){e.exports=o.p+"assets/img/wazi-development-client-arch.c33533ea.png"},403:function(e,t,o){e.exports=o.p+"assets/img/wazi-development-client-dashboard.8d4c8fce.png"},404:function(e,t,o){e.exports=o.p+"assets/img/wazi-development-client-ibm-z-open-editor-cobol.ef947126.png"},405:function(e,t,o){e.exports=o.p+"assets/img/wazi-development-client-ibm-z-open-editor-pl1.1ff2315e.png"},406:function(e,t,o){e.exports=o.p+"assets/img/wazi-development-client-ibm-z-open-editor-assembler.e29e19de.png"},407:function(e,t,o){e.exports=o.p+"assets/img/wazi-development-client-ibm-user-build.0e7b3379.png"},408:function(e,t,o){e.exports=o.p+"assets/img/wazi-development-client-zowe-explorer.3c250658.png"},409:function(e,t,o){e.exports=o.p+"assets/img/wazi-development-client-zowe-cli.f65aa2d2.png"},410:function(e,t,o){e.exports=o.p+"assets/img/wazi-development-client-ibm-rse-api.b8e86140.png"},481:function(e,t,o){"use strict";o.r(t);var n=o(45),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"kubernetes-native-integrated-z-developer-environment-with-ibm-wazi-for-red-hat-codeready-workspaces-development-client"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-native-integrated-z-developer-environment-with-ibm-wazi-for-red-hat-codeready-workspaces-development-client"}},[e._v("#")]),e._v(" Kubernetes-Native Integrated Z Developer Environment with IBM Wazi for Red Hat CodeReady Workspaces Development Client")]),e._v(" "),n("blockquote",[n("p",[e._v("By Prasang A Prajapati")])]),e._v(" "),n("p",[e._v('Have you ever experienced problems in setting up a development environment? Also, have you ever heard this excuse when reporting a bug to a colleague? "It works on my machine!"')]),e._v(" "),n("p",[e._v("You are joining a new development team or project and you have spent the first couple of days or longer just with installing the right tools, getting access to the right system and configuring your development profiles. Similarly, when starting a new project, a large portion of time and energy is spent on setting up the development environment. Think about how inefficient it could be if this type of set up routine is repeated for every new team member or new project every time.")]),e._v(" "),n("p",[e._v("To address this problem, there is an amazing tool called "),n("a",{attrs:{href:"https://www.ibm.com/products/wazi-for-red-hat-codeready-workspaces",target:"_blank",rel:"noopener noreferrer"}},[e._v("IBM® Wazi for Red Hat® CodeReady Workspaces Development Client"),n("OutboundLink")],1),e._v(" (IBM Wazi Development Client). IBM Wazi Development Client is built on the Red Hat CodeReady Workspaces project. IBM Wazi Development Client uses Kubernetes and containers to provide any member of the development or IT team with a consistent, secure, and zero-configuration development environment for the IBM Z® Platform. The user experience is as fast and familiar as an integrated development environment (IDE) on their laptop.")]),e._v(" "),n("p",[e._v("IBM Wazi Development Client provides a modern experience for mainframe software developers working with z/OS® applications in the cloud by leveraging the available Visual Studio Code (VS Code) extensions "),n("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=IBM.zopeneditor",target:"_blank",rel:"noopener noreferrer"}},[e._v("IBM Z Open Editor"),n("OutboundLink")],1),e._v(", "),n("a",{attrs:{href:"https://www.ibm.com/support/knowledgecenter/SSCH39_1.0.0/com.ibm.wazi.development.client.doc/user_build_setup_run.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("IBM User Build"),n("OutboundLink")],1),e._v(" and "),n("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=Zowe.vscode-extension-for-zowe",target:"_blank",rel:"noopener noreferrer"}},[e._v("Zowe™ Explorer"),n("OutboundLink")],1),e._v(", as well as the command-line tools "),n("a",{attrs:{href:"https://docs.zowe.org/stable/user-guide/cli-usingcli.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Zowe CLI"),n("OutboundLink")],1),e._v(" and "),n("RouterLink",{attrs:{to:"/Docs/setup_integration.html"}},[e._v("IBM RSE API Plug-in for Zowe CLI")]),e._v(". Developers can use these Visual Studio Code extensions and command line tools on their local machine with the "),n("a",{attrs:{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Visual Studio Code"),n("OutboundLink")],1),e._v(" desktop IDE. Now, IBM Wazi Development Client makes this experience also available in the cloud. Powered by the open-source projects Zowe and Red Hat CodeReady Workspaces, IBM Wazi Development Client offers an easy, streamlined on-boarding process to get new mainframe developers using the tools they need. Using container technology and stacks, IBM Wazi Development Client brings the necessary technology to the task at hand.")],1),e._v(" "),n("p",[e._v("Mainframe developers can now have rich language support for COBOL, PL/I, Assembler and JCL using "),n("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=IBM.zopeneditor",target:"_blank",rel:"noopener noreferrer"}},[e._v("IBM Z Open Editor"),n("OutboundLink")],1),e._v(" as well as connectivity to Z host using "),n("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=Zowe.vscode-extension-for-zowe",target:"_blank",rel:"noopener noreferrer"}},[e._v("Zowe Explorer"),n("OutboundLink")],1),e._v(", run user builds using "),n("a",{attrs:{href:"https://www.ibm.com/support/knowledgecenter/SSCH39_1.0.0/com.ibm.wazi.development.client.doc/user_build_setup_run.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("IBM User Build"),n("OutboundLink")],1),e._v(", and interact with the "),n("RouterLink",{attrs:{to:"/Docs/setup_integration.html"}},[e._v("IBM Remote System Explorer API")]),e._v(", all in one Mainframe Development package using the "),n("a",{attrs:{href:"https://github.com/IBM/wazi-codeready-workspaces",target:"_blank",rel:"noopener noreferrer"}},[e._v("IBM Wazi Development Client stack"),n("OutboundLink")],1),e._v(" with custom plugin and devfile registry support.")],1),e._v(" "),n("p",[n("img",{attrs:{src:o(402),alt:"wazi-development-client"}})]),e._v(" "),n("p",[n("em",[e._v("Fig 1: IBM Wazi for Red Hat CodeReady Workspaces Development Client controller architecture")])]),e._v(" "),n("p",[n("em",[e._v("The above figure explains workspaces controller architecture for the IBM Wazi Development Client. OpenShift® leverages the Kubernetes concept of a pod, which is one or more containers deployed together on one host, and the smallest compute unit that can be defined, deployed, and managed. In the IBM Wazi Development Client, when the user creates a workspace using Wazi Development Client Stack, it creates a workspace with deployed user runtime as well as a plugin sidecar container.")])]),e._v(" "),n("h2",{attrs:{id:"ibm-wazi-development-client-dashboard"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ibm-wazi-development-client-dashboard"}},[e._v("#")]),e._v(" IBM Wazi Development Client Dashboard")]),e._v(" "),n("p",[n("img",{attrs:{src:o(403),alt:"wazi-development-client-dashboard"}})]),e._v(" "),n("p",[n("em",[e._v("Fig 2: Screen capture of IBM Wazi Development Client Dashboard")])]),e._v(" "),n("h2",{attrs:{id:"features"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[e._v("#")]),e._v(" Features")]),e._v(" "),n("p",[e._v("Here are the main features that IBM Wazi Development Client offers.")]),e._v(" "),n("ol",[n("li",[n("p",[n("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=IBM.zopeneditor",target:"_blank",rel:"noopener noreferrer"}},[e._v("IBM Z Open Editor"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("IBM Z Open Editor is a free Visual Studio Code extension that provides a modern editing experience for IBM Z Enterprise languages. IBM Z Open Editor gives developers the freedom to code in COBOL, PL/I and Assembler using the same editor they use for other languages such as Java™ and JavaScript. "),n("a",{attrs:{href:"https://ibm.github.io/zopeneditor-about/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Learn more"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("img",{attrs:{src:o(404),alt:"ibm-z-open-editor-cobol"}}),e._v(" "),n("em",[e._v("Fig 3: Editing experience of COBOL files using IBM Z Open Editor in IBM Wazi Development Client")])]),e._v(" "),n("p",[n("img",{attrs:{src:o(405),alt:"ibm-z-open-editor-pl1"}}),e._v(" "),n("em",[e._v("Fig 4: Editing experience of PL/I files using IBM Z Open Editor in IBM Wazi Development Client")])]),e._v(" "),n("p",[n("img",{attrs:{src:o(406),alt:"ibm-z-open-editor-assembler"}}),e._v(" "),n("em",[e._v("Fig 5: Editing experience of Assembler files using IBM Z Open Editor in IBM Wazi Development Client")])])]),e._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://www.ibm.com/support/knowledgecenter/SSCH39_1.0.0/com.ibm.wazi.development.client.doc/user_build_setup_run.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("IBM User Build"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("The IBM User Build VS Code extension helps COBOL developers leverage the IBM Dependency Based Build (DBB) toolkit right from their local VS Code or IBM Wazi Development Client enviroment. "),n("a",{attrs:{href:"https://www.ibm.com/support/knowledgecenter/SSCH39_1.0.0/com.ibm.wazi.development.client.doc/user_build_setup_run.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Learn more"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("img",{attrs:{src:o(407),alt:"ibm-user-build"}}),e._v(" "),n("em",[e._v("Fig 6: User Build using IBM User Build in IBM Wazi Development Client")])])]),e._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=Zowe.vscode-extension-for-zowe",target:"_blank",rel:"noopener noreferrer"}},[e._v("Zowe Explorer"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("Zowe Explorer is a free Visual Studio Code extension that lets you interact with data sets, USS files and jobs that are stored on IBM z/OS mainframes. You can explore data sets, USS files and jobs to view their contents, make changes, and upload the changes to the mainframe. Interacting with data sets, USS files and jobs from VS Code can be more convenient than using command-line interfaces or 3270 emulators. "),n("a",{attrs:{href:"https://docs.zowe.org/stable/user-guide/ze-install.html#software-requirements",target:"_blank",rel:"noopener noreferrer"}},[e._v("Learn more"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("img",{attrs:{src:o(408),alt:"zowe-explorer"}}),e._v(" "),n("em",[e._v("Fig 7: Interacting with data sets, USS files and jobs that are stored on IBM z/OS mainframes using Zowe Explorer in IBM Wazi Development Client")])])]),e._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://docs.zowe.org/stable/user-guide/cli-usingcli.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Zowe CLI"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("Zowe CLI is a command-line interface that lets you interact with the mainframe in a familiar, off-platform format. Zowe CLI helps to increase overall productivity, reduce the learning curve for developing mainframe applications, and exploit the ease-of-use of off-platform tools. Zowe CLI lets you use common tools such as Integrated Development Environments (IDEs), shell commands, bash scripts, and build tools for mainframe development. Through its ecosystem of plug-ins, you can automate actions on systems such as IBM Db2®, IBM CICS®, and more. It provides a set of utilities and services for users who want to become efficient in supporting and building z/OS applications quickly. "),n("a",{attrs:{href:"https://docs.zowe.org/stable/user-guide/cli-usingcli.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Learn more"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("img",{attrs:{src:o(409),alt:"zowe-cli"}}),e._v(" "),n("em",[e._v("Fig 8: Running Zowe commands to create, delete, or update profiles using Zowe CLI in IBM Wazi Development Client")])])]),e._v(" "),n("li",[n("p",[n("RouterLink",{attrs:{to:"/Docs/setup_integration.html"}},[e._v("IBM RSE API Plug-in for Zowe CLI")])],1),e._v(" "),n("p",[e._v("IBM RSE API Plug-in for Zowe CLI (RSE CLI plug-in) extends Zowe CLI to let you interact with z/OS resources. The RSE CLI plug-in interacts with z/OS by using IBM Remote System Explorer API (RSE API) instead of using z/OSMF. The RSE API is a collection of REST APIs that allow a client to work with various components on the z/OS host system, including MVS™ data sets, z/OS UNIX files and commands, JES jobs, and more. The overall solution results in a complete set of operations that allows you to do everything with RSE API that you could do with z/OSMF. It is therefore a great alternative if you have already used the Remote System Explorer with other IBM offerings such as IBM Developer for z/OS or IBM Explorer for z/OS. "),n("RouterLink",{attrs:{to:"/Docs/setup_integration.html"}},[e._v("Learn more")])],1),e._v(" "),n("p",[n("img",{attrs:{src:o(410),alt:"ibm-rse-api"}}),e._v(" "),n("em",[e._v("Fig 9: Create, delete or update RSE profiles using the RSE CLI plug-in in IBM Wazi Development Client")])])])]),e._v(" "),n("h2",{attrs:{id:"documentation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#documentation"}},[e._v("#")]),e._v(" Documentation")]),e._v(" "),n("p",[e._v("For more information or to learn more about IBM Wazi for Red Hat CodeReady Workspaces Development Client, see "),n("a",{attrs:{href:"https://www.ibm.com/support/knowledgecenter/SSCH39",target:"_blank",rel:"noopener noreferrer"}},[e._v("IBM Wazi for Red Hat CodeReady Workspaces Development Client Documentation"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("p",[n("strong",[e._v("Note:")]),e._v(" IBM Wazi Development Client is built on top of "),n("a",{attrs:{href:"https://access.redhat.com/documentation/en-us/red_hat_codeready_workspaces",target:"_blank",rel:"noopener noreferrer"}},[e._v("Red Hat CodeReady Workspaces"),n("OutboundLink")],1),e._v(". For more information on what else can be done with workspaces, see the "),n("a",{attrs:{href:"https://access.redhat.com/documentation/en-us/red_hat_codeready_workspaces/2.1/html/end-user_guide/index",target:"_blank",rel:"noopener noreferrer"}},[e._v("End-User Guide"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("h2",{attrs:{id:"questions-or-feedback"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#questions-or-feedback"}},[e._v("#")]),e._v(" Questions or feedback")]),e._v(" "),n("p",[e._v("We would love to hear what you think of this solution. For any questions, issues, or enhancement ideas, you can open an issue in the "),n("a",{attrs:{href:"https://github.com/IBM/wazi-codeready-workspaces",target:"_blank",rel:"noopener noreferrer"}},[e._v("Wazi Codeready WorkSpaces Github repository"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("p",[e._v("We are always looking for ways to improve.")])])}),[],!1,null,null,null);t.default=r.exports}}]);