(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{489:function(e,t,o){"use strict";o.r(t);var a=o(45),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"cobol-editing-tutorial"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cobol-editing-tutorial"}},[e._v("#")]),e._v(" COBOL editing tutorial")]),e._v(" "),o("h2",{attrs:{id:"about-this-tutorial"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#about-this-tutorial"}},[e._v("#")]),e._v(" About this tutorial")]),e._v(" "),o("p",[e._v("For the tutorial, you will assume the role of COBOL developer who has received requirements to enhance the Daily Customer File Update Report of the SAM application located at "),o("a",{attrs:{href:"https://github.com/IBM/zopeneditor-sample",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/IBM/zopeneditor-sample"),o("OutboundLink")],1),e._v(".")]),e._v(" "),o("h2",{attrs:{id:"prerequisites"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),o("ol",[o("li",[e._v("Install IBM Z Open Editor and its prerequisites such as Java as described in "),o("RouterLink",{attrs:{to:"/Docs/getting_started.html"}},[e._v("Getting Started")]),e._v(".")],1)]),e._v(" "),o("h2",{attrs:{id:"procedure"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#procedure"}},[e._v("#")]),e._v(" Procedure")]),e._v(" "),o("ol",[o("li",[o("p",[e._v("To enhance the report, you need to import the source code of the sample application first.")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("In VS Code, click "),o("strong",[e._v("Terminal")]),e._v(" > "),o("strong",[e._v("New Terminal")]),e._v(" to open a terminal.")])]),e._v(" "),o("li",[o("p",[e._v("In the terminal window, navigate to the desired directory for the source code by entering, for example:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("cd /c/Users/Public\n")])])])]),e._v(" "),o("li",[o("p",[e._v("To clone the source code from the Git repository, enter the Git repository of the provided sample files:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("git clone https://github.com/IBM/zopeneditor-sample.git\n")])])])]),e._v(" "),o("li",[o("p",[e._v("After the clone is completed, click "),o("strong",[e._v("File")]),e._v(" > "),o("strong",[e._v("Open Folder")]),e._v(". Then, in the Open Folder window, select the "),o("code",[e._v("C:/Users/Public/zopeneditor-sample")]),e._v(" directory that you cloned, and then click "),o("strong",[e._v("Select Folder")]),e._v(". The folder is now opened in the Explorer view on the left of VS Code.")]),e._v(" "),o("p",[e._v("The current sample application consists of the following files:")]),e._v(" "),o("ul",[o("li",[e._v("COBOL programs: "),o("code",[e._v("SAM1")]),e._v(" and "),o("code",[e._v("SAM2")])]),e._v(" "),o("li",[e._v("COPYBOOKS: "),o("code",[e._v("CUSTCOPY")]),e._v(" and "),o("code",[e._v("TRANREC")])]),e._v(" "),o("li",[e._v("JCL that set up and run the application: "),o("code",[e._v("ALLOCATE")]),e._v(", "),o("code",[e._v("RUN")])]),e._v(" "),o("li",[e._v("Datasource files: "),o("code",[e._v("CUSTFILE")]),e._v(" and "),o("code",[e._v("TRANFILE")])])]),e._v(" "),o("p",[e._v("As mentioned in the "),o("a",{attrs:{href:"https://ibm.github.io/zopeneditor-about/Docs/samplefiles.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Exploring the Sample Files"),o("OutboundLink")],1),e._v(" page, a program called "),o("code",[e._v("SAM1LIB")]),e._v(" (a copy of "),o("code",[e._v("SAM1")]),e._v(") is included to demonstrate the ability to resolve library-based copybooks, whether they be on a local file system or a remote Z host. "),o("code",[e._v("SAM1LIB")]),e._v(" uses the COPYBOOKS, "),o("code",[e._v("DATETIME")]),e._v(" (local), and "),o("code",[e._v("REPTTOTL")]),e._v(" (MVS).")]),e._v(" "),o("p",[o("code",[e._v("SAM1")]),e._v(" reads in both the "),o("code",[e._v("CUSTFILE")]),e._v(" and "),o("code",[e._v("TRANFILE")]),e._v(" data files, then performs different actions on the "),o("code",[e._v("CUSTFILE")]),e._v(" based on transactions from "),o("code",[e._v("TRANFILE")]),e._v(". Valid transactions are "),o("code",[e._v("ADD")]),e._v(", "),o("code",[e._v("UPDATE")]),e._v(", and "),o("code",[e._v("DELETE")]),e._v(". When encountering an "),o("code",[e._v("UPDATE")]),e._v(" transaction, "),o("code",[e._v("SAM1")]),e._v(" will call "),o("code",[e._v("SAM2")]),e._v(" to perform the requested update.")]),e._v(" "),o("p",[e._v("As you review "),o("code",[e._v("SAM2")]),e._v(", you will notice there is already some base code in place for "),o("code",[e._v("CRUNCH")]),e._v(" transactions which will be enhanced later in the following exercise. At the end of processing the "),o("code",[e._v("TRANFILE")]),e._v(", "),o("code",[e._v("SAM1")]),e._v(" will then generate a report on the transactions processed and will also produce an updated "),o("code",[e._v("CUSTFILE")]),e._v(".")])])])]),e._v(" "),o("li",[o("p",[e._v('Search for components that generate and reference the "Daily Customer File Update" with the advanced Search capabilities provided by the VS Code editor out of the box. Its Search view allows searching for strings as well as regular expression across all files or a specific subset of files based on location or name patterns.')]),e._v(" "),o("p",[e._v("In the Explorer right-click in the background of the WAZI-SAMPLE, not showing any particular file or folder to initiate a search on all files:")]),e._v(" "),o("ul",[o("li",[e._v("Select "),o("strong",[e._v("Find in Folder...")])]),e._v(" "),o("li",[e._v("Enter the search term "),o("code",[e._v("CUSTOMER-FILE")]),e._v(" and start the search with the Return key.")]),e._v(" "),o("li",[e._v("Review some of the other search options such as using regular expression and specifying patterns for files and folders to be excluded or included in the search.")]),e._v(" "),o("li",[e._v("To perform a regular expression search select the "),o("strong",[e._v(".*")]),e._v(" icon and change the search term to "),o("code",[e._v("CUST.*FILE")]),e._v(" and review the results.")]),e._v(" "),o("li",[e._v("Results will appear in the Search Panel.")]),e._v(" "),o("li",[e._v("Clicking on the result will allow the user to navigate to that location file in the Editor panel.")])])]),e._v(" "),o("li",[o("p",[e._v("Now that you have determined the file that need to be modified - "),o("code",[e._v("SAM1.cbl")]),e._v(". Open the "),o("code",[e._v("SAM1.cbl")]),e._v(" program in the editor, you will see syntax highlighting in the program, which allows you to quickly distinguish between COBOL reserved words, comments, constants, and variables. You will also see unrecognized statements and expressions in red, which enables you to make quick corrections and reduce compile errors. Syntax checking also works for misspelled COBOL reserved words and unknown variable names. To see all the syntax errors in the open files, open the Problems view through the "),o("strong",[e._v("View")]),e._v(" menu or by clicking the error and warning icon at the bottom in the status bar. Click the list item to directly go to the problem.")]),e._v(" "),o("p",[e._v("If you specified the filepath to the copybooks in your settings to resolve the references, you can also preview the contents of a copybook by moving your mouse cursor over the copybook name in a "),o("code",[e._v("COPY")]),e._v(" statement, for example "),o("code",[e._v("COPY TRANREC")]),e._v(", in the COBOL program without having to navigate away. This also applies to copybooks that reside in libraries and reference in COBOL programs as demonstrated in "),o("code",[e._v("SAM1.cbl")]),e._v(" with the "),o("code",[e._v("COPY DATETIME IN MYFILE")]),e._v(" (for local) and "),o("code",[e._v("COPY REPTTOTL IN MYLIB")]),e._v(" (for MVS) statements.")])]),e._v(" "),o("li",[o("p",[e._v("To understand this program at a high level and efficiently explore and navigate the code of the program, use the Outline view. If the Outline view is not automatically expanded, open it by clicking "),o("strong",[e._v("View")]),e._v(" > "),o("strong",[e._v("Open view")]),e._v(" > "),o("strong",[e._v("Outline")]),e._v(". You can use this view to perform the following actions:")]),e._v(" "),o("ul",[o("li",[e._v("Expand and collapse sections such as Division Headings, Section Headings, and Variable Group Names in the Outline View.")]),e._v(" "),o("li",[e._v("Recognize includes, procedures, and loops quickly via the icons located by the various items.")]),e._v(" "),o("li",[e._v("Go to a desired location in the code by clicking that section header in the view.")]),e._v(" "),o("li",[e._v("Sort by Position, Name, or Type.")])]),e._v(" "),o("p",[o("strong",[e._v("Note")]),e._v(": The Outline view can be used only after you have opened a file or program in VS Code.")])]),e._v(" "),o("li",[o("p",[e._v("After efficiently navigating through the program, you know that you have to insert code in the "),o("code",[e._v("SAM1.cbl")]),e._v(" program to fix the issue. Now, you can use the integrated Git in VS Code to create an isolated branch called "),o("code",[e._v("update-report")]),e._v(" where no one but yourself can access the source code in it unless you push the changes to the origin repository. To create the branch:")]),e._v(" "),o("ul",[o("li",[e._v("In VS Code on the lower left hand corner, click the master branch at the lower left.")]),e._v(" "),o("li",[e._v("Then, from the drop-down menu that is displayed at the top of VS Code, click "),o("strong",[e._v("Create new branch")]),e._v(".")]),e._v(" "),o("li",[e._v("Specify a branch name of "),o("code",[e._v("update-report")]),e._v(", and then press enter to confirm. The workspace is switched to the isolated "),o("code",[e._v("update-report")]),e._v(" branch now.")])])]),e._v(" "),o("li",[o("p",[e._v("You are now ready to insert code. When you are entering code, code completion provides you with matching lists from which you can select commands, defined variable and paragraph names, and code snippets. For example, place your cursor at the end of line 216, and press Enter to begin a new line on line 217. Try typing the command "),o("code",[e._v("ACCEPT CURRENT-TIME FROM TIME")]),e._v(". As you type, note that you can select from the lists of code completion suggestions that appear.")]),e._v(" "),o("p",[e._v("You can also use the code snippets that are shipped with IBM Z Open Editor. To use it, navigate to the "),o("code",[e._v("File Control")]),e._v(" section of the "),o("code",[e._v("SAM1.cbl")]),e._v(" program, press F1, select "),o("strong",[e._v("Insert Snippet")]),e._v(", and then enter "),o("code",[e._v("VSAM")]),e._v(" in the Search bar. You will see a list of VSAM snippets. For example, scroll to the "),o("code",[e._v("VSAM: KSDS Select/Assign Clause")]),e._v(" snippet and press Enter. A pre-formatted "),o("code",[e._v("SELECT/ASSIGN")]),e._v(" clause will be inserted.")])]),e._v(" "),o("li",[o("p",[e._v("Now that you have performed code changes and refinements, you can commit your changes into your "),o("code",[e._v("update-report")]),e._v(" branch to preserve it. To commit your changes, click the Source Control icon on the left of VS Code. In the Source Control panel that opens, the changed program is listed in the CHANGES section. In the CHANGES section, hover on the SAM1.cbl program name and click the "),o("strong",[e._v("Stage changes (+)")]),e._v(" icon to move your changes to the staging area. In the Message text box, enter a comment for the changes such as "),o("code",[e._v("Implemented Update Report")]),e._v(", and then click the "),o("strong",[e._v("Commit")]),e._v(" icon to commit your changes.")])])]),e._v(" "),o("p",[e._v("Congratulations on completing the tutorial. For a more comprehensive list of the available features for code editing, see "),o("RouterLink",{attrs:{to:"/Docs/editor_codechanges.html"}},[e._v("Making code changes")]),e._v(".")],1)])}),[],!1,null,null,null);t.default=r.exports}}]);