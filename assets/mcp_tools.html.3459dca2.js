import{r as d,o as a,a as r,b as t,d as i,w as s,F as n,e,c as l}from"./app.ffea5396.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const h={},p=t("h1",{id:"ibm-z-open-editor-mcp-tools",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#ibm-z-open-editor-mcp-tools","aria-hidden":"true"},"#"),e(" IBM Z Open Editor MCP Tools")],-1),f=e("These are all the Model Context Protocol (MCP) capabilities available in Z Open Editor. See the section "),u=e("Agent Mode"),m=e(" for details."),b=l('<h2 id="zowe-profile-tools" tabindex="-1"><a class="header-anchor" href="#zowe-profile-tools" aria-hidden="true">#</a> Zowe Profile Tools</h2><p>You can ask about your Zowe\u2122 Client profiles to see what is available, what is in use by Z Open Editor, and to obtain or retire JSON Web Token (JWT) authentication.</p><table><thead><tr><th>Tool Name</th><th>Tool Description</th></tr></thead><tbody><tr><td><code>zowe-get-default-profile &lt;type&gt;</code></td><td>Retrieve the default Zowe profile of a given type as configured in the Zowe team configuration files, defaults to type RSE.</td></tr><tr><td><code>zopeneditor-get-default-zowe-profile</code></td><td>Retrieve IBM Z Open Editor&#39;s default Zowe profile as configured in the <code>zopeneditor.zowe</code> user settings.</td></tr><tr><td><code>zowe-connection-check</code></td><td>Retrieve the status of the connection to the Rest API server.</td></tr><tr><td><code>zowe-list-all-profiles &lt;type&gt;</code></td><td>List all zowe profiles configured in the Zowe team configuration file by type, defaults to all profiles.</td></tr><tr><td><code>zowe-login</code></td><td>Log in with the editor&#39;s set profile to obtain a JWT.</td></tr><tr><td><code>zowe-logout</code></td><td>Log out from the server with the editor&#39;s set profile and remove the JWT from the team configuration file.</td></tr></tbody></table><h2 id="zowe-mvs-tools" tabindex="-1"><a class="header-anchor" href="#zowe-mvs-tools" aria-hidden="true">#</a> Zowe MVS Tools</h2><p>You can manage data sets and members on z/OS\xAE and run TSO commands.</p><table><thead><tr><th>Tool Name</th><th>Tool Description</th></tr></thead><tbody><tr><td><code>zowe-get-datasets &lt;filter&gt;</code></td><td>Retrieve data sets that match the specified filter pattern.</td></tr><tr><td><code>zowe-get-members &lt;dataSetName&gt;</code></td><td>List members of the specified data set.</td></tr><tr><td><code>zowe-download-member &lt;name&gt;</code></td><td>Download the specified data set member.</td></tr><tr><td><code>zowe-allocate-like-dataset &lt;dataSetName&gt; &lt;existingDataSet&gt;</code></td><td>Allocate a new specified data set similar to an existing one.</td></tr><tr><td><code>zowe-issue-tso-command &lt;command&gt;</code></td><td>Execute the specified TSO command.</td></tr></tbody></table><h2 id="zowe-unix-system-services-tools" tabindex="-1"><a class="header-anchor" href="#zowe-unix-system-services-tools" aria-hidden="true">#</a> Zowe UNIX System Services Tools</h2><p>You can manage files and folders on z/OS UNIX System Services and run UNIX commands.</p><table><thead><tr><th>Tool Name</th><th>Tool Description</th></tr></thead><tbody><tr><td><code>zowe-get-unix-files &lt;filePath&gt;</code></td><td>List the UNIX System Services files in the specified path.</td></tr><tr><td><code>zowe-put-unix-files &lt;localPath&gt; &lt;unixPath&gt;</code></td><td>Upload a local file to the specified location on UNIX System Services.</td></tr><tr><td><code>zowe-create-unix-files &lt;unixPath&gt; &lt;type&gt; &lt;permissions&gt;</code></td><td>Create a specified UNIX System Services file or directory at the specified path. Specify whether it is a file or directory. Permissions are optional; if omitted, the default value &#39;rwxrw-r--&#39; is used.</td></tr><tr><td><code>zowe-download-unix-file &lt;unixPath&gt;</code></td><td>Download the contents of the specified UNIX System Services file.</td></tr><tr><td><code>zowe-issue-unix-command &lt;unixCommand&gt;</code></td><td>Execute the specified UNIX command on the system.</td></tr></tbody></table><h2 id="zowe-jes-tools" tabindex="-1"><a class="header-anchor" href="#zowe-jes-tools" aria-hidden="true">#</a> Zowe JES Tools</h2><p>You can get information about z/OS jobs and spool files.</p><table><thead><tr><th>Tool Name</th><th>Tool Description</th></tr></thead><tbody><tr><td><code>zowe-get-jobs &lt;owner&gt; &lt;status&gt; &lt;jobName&gt; &lt;jobId&gt;</code></td><td>Retrieve jobs that match the specified owner, job status, job name, or job ID. If no parameters are specified, the command returns the jobs for the current user (owner) as defined in profile.</td></tr><tr><td><code>zowe-submit-job-dataset &lt;dataSet&gt;</code></td><td>Submit a job from the specified data set.</td></tr><tr><td><code>zowe-purge-job &lt;jobName&gt; &lt;jobId&gt;</code></td><td>Purge the job identified by the given job name and job ID.</td></tr><tr><td><code>zowe-submit-job-jcl &lt;jclString&gt;</code></td><td>Submit a job for the given local JCL.</td></tr><tr><td><code>zowe-get-job-spools &lt;jobName&gt; &lt;jobId&gt;</code></td><td>Retrieve the spools files for the specified job name and job ID.</td></tr><tr><td><code>zowe-get-job-spool-output &lt;jobName&gt; &lt;jobId&gt; &lt;spoolId&gt;</code></td><td>Retrieve the output of a job spool, identified by job name, job ID, and spool ID.</td></tr></tbody></table><h2 id="ibm-rse-api-tools" tabindex="-1"><a class="header-anchor" href="#ibm-rse-api-tools" aria-hidden="true">#</a> IBM RSE API Tools</h2><table><thead><tr><th>Tool Name</th><th>Tool Description</th></tr></thead><tbody><tr><td><code>rseapi-get-system-resource-consumption</code></td><td>Run DISPLAYACTIVE to retrieve system address space resource consumption information. Only available with an RSE profile.</td></tr><tr><td><code>rseapi-get-all-job-resource-consumption</code></td><td>Run DISPLAYACTIVE to retrieve resource\u2011consumption information for all active job address spaces. Only available with an RSE profile.</td></tr></tbody></table><h2 id="zapp-tools" tabindex="-1"><a class="header-anchor" href="#zapp-tools" aria-hidden="true">#</a> ZAPP Tools</h2><p>You can ask about the property groups defined in your ZAPP files. This works across all ZAPP files in a multi-root workspace. You can ask the AI to list the locations it searches for include files and combine the result with the log file resource for troubleshooting.</p><table><thead><tr><th>Tool Name</th><th>Tool Description</th></tr></thead><tbody><tr><td><code>zapp-get-property-groups &lt;language&gt;</code></td><td>List all property groups defined for the specified language (required) in all workspaces.</td></tr></tbody></table><h2 id="z-open-editor-log-file-tool-and-resource" tabindex="-1"><a class="header-anchor" href="#z-open-editor-log-file-tool-and-resource" aria-hidden="true">#</a> Z Open Editor log file tool and resource</h2><p>You can access Z Open Editor&#39;s log file for troubleshooting by asking your AI questions about the Editor&#39;s configuration and how it performed tasks such as searching for include files using property groups from ZAPP files. You can also inquire about how features are configured or enabled in Z\u202FOpen\u202FEditor. Depending on the Chat agent, it might prefer to run the MCP tool to read the log file or use the MCP Resource, and both are available.</p><p>For the best results, run the Z Open Editor logger in DEBUG mode as described in <a href="./locating_local_client_logs">Troubleshooting using log files</a>.</p><table><thead><tr><th>Tool Name</th><th>Tool Description</th></tr></thead><tbody><tr><td><code>zopeneditor-read-the-log</code></td><td>Read the current Z Open Editor log file and search the content.</td></tr></tbody></table><table><thead><tr><th>Resource Name</th><th></th></tr></thead><tbody><tr><td><code>zopeneditor.log</code></td><td>The log file for Z Open Editor referred to as <code>zopeneditor.log</code> that can be used for troubleshooting and configuration information.</td></tr></tbody></table><h2 id="data-elements-view" tabindex="-1"><a class="header-anchor" href="#data-elements-view" aria-hidden="true">#</a> Data Elements view</h2><p>If you are analyzing your program, perhaps using code explanations tools, you can also ask the API to open Z Open Editor&#39;s Data Elements view to get a sortable representation of the program&#39;s symbols that can be filtered and searched.</p><table><thead><tr><th>Tool Name</th><th>Tool Description</th></tr></thead><tbody><tr><td><code>zopeneditor-show-data-elements-view</code></td><td>Open the Data Elements view for a program specified by name or the currently open program.</td></tr></tbody></table>',25);function g(w,y){const o=d("RouterLink");return a(),r(n,null,[p,t("p",null,[f,i(o,{to:"/Docs/advanced_agent_mode.html"},{default:s(()=>[u]),_:1}),m]),b],64)}var j=c(h,[["render",g]]);export{j as default};
