import{r as t,o as p,a as e,b as n,d as o,F as c,e as s,c as l}from"./app.1362f0f1.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const r={},u=n("h1",{id:"ibm-rse-api-plug-in-for-zowe-cli-as-nodejs-sdk-package",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ibm-rse-api-plug-in-for-zowe-cli-as-nodejs-sdk-package","aria-hidden":"true"},"#"),s(" IBM RSE API Plug-in for Zowe CLI as nodejs SDK package")],-1),k=n("p",null,"IBM\xAE RSE API Plug-in for Zowe\u2122 CLI (RSE API plug-in) is a Nodejs package that can also be used as a Software Development Kit (SDK) to build client applications and scripts that interact with the mainframe through RSE rest APIs.",-1),m=s("Projects that adopt the RSE API plug-in as an SDK must also adopt the Zowe SDKs as dependencies, depending on the project's requirements. Zowe Imperative is a Nodejs package that must be declared as a peer dependency of the RSE API plug-in. Zowe Session objects are passed to the RSE API plug-in methods with connection information for the REST requests. More information on the Zowe SDK is available at "),b={href:"https://docs.zowe.org/stable/user-guide/sdks-using",target:"_blank",rel:"noopener noreferrer"},d=s("zowe.org"),f=s("."),w=l(`<h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><h3 id="get-system-information" tabindex="-1"><a class="header-anchor" href="#get-system-information" aria-hidden="true">#</a> Get system information</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> imperative <span class="token keyword">from</span> <span class="token string">&quot;@zowe/imperative&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> CheckStatus <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@ibm/rse-api-for-zowe-cli&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">exampleRseSdkClass</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">getSystemInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">//pass an instance of imperative.Session with connection information to the rest call</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> CheckStatus<span class="token punctuation">.</span><span class="token function">getRseStatus</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> output <span class="token operator">=</span> imperative<span class="token punctuation">.</span>TextUtils<span class="token punctuation">.</span><span class="token function">prettyJson</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="list-data-set-members" tabindex="-1"><a class="header-anchor" href="#list-data-set-members" aria-hidden="true">#</a> List data set members</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> imperative <span class="token keyword">from</span> <span class="token string">&quot;@zowe/imperative&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> List <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@ibm/rse-api-for-zowe-cli&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">exampleRseSdkClass</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">getMemberList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// prompt for or pass partitioned data set name for rest call</span>
    <span class="token comment">// format: HLQ.PDS</span>
    <span class="token keyword">const</span> dsName <span class="token operator">=</span> imperative<span class="token punctuation">.</span>CliUtils<span class="token punctuation">.</span><span class="token function">readPrompt</span><span class="token punctuation">(</span>
      <span class="token string">&quot;Enter data set name to list it&#39;s members:&quot;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dsName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//pass an instance of imperative.Session with connection information to the rest call</span>
      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> List<span class="token punctuation">.</span><span class="token function">allMembers</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token function">String</span><span class="token punctuation">(</span>dsName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> list<span class="token operator">:</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      response<span class="token punctuation">.</span>apiResponse<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>obj<span class="token operator">?.</span>memberName<span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> output <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;operation cancelled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="submit-data-set-member-as-job" tabindex="-1"><a class="header-anchor" href="#submit-data-set-member-as-job" aria-hidden="true">#</a> Submit data set member as job</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> imperative <span class="token keyword">from</span> <span class="token string">&quot;@zowe/imperative&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> SubmitJobs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@ibm/rse-api-for-zowe-cli&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">exampleRseSdkClass</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">submitAsJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// prompt for or pass data set member name for rest call</span>
    <span class="token comment">// format: HLQ.PDS(MEMBER)</span>
    <span class="token keyword">const</span> jobName <span class="token operator">=</span> imperative<span class="token punctuation">.</span>CliUtils<span class="token punctuation">.</span><span class="token function">readPrompt</span><span class="token punctuation">(</span>
      <span class="token string">&quot;Enter data set member name to submit as job:&quot;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>jobName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//pass an instance of imperative.Session with connection information to the rest call</span>
      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> SubmitJobs<span class="token punctuation">.</span><span class="token function">submitJob</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        jobDataSet<span class="token operator">:</span> <span class="token function">String</span><span class="token punctuation">(</span>jobName<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;operation cancelled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,7);function h(y,g){const a=t("ExternalLinkIcon");return p(),e(c,null,[u,k,n("p",null,[m,n("a",b,[d,o(a)]),f]),w],64)}var _=i(r,[["render",h]]);export{_ as default};
