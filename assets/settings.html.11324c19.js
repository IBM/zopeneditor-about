import{r as n,o as a,a as r,b as e,d as o,w as i,F as d,e as t,c}from"./app.a202a588.js";import{_ as h}from"./plugin-vue_export-helper.21dcd24c.js";const u={},_=e("h1",{id:"settings-json-properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#settings-json-properties","aria-hidden":"true"},"#"),t(" settings.json properties")],-1),f=t("You can control the characteristics of your environment by setting the following preferences in "),m=e("code",null,"settings.json",-1),g=t(" by using the JSON editor. For more information, see "),p=t("Accessing settings for IBM Z Open Editor"),y=t("."),b=e("h2",{id:"list-of-settings-json-properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#list-of-settings-json-properties","aria-hidden":"true"},"#"),t(" List of settings.json properties")],-1),x=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Property"),e("th",{style:{"text-align":"left"}},"Description")])],-1),w=e("td",{style:{"text-align":"left"}},[e("code",null,"[cobol]")],-1),v={style:{"text-align":"left"}},S=t("Use "),z=e("code",null,'"[cobol]": {"editor.rulers": [',-1),O=e("em",null,"array",-1),L=e("code",null,"]}",-1),I=t(" to set rulers for COBOL in the editor. "),P=e("em",null,"array",-1),D=t(" is an array of numbers representing the column numbers at which you want a ruler to appear. For more information, see "),C=t("Setting language specific tab stops and rulers"),F=t("."),M=e("td",{style:{"text-align":"left"}},[e("code",null,"[hlasm]")],-1),E={style:{"text-align":"left"}},A=t("Use "),q=e("code",null,'"[hlasm]": {"editor.rulers": [',-1),B=e("em",null,"array",-1),Z=e("code",null,"]}",-1),k=t(" to set rulers for HLASM in the editor. "),T=e("em",null,"array",-1),N=t(" is an array of numbers representing the column numbers at which you want a ruler to appear. For more information, see "),R=t("Setting language specific tab stops and rulers"),U=t("."),H=e("td",{style:{"text-align":"left"}},[e("code",null,"[jcl]")],-1),V={style:{"text-align":"left"}},J=t("Use "),j=e("code",null,'"[jcl]": {"editor.rulers": [',-1),Y=e("em",null,"array",-1),W=e("code",null,"]}",-1),X=t(" to set rulers for JCL in the editor. "),G=e("em",null,"array",-1),Q=t(" is an array of numbers representing the column numbers at which you want a ruler to appear. For more information, see "),$=t("Setting language specific tab stops and rulers"),K=t("."),ee=e("td",{style:{"text-align":"left"}},[e("code",null,"[pl1]")],-1),te={style:{"text-align":"left"}},oe=t("Use "),se=e("code",null,'"[pl1]": {"editor.rulers": [',-1),ie=e("em",null,"array",-1),ne=e("code",null,"]}",-1),le=t(" to set rulers for PL/I in the editor. "),ae=e("em",null,"array",-1),re=t(" is an array of numbers representing the column numbers at which you want a ruler to appear. For more information, see "),de=t("Setting language specific tab stops and rulers"),ce=t("."),he=e("td",{style:{"text-align":"left"}},[e("code",null,"[rexx]")],-1),ue={style:{"text-align":"left"}},_e=t("Use "),fe=e("code",null,'"[rexx]": {"editor.rulers": [',-1),me=e("em",null,"array",-1),ge=e("code",null,"]}",-1),pe=t(" to set rulers for REXX in the editor. "),ye=e("em",null,"array",-1),be=t(" is an array of numbers representing the column numbers at which you want a ruler to appear. For more information, see "),xe=t("Setting language specific tab stops and rulers"),we=t("."),ve=e("td",{style:{"text-align":"left"}},[e("code",null,"files.associations")],-1),Se={style:{"text-align":"left"}},ze=t("Specifies file names, including data set and member names, that contain certain strings as the appropriate type of file. For detailed usage, see "),Oe=t("Setting file associations"),Le=t("."),Ie=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.cobol.enableUnreachableCodeWarnings")],-1),Pe={style:{"text-align":"left"}},De=t("Enables unreachable code warnings in the COBOL programs. For more information, see "),Ce=t("Enabling and disabling unreachable COBOL code warnings"),Fe=t("."),Me=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.cobol.disableProblems")],-1),Ee={style:{"text-align":"left"}},Ae=t("Disables code problems in the Problems view and editor. It will keep other language features such as Outline view available if possible. It will also disable unreachable code warnings. The default value is false. For more information, see "),qe=t("Enabling and disabling problems in IBM Z Open Editor"),Be=t("."),Ze=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.cobol.includeFileExtensions")],-1),ke={style:{"text-align":"left"}},Te=t("Specifies a list of file name extensions for COBOL include files. For more information, see "),Ne=t("Defining Include file associations"),Re=t("."),Ue=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.cobol.maximumLineLength")],-1),He={style:{"text-align":"left"}},Ve=t("Provides a maximum line length for the COBOL editor. This setting will allow the editor to truncate all text after the provided column number while saving a document. To disable truncation of characters, set maximum line length to -1. For more information, see "),Je=t("Setting language-specific maximum line length"),je=t("."),Ye=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.cobol.sequenceNumbers")]),e("td",{style:{"text-align":"left"}},[t("Choose which columns will have sequence numbers inserted and removed from a file by using the Renumber and Unnumber functions in the COBOL editor. The following values are allowed:"),e("ul",null,[e("li",null,[e("code",null,"zopeneditor.cobol.sequenceNumbers.column1"),t(": Numbering starts at column 1")]),e("li",null,[e("code",null,"zopeneditor.cobol.sequenceNumbers.column73"),t(": Numbering starts at column 73")]),e("li",null,[e("code",null,"zopeneditor.cobol.sequenceNumbers.column1and73"),t(": Numbering starts at column 1 and 73")])])])],-1),We=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.cobol.tabstops")],-1),Xe={style:{"text-align":"left"}},Ge=t("Adds custom COBOL tab stops in the editor. For more information, see "),Qe=t("Setting language specific tab stops and rulers"),$e=t("."),Ke=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.datasets")],-1),et={style:{"text-align":"left"}},tt=t("Specifies data set names that should contain COBOL or PL/I programs, copybooks, include files, and JCL. For detailed usage, see "),ot=t("Setting file associations"),st=t("."),it=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.enforceCaseSensitiveIncludeFileNames")]),e("td",{style:{"text-align":"left"}},"Enforce case-sensitive matching of local copybooks and include file names in property groups. Default is false to match files with all cases in the path. Set it to true to avoid ambiguous matching on case-insensitive file systems.")],-1),nt=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.enableResolvingMacros")],-1),lt={style:{"text-align":"left"}},at=t("Enables the automatic resolution of "),rt=e("code",null,"SYS1.MACLIB",-1),dt=t("macro files from MVS using your Zowe Exlorer profiles. See the "),ct=t("Remote Macros"),ht=t(" section for more details. The default value is "),ut=e("code",null,"false",-1),_t=t(". To use this feature, you need to enable it."),ft=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.disableProblems")],-1),mt={style:{"text-align":"left"}},gt=t("Disables code problems in the Problems view and editor. It will keep other language features such as Outline view available if possible. The default value is false. For more information, see "),pt=t("Enabling and disabling problems in IBM Z Open Editor"),yt=t("."),bt=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.includeFileExtensions")],-1),xt={style:{"text-align":"left"}},wt=t("Specifies a list of file name extensions for HLASM include files. For more information, see "),vt=t("Defining Include file associations"),St=t("."),zt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.instructionsFilePath")]),e("td",{style:{"text-align":"left"}},"Allows you to specify a custom HLASM instructions file. Contact IBM Support for questions about the format of such a file or updates to our out of the box file, for example, for a new hardware versions.")],-1),Ot=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.macrosFilePath")]),e("td",{style:{"text-align":"left"}},"Allows you to specify a custom macro definitions file. This option is currently used internally only, but the schema for this format will be provided in a future release so that users can provide their own custom macro references.")],-1),Lt=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.maximumLineLength")],-1),It={style:{"text-align":"left"}},Pt=t("Provides a maximum line length for the HLASM editor. This setting will allow the editor to truncate all text after the provided column number while saving a document. To disable truncation of characters, set maximum line length to -1. For more information, see "),Dt=t("Setting language-specific maximum line length"),Ct=t("."),Ft=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.tabstops")],-1),Mt={style:{"text-align":"left"}},Et=t("Defines custom HLASM tab stops in the editor. For more information, see "),At=t("Setting language specific tab stops and rulers"),qt=t("."),Bt=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.zosMacrosVersion")],-1),Zt={style:{"text-align":"left"}},kt=t("Defines the version of z/OS to use for macro definitions. This allows for more accurate results for the hover and code completion features in HLASM. For more information, see "),Tt=t("Remote Macros"),Nt=t("."),Rt=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.JAVA_HOME")],-1),Ut={style:{"text-align":"left"}},Ht=t("Specifies a different Java for IBM Z Open Editor other than the default of your computer. For more information, see section Selecting the Java installation to use in "),Vt=t("Getting started"),Jt=t("."),jt=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.jcl.maximumLineLength")],-1),Yt={style:{"text-align":"left"}},Wt=t("Provides a maximum line length for the JCL editor. This setting will allow the editor to truncate all text after the provided column number while saving a document. To disable truncation of characters, set maximum line length to -1. For more information, see "),Xt=t("Setting language-specific maximum line length"),Gt=t("."),Qt=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.logger")],-1),$t={style:{"text-align":"left"}},Kt=t("Enables a logging output. See "),eo=t("Troubleshooting using log files"),to=t(" for details."),oo=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.pl1.disableProblems")],-1),so={style:{"text-align":"left"}},io=t("Disables code problems in the Problems view and editor. It will keep other language features such as Outline view available if possible. The default value is false. For more information, see "),no=t("Enabling and disabling problems in IBM Z Open Editor"),lo=t("."),ao=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.pl1.includeFileExtensions")],-1),ro={style:{"text-align":"left"}},co=t("Specifies a list of file name extensions for PL/I include files. For more information, see "),ho=t("Defining Include file associations"),uo=t("."),_o=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.pl1.maximumLineLength")],-1),fo={style:{"text-align":"left"}},mo=t("Provides a maximum line length for the PL/I editor. This setting will allow the editor to truncate all text after the provided column number while saving a document. To disable truncation of characters, set maximum line length to -1. For more information, see "),go=t("Setting language-specific maximum line length"),po=t("."),yo=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.rexx.disableProblems")],-1),bo={style:{"text-align":"left"}},xo=t("Disables code problems in the Problems view and editor. It will keep other language features such as Outline view available if possible. The default value is false. For more information, see "),wo=t("Enabling and disabling problems in IBM Z Open Editor"),vo=t("."),So=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.rexx.maximumLineLength")],-1),zo={style:{"text-align":"left"}},Oo=t("Provides a maximum line length for the REXX editor. This setting will allow the editor to truncate all text after the provided column number while saving a document. To disable truncation of characters, set maximum line length to -1. For more information, see "),Lo=t("Setting language-specific maximum line length"),Io=t("."),Po=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.server.memoryAllocation")],-1),Do={style:{"text-align":"left"}},Co=t("Specifies the maximum value of the memory that language servers are allowed to allocate. For more information, see section Configuring the Java memory allocation in "),Fo=t("Getting started"),Mo=t("."),Eo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.server.startupOptions")]),e("td",{style:{"text-align":"left"}},"Configure additional startup parameters for Java virtual machines started for running language servers. These might have been provided by tech support for troubleshooting. Leave blank by default.")],-1),Ao=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.userbuild.enabled")]),e("td",{style:{"text-align":"left"}},"Enable User Build capabilities that utilize IBM Dependency Based Build. When enabled, you can run a user build to compile and link programs during coding and unit testing simply by right-clicking inside a COBOL, PL/I, or HLASM file.")],-1),qo=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.userbuild.userSettings")],-1),Bo={style:{"text-align":"left"}},Zo=t("Settings for IBM User Build. See the "),ko={href:"https://www.ibm.com/docs/en/cloud-paks/z-modernization-stack/2022.3?topic=code-setting-up-user-build",target:"_blank",rel:"noopener noreferrer"},To=t("IBM Documentation"),No=t(" for details."),Ro=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.watsonx.wcaz.settings.enable")]),e("td",{style:{"text-align":"left"}},"Enables and disables the IBM watsonx Code Assistant for Z feature.")],-1),Uo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.watsonx.wcaz.settings.authUrl")]),e("td",{style:{"text-align":"left"}},"Overrides the IBM Cloud IAM Identity Services URL. Leave it unassigned to use the default service.")],-1),Ho=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.watsonx.wcaz.settings.url")]),e("td",{style:{"text-align":"left"}},"Overrides the URL to the IBM watsonx Code Assistant for Z service. Leave it unassigned to use the default service.")],-1),Vo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.watsonx.wcaz.settings.logLevel")]),e("td",{style:{"text-align":"left"}},"Sets the logging level for IBM watsonx Code Assistant for Z. Technical support might instruct you to change this value for problem analysis.")],-1),Jo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.watsonx.wcaz.settings.timeout")]),e("td",{style:{"text-align":"left"}},"Overrides the timeout value in milliseconds for requests sent to IBM watsonx Code Assistant for Z.")],-1),jo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.welcomePage.show")]),e("td",{style:{"text-align":"left"}},"Show the welcome page on VS Code startup.")],-1),Yo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.zapp.useDefaultOnlineZappSchema")]),e("td",{style:{"text-align":"left"}},"Z Open Editor comes with the built-in ZAPP JSON schema. It can be used for YAML files using Red Hat's YAML VS Code extension, and for JSON files with the built-in editor. If you encounter issues locating this built-in schema on deployments like Eclipse Che, such as being unable to see syntax errors with the Red Hat YAML extension, enable this option to load the schema from the internet.")],-1),Wo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.zapp.customZappSchemaLocation")]),e("td",{style:{"text-align":"left"}},"When you work offline but have to provide a path to the ZAPP schema yourself, such as in a custom Che deployment, specify a valid HTTP or file URL to the location of the ZAPP JSON schema. If specified, the Use Default Online Zapp Schema option will be ignored.")],-1),Xo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.zapp.generateZappOnDemand")]),e("td",{style:{"text-align":"left"}},"When you open a COBOL, PL/I, HLASM, or REXX program and none is found in all the open workspaces, a generic ZAPP file is automatically generated. This file will search for include files in all workspaces and folders.")],-1),Go=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.zapp.variables")]),e("td",{style:{"text-align":"left"}},[t("Use to specify variable names with values that will be substituted in your ZAPP files. To reference a variable defined here in a ZAPP file, write "),e("code",null,"${variable-name}"),t(". For example, define a variable here called "),e("code",null,"HLQ"),t(" with a value that represents your personal high-level qualifier on z/OS MVS. In your ZAPP file, reference the variable in a property group's location entry like this: "),e("code",null,"${HLQ}.COBOL.COPYBOOKs"),t(". Do not use single or double-quote characters for variable names and values. Note that all users need to define all the variables in their user settings that are used by the ZAPP file to avoid errors. You can place these properties in VS Code user and workspace settings.")])],-1),Qo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.zcodeformat.useDefaultOnlineZCodeFormatSchema")]),e("td",{style:{"text-align":"left"}},"Z Open Editor comes with the built-in zCodeFormat JSON schema. It can be used for YAML files using Red Hat's YAML VS Code extension, and for JSON files with the built-in editor. If you encounter issues locating this built-in schema on deployments like Eclipse Che, such as being unable to see syntax errors with the Red Hat YAML extension, enable this option to load the schema from the internet.")],-1),$o=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.zcodeformat.customZCodeFormatSchemaLocation")]),e("td",{style:{"text-align":"left"}},"When you work offline but have to provide a path to the zCodeFormat schema yourself, such as in a custom Che deployment, specify a valid HTTP or file URL to the location of the zCodeFormat JSON schema. If specified, the Use Default Online zCodeFormat Schema option will be ignored.")],-1),Ko=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.zowe")],-1),es={style:{"text-align":"left"}},ts=t("The "),os=e("code",null,"zopeneditor.zowe",-1),ss=t(" setting can be used at a user or workspace level. Typically every user specifies these in their user settings using their personal profile names. If defined in workspace settings then it is assumed that all users of this workspace have defined the same standardized profile names on their systems. If set at both levels, the user and workspace level, the workspace level will override the user level."),is=t("Use "),ns=e("code",null,'"zopeneditor.zowe": {"defaultCliProfile": "<profile_name>"}',-1),ls=t(" to specify the name of the profile you want to use for IBM Z Open Editor operations. If this is not defined, IBM Z Open Editor follows the precedence rules described in "),as=t("Setting up and using RSE profiles in IBM Z Open Editor"),rs=t(" to identify which CLI profile to use."),ds=c("<li>Use <code>&quot;zopeneditor.zowe&quot;: {&quot;defaultSshCliProfile&quot;: &quot;&lt;profile_name&gt;&quot;}</code> to specify the name of the Zowe CLI SSH profile used for remote execution of commands on UNIX System Services of your z/OS system. If no valid profile name is provided, the default SSH profile will be used.</li><li>Use <code>&quot;zopeneditor.zowe&quot;: {&quot;defaultRseConversionMappingsFile&quot;: &quot;&lt;absolute pathname&gt;&quot;}</code> to specify the path to a valid RSE API mappings file or ZAPP file that contains RSE API mappings. These mappings will be used for Zowe Explorer MVS file content read/write operations for RSE API profiles. Note, that property groups for remote include file resolution and user build will not use this setting, but look for a workspace-local ZAPP file or if not found, a mappings file in the user&#39;s <code>.zowe/profiles/rse</code> directory.</li><li>Use the boolean setting <code>&quot;zopeneditor.zowe&quot;: {&quot;listBeforeDownload&quot;: &quot;&lt;true-or-false&gt;&quot;}</code> to modify Z Open Editor&#39;s behavior when requesting a file from MVS: - When the setting is set to <code>true</code>, the editor will first try to confirm that whether the requested file actually exists by performing a list operation for that file. If the requested file exists, the editor will send another request to download it. If the requested file does not exist, the editor will move on to test the next location listed in the property group. - When the setting is set to <code>false</code>, the editor will directly try to download the file from MVS without checking whether it actually exists. If the response from z/OS is a Not Found error, the editor will move on to the next location listed in the property group. In some cases when using z/OSMF as the protocol, this Not Found error will cause entries in z/OS log files, which you can avoid by specifying the value of the setting to <code>true</code>. However, this extra round-trip to the server to check the existence will have performance impact. Because the logging is not an issue when using the RSE API protocol and because of the performance advantage, the default value for this setting is <code>false</code>.</li><li>Use the integer setting <code>&quot;zopeneditor.zowe&quot;: {&quot;maximumParallelFileDownloads&quot;: &quot;&lt;1-to-10&gt;&quot;}</code> to specify how many parallel downloads Z Open Editor should perform when requesting include files from MVS. Downloading several files in parallel can significantly improve performance, especially when you edit programs with many include files. The downside is that some protocols such as z/OSMF will allocate more address spaces for the parallel requests, which causes more resources being used and more logging on the z/OS side. The RSE API protocol does not have that problem because it achieves scalability in other ways that are documented in the RSE documentation. The default value for this setting is 5, and the maximum value is 10. Set it to 1 to disable parallel downloads requesting one include file at the time.</li>",4),cs=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zowe.files.temporaryDownloadsFolder.cleanup")]),e("td",{style:{"text-align":"left"}},[t("The "),e("code",null,"zowe.files.temporaryDownloadsFolder.cleanup"),t(' setting is adopted from Zowe Explorer settings to support the use of multiple VS Code windows showing the same files opened via Zowe Explorer so you can see different parts of the same program on two different screens. Note that disabling the cleanup will result in files downloaded from z/OS not being removed when the editor is closed or restarted, so when you open a file via Zowe Explorer you may be viewing an outdated local version. Use the right-click "Pull from Mainframe" command to ensure you are working with the latest files.')])],-1);function hs(us,_s){const s=n("RouterLink"),l=n("ExternalLinkIcon");return a(),r(d,null,[_,e("p",null,[f,m,g,o(s,{to:"/Docs/setting_preferences.html"},{default:i(()=>[p]),_:1}),y]),b,e("table",null,[x,e("tbody",null,[e("tr",null,[w,e("td",v,[S,z,O,L,I,P,D,o(s,{to:"/Docs/setting_tabstops.html"},{default:i(()=>[C]),_:1}),F])]),e("tr",null,[M,e("td",E,[A,q,B,Z,k,T,N,o(s,{to:"/Docs/setting_tabstops.html"},{default:i(()=>[R]),_:1}),U])]),e("tr",null,[H,e("td",V,[J,j,Y,W,X,G,Q,o(s,{to:"/Docs/setting_tabstops.html"},{default:i(()=>[$]),_:1}),K])]),e("tr",null,[ee,e("td",te,[oe,se,ie,ne,le,ae,re,o(s,{to:"/Docs/setting_tabstops.html"},{default:i(()=>[de]),_:1}),ce])]),e("tr",null,[he,e("td",ue,[_e,fe,me,ge,pe,ye,be,o(s,{to:"/Docs/setting_tabstops.html"},{default:i(()=>[xe]),_:1}),we])]),e("tr",null,[ve,e("td",Se,[ze,o(s,{to:"/Docs/setting_fileassociations.html"},{default:i(()=>[Oe]),_:1}),Le])]),e("tr",null,[Ie,e("td",Pe,[De,o(s,{to:"/Docs/setting_unreachablecodewarnings.html"},{default:i(()=>[Ce]),_:1}),Fe])]),e("tr",null,[Me,e("td",Ee,[Ae,o(s,{to:"/Docs/setting_disableproblems.html"},{default:i(()=>[qe]),_:1}),Be])]),e("tr",null,[Ze,e("td",ke,[Te,o(s,{to:"/Docs/setting_fileassociations.html#defining-include-file-associations"},{default:i(()=>[Ne]),_:1}),Re])]),e("tr",null,[Ue,e("td",He,[Ve,o(s,{to:"/Docs/setting_maximum_line_length.html"},{default:i(()=>[Je]),_:1}),je])]),Ye,e("tr",null,[We,e("td",Xe,[Ge,o(s,{to:"/Docs/setting_tabstops.html"},{default:i(()=>[Qe]),_:1}),$e])]),e("tr",null,[Ke,e("td",et,[tt,o(s,{to:"/Docs/setting_fileassociations.html"},{default:i(()=>[ot]),_:1}),st])]),it,e("tr",null,[nt,e("td",lt,[at,rt,dt,o(s,{to:"/Docs/editor_codechanges_hlasm.html#remote-macros"},{default:i(()=>[ct]),_:1}),ht,ut,_t])]),e("tr",null,[ft,e("td",mt,[gt,o(s,{to:"/Docs/setting_disableproblems.html"},{default:i(()=>[pt]),_:1}),yt])]),e("tr",null,[bt,e("td",xt,[wt,o(s,{to:"/Docs/setting_fileassociations.html#defining-include-file-associations"},{default:i(()=>[vt]),_:1}),St])]),zt,Ot,e("tr",null,[Lt,e("td",It,[Pt,o(s,{to:"/Docs/setting_maximum_line_length.html"},{default:i(()=>[Dt]),_:1}),Ct])]),e("tr",null,[Ft,e("td",Mt,[Et,o(s,{to:"/Docs/setting_tabstops.html"},{default:i(()=>[At]),_:1}),qt])]),e("tr",null,[Bt,e("td",Zt,[kt,o(s,{to:"/Docs/editor_codechanges_hlasm.html#remote-macros"},{default:i(()=>[Tt]),_:1}),Nt])]),e("tr",null,[Rt,e("td",Ut,[Ht,o(s,{to:"/Docs/getting_started.html"},{default:i(()=>[Vt]),_:1}),Jt])]),e("tr",null,[jt,e("td",Yt,[Wt,o(s,{to:"/Docs/setting_maximum_line_length.html"},{default:i(()=>[Xt]),_:1}),Gt])]),e("tr",null,[Qt,e("td",$t,[Kt,o(s,{to:"/Docs/locating_local_client_logs.html"},{default:i(()=>[eo]),_:1}),to])]),e("tr",null,[oo,e("td",so,[io,o(s,{to:"/Docs/setting_disableproblems.html"},{default:i(()=>[no]),_:1}),lo])]),e("tr",null,[ao,e("td",ro,[co,o(s,{to:"/Docs/setting_fileassociations.html#defining-include-file-associations"},{default:i(()=>[ho]),_:1}),uo])]),e("tr",null,[_o,e("td",fo,[mo,o(s,{to:"/Docs/setting_maximum_line_length.html"},{default:i(()=>[go]),_:1}),po])]),e("tr",null,[yo,e("td",bo,[xo,o(s,{to:"/Docs/setting_disableproblems.html"},{default:i(()=>[wo]),_:1}),vo])]),e("tr",null,[So,e("td",zo,[Oo,o(s,{to:"/Docs/setting_maximum_line_length.html"},{default:i(()=>[Lo]),_:1}),Io])]),e("tr",null,[Po,e("td",Do,[Co,o(s,{to:"/Docs/getting_started.html"},{default:i(()=>[Fo]),_:1}),Mo])]),Eo,Ao,e("tr",null,[qo,e("td",Bo,[Zo,e("a",ko,[To,o(l)]),No])]),Ro,Uo,Ho,Vo,Jo,jo,Yo,Wo,Xo,Go,Qo,$o,e("tr",null,[Ko,e("td",es,[ts,os,ss,e("ul",null,[e("li",null,[is,ns,ls,o(s,{to:"/Docs/interact_zos_zowe_explorer.html#setting-up-and-using-rse-profiles-in-ibm-z-open-editor"},{default:i(()=>[as]),_:1}),rs]),ds])])]),cs])])],64)}var gs=h(u,[["render",hs]]);export{gs as default};
