import{r as l,o as a,a as d,b as e,d as o,w as n,F as r,e as t,c}from"./app.ffea5396.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const h={},_=e("h1",{id:"settings-json-properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#settings-json-properties","aria-hidden":"true"},"#"),t(" settings.json properties")],-1),f=t("You can control the characteristics of your environment by setting the following preferences in "),m=e("code",null,"settings.json",-1),g=t(" by using the JSON editor. For more information, see "),p=t("Accessing settings for IBM Z Open Editor"),b=t("."),y=e("h2",{id:"list-of-settings-json-properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#list-of-settings-json-properties","aria-hidden":"true"},"#"),t(" List of settings.json properties")],-1),x=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Property"),e("th",{style:{"text-align":"left"}},"Description")])],-1),w=e("td",{style:{"text-align":"left"}},[e("code",null,"[cobol]")],-1),v={style:{"text-align":"left"}},S=t("Use "),z=e("code",null,'"[cobol]": {"editor.rulers": [',-1),O=e("em",null,"array",-1),L=e("code",null,"]}",-1),P=t(" to set rulers for COBOL in the editor. "),C=e("em",null,"array",-1),I=t(" is an array of numbers representing the column numbers at which you want a ruler to appear. For more information, see "),E=t("Setting language specific tab stops and rulers"),D=t("."),M=e("td",{style:{"text-align":"left"}},[e("code",null,"[hlasm]")],-1),F={style:{"text-align":"left"}},A=t("Use "),T=e("code",null,'"[hlasm]": {"editor.rulers": [',-1),q=e("em",null,"array",-1),B=e("code",null,"]}",-1),k=t(" to set rulers for HLASM in the editor. "),Z=e("em",null,"array",-1),R=t(" is an array of numbers representing the column numbers at which you want a ruler to appear. For more information, see "),H=t("Setting language specific tab stops and rulers"),N=t("."),U=e("td",{style:{"text-align":"left"}},[e("code",null,"[jcl]")],-1),V={style:{"text-align":"left"}},J=t("Use "),j=e("code",null,'"[jcl]": {"editor.rulers": [',-1),Y=e("em",null,"array",-1),W=e("code",null,"]}",-1),X=t(" to set rulers for JCL in the editor. "),G=e("em",null,"array",-1),Q=t(" is an array of numbers representing the column numbers at which you want a ruler to appear. For more information, see "),$=t("Setting language specific tab stops and rulers"),K=t("."),ee=e("td",{style:{"text-align":"left"}},[e("code",null,"[pl1]")],-1),te={style:{"text-align":"left"}},oe=t("Use "),se=e("code",null,'"[pl1]": {"editor.rulers": [',-1),ne=e("em",null,"array",-1),ie=e("code",null,"]}",-1),le=t(" to set rulers for PL/I in the editor. "),ae=e("em",null,"array",-1),de=t(" is an array of numbers representing the column numbers at which you want a ruler to appear. For more information, see "),re=t("Setting language specific tab stops and rulers"),ce=t("."),ue=e("td",{style:{"text-align":"left"}},[e("code",null,"[rexx]")],-1),he={style:{"text-align":"left"}},_e=t("Use "),fe=e("code",null,'"[rexx]": {"editor.rulers": [',-1),me=e("em",null,"array",-1),ge=e("code",null,"]}",-1),pe=t(" to set rulers for REXX in the editor. "),be=e("em",null,"array",-1),ye=t(" is an array of numbers representing the column numbers at which you want a ruler to appear. For more information, see "),xe=t("Setting language specific tab stops and rulers"),we=t("."),ve=e("td",{style:{"text-align":"left"}},[e("code",null,"files.associations")],-1),Se={style:{"text-align":"left"}},ze=t("Specifies file names, including data set and member names, that contain certain strings as the appropriate type of file. For detailed usage, see "),Oe=t("Setting file associations"),Le=t("."),Pe=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.advancedCapabilities.enableRseApiActivationCheck")],-1),Ce={style:{"text-align":"left"}},Ie=t("The "),Ee=e("code",null,"zopeneditor.advancedCapabilities.enableRseApiActivationCheck",-1),De=t(" setting is used to enable advanced capabilities activation using an RSE API server. To learn if you should enable this setting, read the "),Me=t("documentation for advanced capabilities activation."),Fe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.autoPreprocessor")]),e("td",{style:{"text-align":"left"}},[t("The "),e("code",null,"zopeneditor.autoPreprocessor"),t(" setting is used to specify when the COBOL or PL/I preprocessor is invoked.")])],-1),Ae=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.cobol.enableCodeFolding")]),e("td",{style:{"text-align":"left"}},"Enable code folding support for this language. The default value is true.")],-1),Te=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.cobol.enableUnreachableCodeWarnings")],-1),qe={style:{"text-align":"left"}},Be=t("Enables unreachable code warnings in the COBOL programs. For more information, see "),ke=t("Enabling and disabling unreachable COBOL code warnings"),Ze=t("."),Re=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.cobol.disableProblems")],-1),He={style:{"text-align":"left"}},Ne=t("Disables code problems in the Problems view and editor. It will keep other language features such as Outline view available if possible. It will also disable unreachable code warnings. The default value is "),Ue=e("code",null,"false",-1),Ve=t(". For more information, see "),Je=t("Enabling and disabling problems in IBM Z Open Editor"),je=t("."),Ye=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.cobol.includeFileExtensions")],-1),We={style:{"text-align":"left"}},Xe=t("Specifies a list of file name extensions for COBOL include files. For more information, see "),Ge=t("Defining Include file associations"),Qe=t("."),$e=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.cobol.maximumLineLength")],-1),Ke={style:{"text-align":"left"}},et=t("Provides a maximum line length for the COBOL editor. This setting will allow the editor to truncate all text after the provided column number while saving a document. To disable truncation of characters, set maximum line length to -1. For more information, see "),tt=t("Setting language-specific maximum line length"),ot=t("."),st=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.cobol.sequenceNumbers")]),e("td",{style:{"text-align":"left"}},[t("Choose which columns will have sequence numbers inserted and removed from a file by using the Renumber and Unnumber functions in the COBOL editor. The following values are allowed:"),e("ul",null,[e("li",null,[e("code",null,"zopeneditor.cobol.sequenceNumbers.column1"),t(": Numbering starts at column 1")]),e("li",null,[e("code",null,"zopeneditor.cobol.sequenceNumbers.column73"),t(": Numbering starts at column 73")]),e("li",null,[e("code",null,"zopeneditor.cobol.sequenceNumbers.column1and73"),t(": Numbering starts at column 1 and 73")])])])],-1),nt=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.cobol.tabstops")],-1),it={style:{"text-align":"left"}},lt=t("Adds custom COBOL tab stops in the editor. For more information, see "),at=t("Setting language specific tab stops and rulers"),dt=t("."),rt=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.datasets")],-1),ct={style:{"text-align":"left"}},ut=t("Specifies data set names that should contain COBOL or PL/I programs, copybooks, include files, and JCL. For detailed usage, see "),ht=t("Setting file associations"),_t=t("."),ft=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.encodings.filePatterns")],-1),mt={style:{"text-align":"left"}},gt=t("The "),pt=e("code",null,"zopeneditor.autoPreprocessor",-1),bt=t(" settings maps file name glob patterns to an EBCDIC file encoding. Use this setting to specify the EBCDIC encoding to be used when it is placed back on z/OS. It only controls what encodings are passed to the language servers. To control encodings used for file conversions when uploading or downloading z/OS resources, use your ZAPP file or Zowe profile. The setting is evaluated with the following rule set: "),yt=e("li",null,[t("If an RSE profile is used to access the file, Z Open Editor first looks for an encoding specified by your RSE mappings (either in your "),e("code",null,"zapp.yaml"),t(" or the location in the "),e("code",null,"zopeneditor.zowe.defaultRseConversionMappingsFile"),t(" setting).")],-1),xt=t("If no RSE mappings exist or\xA0if you are using a z/OSMF profile to access the file, Z Open Editor checks for any matches between the file's path and the patterns defined in "),wt=e("code",null,"zopeneditor.encodings.filePatterns",-1),vt=t("."),St=t("These patterns should be specified as glob patterns. A single asterisk "),zt=e("code",null,"*",-1),Ot=t(" matches any number of characters within a path segment, including none. A double asterisk "),Lt=e("code",null,"**",-1),Pt=t(" matches any number of path segments, including none. For example, "),Ct=e("code",null,"{ **/COBOL/*.cbl : IBM-930 }",-1),It=t(" assigns any file paths containing a directory named "),Et=e("code",null,"COBOL",-1),Dt=t(" ending with a "),Mt=e("code",null,".cbl",-1),Ft=t(" extension an encoding of "),At=e("code",null,"IBM-930",-1),Tt=t(". "),qt={href:"https://code.visualstudio.com/docs/editor/glob-patterns",target:"_blank",rel:"noopener noreferrer"},Bt=t("Learn more about how to specify glob patterns."),kt=e("li",null,"If no matches are found, the encoding specified in the Zowe profile is used.",-1),Zt=e("li",null,[t("Local files match only against the "),e("code",null,"zopeneditor.encodings.filePatterns"),t(" setting for an encoding.")],-1),Rt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.enforceCaseSensitiveIncludeFileNames")]),e("td",{style:{"text-align":"left"}},[t("Enforce case-sensitive matching of local copybooks and include file names in property groups. Default is "),e("code",null,"false"),t(" to match files with all cases in the path. Set it to true to avoid ambiguous matching on case-insensitive file systems.")])],-1),Ht=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.disableProblems")],-1),Nt={style:{"text-align":"left"}},Ut=t("Disables code problems in the Problems view and editor. It will keep other language features such as Outline view available if possible. The default value is "),Vt=e("code",null,"false",-1),Jt=t(". For more information, see "),jt=t("Enabling and disabling problems in IBM Z Open Editor"),Yt=t("."),Wt=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.enableResolvingMacros")],-1),Xt={style:{"text-align":"left"}},Gt=t("Enables the automatic resolution of "),Qt=e("code",null,"SYS1.MACLIB",-1),$t=t(" macro files from MVS using your Zowe Explorer profiles. See the "),Kt=t("Remote Macros"),eo=t(" section for more details. The default value is "),to=e("code",null,"false",-1),oo=t(". To use this feature, you need to set it to "),so=e("code",null,"true",-1),no=t("."),io=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.enableCustomMacrosWarnings")],-1),lo={style:{"text-align":"left"}},ao=t("Enables warnings under all custom macros that can not be found in your HLASM programs. The default value is true. For more information, see "),ro=t("Custom Macros for HLASM"),co=t("."),uo=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.includeFileExtensions")],-1),ho={style:{"text-align":"left"}},_o=t("Specifies a list of file name extensions for HLASM include files. For more information, see "),fo=t("Defining Include file associations"),mo=t("."),go=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.instructionsFilePath")]),e("td",{style:{"text-align":"left"}},"Allows you to specify a custom HLASM instructions file. Contact IBM Support for questions about the format of such a file or updates to our out of the box file, for example, for a new hardware versions.")],-1),po=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.macrosFilePath")]),e("td",{style:{"text-align":"left"}},"Allows you to specify a custom macro definitions file. This option is currently used internally only, but the schema for this format will be provided in a future release so that users can provide their own custom macro references.")],-1),bo=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.maximumLineLength")],-1),yo={style:{"text-align":"left"}},xo=t("Provides a maximum line length for the HLASM editor. This setting will allow the editor to truncate all text after the provided column number while saving a document. To disable truncation of characters, set maximum line length to -1. For more information, see "),wo=t("Setting language-specific maximum line length"),vo=t("."),So=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.reduceCustomMacroLogging")],-1),zo={style:{"text-align":"left"}},Oo=t("Reduces the amount of logs that are sent between the HLASM language server and the Z Open Editor client. This increases the performance for scanning and resolving custom macro libraries. The default value is "),Lo=e("code",null,"false",-1),Po=t(". For more information, see "),Co=t("Custom Macros for HLASM"),Io=t("."),Eo=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.tabstops")],-1),Do={style:{"text-align":"left"}},Mo=t("Defines custom HLASM tab stops in the editor. For more information, see "),Fo=t("Setting language specific tab stops and rulers"),Ao=t("."),To=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.hlasm.zosMacrosVersion")],-1),qo={style:{"text-align":"left"}},Bo=t("Defines the version of z/OS to use for macro definitions. This allows for more accurate results for the hover and code completion features in HLASM. For more information, see "),ko=t("Remote Macros"),Zo=t("."),Ro=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.JAVA_HOME")],-1),Ho={style:{"text-align":"left"}},No=t("Specifies a different Java for IBM Z Open Editor other than the default of your computer. For more information, see section Selecting the Java installation to use in "),Uo=t("Getting started"),Vo=t("."),Jo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.jcl.enableCodeFolding")]),e("td",{style:{"text-align":"left"}},"Enable code folding support for this language. The default value is true.")],-1),jo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.jcl.enableResolvingProcs")]),e("td",{style:{"text-align":"left"}},"Enable automatic resolving of procs in SYS1.PROCLIB. To use this function, a valid Zowe Explorer connection is required to retrieve content from MVS. SYS1.PROCLIB is searched only if an MVS PROCLIB property group is present in the ZAPP file.")],-1),Yo=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.jcl.includeFileExtensions")]),e("td",{style:{"text-align":"left"}},"Specify the file extensions to be used for finding JCL include files on your local file system. To edit an include file locally, a file extension is required.")],-1),Wo=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.jcl.maximumLineLength")],-1),Xo={style:{"text-align":"left"}},Go=t("Provides a maximum line length for the JCL editor. This setting will allow the editor to truncate all text after the provided column number while saving a document. To disable truncation of characters, set maximum line length to -1. For more information, see "),Qo=t("Setting language-specific maximum line length"),$o=t("."),Ko=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.jcl.tabstops")],-1),es={style:{"text-align":"left"}},ts=t("Defines custom JCL tab stops in the editor. For more information, see "),os=t("Setting language specific tab stops and rulers"),ss=t("."),ns=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.jcl.disableProblems")],-1),is={style:{"text-align":"left"}},ls=t("Disables code problems in the Problems view and editor. It will keep other language features such as Outline view available if possible. The default value is "),as=e("code",null,"false",-1),ds=t(". For more information, see "),rs=t("Enabling and disabling problems in IBM Z Open Editor"),cs=t("."),us=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.logger")],-1),hs={style:{"text-align":"left"}},_s=t("Enables a logging output. See "),fs=t("Troubleshooting using log files"),ms=t(" for details."),gs=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.mcp.enabled")]),e("td",{style:{"text-align":"left"}},"Enable the Z Open Editor Model Context Protocol (MCP) server. Create a '.vscode/mcp.json' file in the workspace in where the server is active. See the Z\u202FOpen\u202FEditor documentation for details.")],-1),ps=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.pl1.disableProblems")],-1),bs={style:{"text-align":"left"}},ys=t("Disables code problems in the Problems view and editor. It will keep other language features such as Outline view available if possible. The default value is "),xs=e("code",null,"false",-1),ws=t(". For more information, see "),vs=t("Enabling and disabling problems in IBM Z Open Editor"),Ss=t("."),zs=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.pl1.maximumLineLength")],-1),Os={style:{"text-align":"left"}},Ls=t("Provides a maximum line length for the PL/I editor. This setting will allow the editor to truncate all text after the provided column number while saving a document. To disable truncation of characters, set maximum line length to -1. For more information, see "),Ps=t("Setting language-specific maximum line length"),Cs=t("."),Is=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.rexx.disableProblems")],-1),Es={style:{"text-align":"left"}},Ds=t("Disables code problems in the Problems view and editor. It will keep other language features such as Outline view available if possible. The default value is "),Ms=e("code",null,"false",-1),Fs=t(". For more information, see "),As=t("Enabling and disabling problems in IBM Z Open Editor"),Ts=t("."),qs=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.rexx.maximumLineLength")],-1),Bs={style:{"text-align":"left"}},ks=t("Provides a maximum line length for the REXX editor. This setting will allow the editor to truncate all text after the provided column number while saving a document. To disable truncation of characters, set maximum line length to -1. For more information, see "),Zs=t("Setting language-specific maximum line length"),Rs=t("."),Hs=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.server.memoryAllocation")],-1),Ns={style:{"text-align":"left"}},Us=t("Specifies the maximum value of the memory that language servers are allowed to allocate. For more information, see section Configuring the Java memory allocation in "),Vs=t("Getting started"),Js=t("."),js=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.server.startupOptions")]),e("td",{style:{"text-align":"left"}},"Configure additional startup parameters for Java virtual machines started for running language servers. These might have been provided by tech support for troubleshooting. Leave blank by default.")],-1),Ys=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.userbuild.enabled")]),e("td",{style:{"text-align":"left"}},"Enable User Build capabilities that utilize IBM Dependency Based Build. When enabled, you can run a user build to compile and link programs during coding and unit testing simply by right-clicking inside a COBOL, PL/I, or HLASM file.")],-1),Ws=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.userbuild.userSettings")],-1),Xs={style:{"text-align":"left"}},Gs=t("Settings for IBM User Build. See the "),Qs={href:"https://www.ibm.com/docs/en/developer-for-zos/16.0?topic=code-setting-up-user-build",target:"_blank",rel:"noopener noreferrer"},$s=t("IBM Documentation"),Ks=t(" for details."),en=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.userbuild.alwaysShowCommands")]),e("td",{style:{"text-align":"left"}},"By default, user build commands are only available for COBOL, HLASM, and PL/I files. Enable this setting to show user build commands in context menus and the command palette for all files (excluding include files). This will allow you to run user builds with custom Groovy and zBuilder scripts on files of other languages.")],-1),tn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.welcomePage.show")]),e("td",{style:{"text-align":"left"}},"Show the welcome page on VS Code startup.")],-1),on=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.zapp.useDefaultOnlineZappSchema")]),e("td",{style:{"text-align":"left"}},"Z Open Editor comes with the built-in ZAPP JSON schema. It can be used for YAML files using Red Hat's YAML VS Code extension, and for JSON files with the built-in editor. If you encounter issues locating this built-in schema on deployments like Eclipse Che, such as being unable to see syntax errors with the Red Hat YAML extension, enable this option to load the schema from the internet.")],-1),sn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.zapp.customZappSchemaLocation")]),e("td",{style:{"text-align":"left"}},"When you work offline but have to provide a path to the ZAPP schema yourself, such as in a custom Che deployment, specify a valid HTTP or file URL to the location of the ZAPP JSON schema. If specified, the Use Default Online Zapp Schema option will be ignored.")],-1),nn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.zapp.generateZappOnDemand")]),e("td",{style:{"text-align":"left"}},"When you open a COBOL, PL/I, HLASM, or REXX program and none is found in all the open workspaces, a generic ZAPP file is automatically generated. This file will search for include files in all workspaces and folders.")],-1),ln=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.zapp.variables")]),e("td",{style:{"text-align":"left"}},[t("Use to specify variable names with values that will be substituted in your ZAPP files. To reference a variable defined here in a ZAPP file, write "),e("code",null,"${variable-name}"),t(". For example, define a variable here called "),e("code",null,"HLQ"),t(" with a value that represents your personal high-level qualifier on z/OS MVS. In your ZAPP file, reference the variable in a property group's location entry like this: "),e("code",null,"${HLQ}.COBOL.COPYBOOKs"),t(". Do not use single or double-quote characters for variable names and values. Note that all users need to define all the variables in their user settings that are used by the ZAPP file to avoid errors. You can place these properties in VS Code user and workspace settings.")])],-1),an=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.zcodeformat.useDefaultOnlineZCodeFormatSchema")]),e("td",{style:{"text-align":"left"}},"Z Open Editor comes with the built-in zCodeFormat JSON schema. It can be used for YAML files using Red Hat's YAML VS Code extension, and for JSON files with the built-in editor. If you encounter issues locating this built-in schema on deployments like Eclipse Che, such as being unable to see syntax errors with the Red Hat YAML extension, enable this option to load the schema from the internet.")],-1),dn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.zcodeformat.customZCodeFormatSchemaLocation")]),e("td",{style:{"text-align":"left"}},"When you work offline but have to provide a path to the zCodeFormat schema yourself, such as in a custom Che deployment, specify a valid HTTP or file URL to the location of the zCodeFormat JSON schema. If specified, the Use Default Online zCodeFormat Schema option will be ignored.")],-1),rn=e("td",{style:{"text-align":"left"}},[e("code",null,"zopeneditor.zowe")],-1),cn={style:{"text-align":"left"}},un=t("The "),hn=e("code",null,"zopeneditor.zowe",-1),_n=t(" setting can be configured at either the user or workspace level. Typically, each user specifies this in their user settings using their personal profile names. If defined in workspace settings, it is assumed that all users of this workspace have standardized profile names configured on their systems. If set at both levels, user and workspace, the workspace setting overrides the user setting."),fn=t("Use "),mn=e("code",null,'"zopeneditor.zowe": {"defaultCliProfile": "<profile_name>"}',-1),gn=t(" to specify the name of the profile you want to use for IBM Z Open Editor operations. If not defined, IBM Z Open Editor follows the precedence rules described in "),pn=t("Setting up and using RSE profiles in IBM Z Open Editor"),bn=t(" to determine which CLI profile to use."),yn=c("<li>Use <code>&quot;zopeneditor.zowe&quot;: {&quot;defaultSshCliProfile&quot;: &quot;&lt;profile_name&gt;&quot;}</code> to specify the name of the Zowe CLI SSH profile used for remote execution of commands on UNIX System Services of your z/OS system. If no valid profile name is provided, the default SSH profile is used.</li><li>Use <code>&quot;zopeneditor.zowe&quot;: {&quot;defaultRseConversionMappingsFile&quot;: &quot;&lt;absolute pathname&gt;&quot;}</code> to specify the path to a valid RSE API mappings file or ZAPP file that contains RSE API mappings. These mappings are used for Zowe Explorer MVS file content read or write operations for RSE API profiles. Note that property groups for remote include file resolution and user build do not use this setting; intead, they look for a workspace-local ZAPP file or, if not found, a mappings file in the user&#39;s <code>.zowe/profiles/rse</code> directory.</li><li>Use the boolean setting <code>&quot;zopeneditor.zowe&quot;: {&quot;listBeforeDownload&quot;: &quot;&lt;true-or-false&gt;&quot;}</code> to modify Z Open Editor&#39;s behavior when you request an include file from MVS: - When set to <code>true</code>, the editor tries to confirm that the data set containing the requested member and the member itself exist by performing a list operation. The data set&#39;s existence is cached for 5 minutes to avoid unnecessary list operations while processing pending requests. If the requested include file exists, the editor sends another request to download it. If it does not exist, the editor moves on to test the next location listed in the property group. - When set to <code>false</code>, the editor directly attempts to download the include file from MVS without checking for its existence. If z/OS returns a &quot;Not Found&quot; error, the editor proceeds to the next location listed in the property group. When using z/OSMF as the protocol, this error generates entries in z/OS log files, which can be avoided by setting this value to <code>true</code>. However, the additional round-trip to the server impacts performance. Since logging is not an issue with the RSE API protocol and due to its performance advantage, the default value is <code>false</code>.</li><li>Use the integer setting <code>&quot;zopeneditor.zowe&quot;: {&quot;maximumParallelFileDownloads&quot;: &quot;&lt;1-to-10&gt;&quot;}</code> to specify how many parallel downloads Z Open Editor should perform when requesting include files from MVS. Downloading multiple files in parallel can significantly improve performance, especially when you edit programs with many include files. However, some protocols like z/OSMF allocates more address spaces for parallel requests, which increases resources usage and logging on the z/OS side. The RSE API protocol avoids this issue by achieving scalability in other ways that are documented in the RSE documentation. The default value is 5, and the maximum value is 10. Set it to 1 to disable parallel downloads and request one include file at the time.</li><li>Use the boolean setting <code>&quot;zopeneditor.zowe&quot;: {&quot;readonlyRemoteIncludeFiles&quot;: &quot;&lt;true-or-false&gt;&quot;}</code> to control whether edits to remote include files, that were resolved when opening a program are written back to MVS. These remote include files are accessed by Ctrl or Cmd-clicking the resolved include file inside a program. By default, these files open as read-only to prevent accidental changes. Setting this to <code>true</code> enables you to edit and save the include files back to MVS.</li>",5),xn=t("-"),wn=e("code",null,"disableRseApiLanguageDetection",-1),vn=t(": Disable the advanced RSE API language detection feature, as documented in "),Sn=t("Language Detection"),zn=t(".");function On(Ln,Pn){const s=l("RouterLink"),i=l("ExternalLinkIcon");return a(),d(r,null,[_,e("p",null,[f,m,g,o(s,{to:"/Docs/setting_preferences.html"},{default:n(()=>[p]),_:1}),b]),y,e("table",null,[x,e("tbody",null,[e("tr",null,[w,e("td",v,[S,z,O,L,P,C,I,o(s,{to:"/Docs/setting_tabstops.html"},{default:n(()=>[E]),_:1}),D])]),e("tr",null,[M,e("td",F,[A,T,q,B,k,Z,R,o(s,{to:"/Docs/setting_tabstops.html"},{default:n(()=>[H]),_:1}),N])]),e("tr",null,[U,e("td",V,[J,j,Y,W,X,G,Q,o(s,{to:"/Docs/setting_tabstops.html"},{default:n(()=>[$]),_:1}),K])]),e("tr",null,[ee,e("td",te,[oe,se,ne,ie,le,ae,de,o(s,{to:"/Docs/setting_tabstops.html"},{default:n(()=>[re]),_:1}),ce])]),e("tr",null,[ue,e("td",he,[_e,fe,me,ge,pe,be,ye,o(s,{to:"/Docs/setting_tabstops.html"},{default:n(()=>[xe]),_:1}),we])]),e("tr",null,[ve,e("td",Se,[ze,o(s,{to:"/Docs/setting_fileassociations.html"},{default:n(()=>[Oe]),_:1}),Le])]),e("tr",null,[Pe,e("td",Ce,[Ie,Ee,De,o(s,{to:"/Docs/advanced_activation.html"},{default:n(()=>[Me]),_:1})])]),Fe,Ae,e("tr",null,[Te,e("td",qe,[Be,o(s,{to:"/Docs/setting_unreachablecodewarnings.html"},{default:n(()=>[ke]),_:1}),Ze])]),e("tr",null,[Re,e("td",He,[Ne,Ue,Ve,o(s,{to:"/Docs/setting_disableproblems.html"},{default:n(()=>[Je]),_:1}),je])]),e("tr",null,[Ye,e("td",We,[Xe,o(s,{to:"/Docs/setting_fileassociations.html#defining-include-file-associations"},{default:n(()=>[Ge]),_:1}),Qe])]),e("tr",null,[$e,e("td",Ke,[et,o(s,{to:"/Docs/setting_maximum_line_length.html"},{default:n(()=>[tt]),_:1}),ot])]),st,e("tr",null,[nt,e("td",it,[lt,o(s,{to:"/Docs/setting_tabstops.html"},{default:n(()=>[at]),_:1}),dt])]),e("tr",null,[rt,e("td",ct,[ut,o(s,{to:"/Docs/setting_fileassociations.html"},{default:n(()=>[ht]),_:1}),_t])]),e("tr",null,[ft,e("td",mt,[gt,pt,bt,e("ol",null,[yt,e("li",null,[xt,wt,vt,e("ul",null,[e("li",null,[St,zt,Ot,Lt,Pt,Ct,It,Et,Dt,Mt,Ft,At,Tt,e("a",qt,[Bt,o(i)])])])]),kt,Zt])])]),Rt,e("tr",null,[Ht,e("td",Nt,[Ut,Vt,Jt,o(s,{to:"/Docs/setting_disableproblems.html"},{default:n(()=>[jt]),_:1}),Yt])]),e("tr",null,[Wt,e("td",Xt,[Gt,Qt,$t,o(s,{to:"/Docs/editor_codechanges_hlasm.html#remote-macros"},{default:n(()=>[Kt]),_:1}),eo,to,oo,so,no])]),e("tr",null,[io,e("td",lo,[ao,o(s,{to:"/Docs/advanced_custom_macros.html"},{default:n(()=>[ro]),_:1}),co])]),e("tr",null,[uo,e("td",ho,[_o,o(s,{to:"/Docs/setting_fileassociations.html#defining-include-file-associations"},{default:n(()=>[fo]),_:1}),mo])]),go,po,e("tr",null,[bo,e("td",yo,[xo,o(s,{to:"/Docs/setting_maximum_line_length.html"},{default:n(()=>[wo]),_:1}),vo])]),e("tr",null,[So,e("td",zo,[Oo,Lo,Po,o(s,{to:"/Docs/advanced_custom_macros.html"},{default:n(()=>[Co]),_:1}),Io])]),e("tr",null,[Eo,e("td",Do,[Mo,o(s,{to:"/Docs/setting_tabstops.html"},{default:n(()=>[Fo]),_:1}),Ao])]),e("tr",null,[To,e("td",qo,[Bo,o(s,{to:"/Docs/editor_codechanges_hlasm.html#remote-macros"},{default:n(()=>[ko]),_:1}),Zo])]),e("tr",null,[Ro,e("td",Ho,[No,o(s,{to:"/Docs/getting_started.html"},{default:n(()=>[Uo]),_:1}),Vo])]),Jo,jo,Yo,e("tr",null,[Wo,e("td",Xo,[Go,o(s,{to:"/Docs/setting_maximum_line_length.html"},{default:n(()=>[Qo]),_:1}),$o])]),e("tr",null,[Ko,e("td",es,[ts,o(s,{to:"/Docs/setting_tabstops.html"},{default:n(()=>[os]),_:1}),ss])]),e("tr",null,[ns,e("td",is,[ls,as,ds,o(s,{to:"/Docs/setting_disableproblems.html"},{default:n(()=>[rs]),_:1}),cs])]),e("tr",null,[us,e("td",hs,[_s,o(s,{to:"/Docs/locating_local_client_logs.html"},{default:n(()=>[fs]),_:1}),ms])]),gs,e("tr",null,[ps,e("td",bs,[ys,xs,ws,o(s,{to:"/Docs/setting_disableproblems.html"},{default:n(()=>[vs]),_:1}),Ss])]),e("tr",null,[zs,e("td",Os,[Ls,o(s,{to:"/Docs/setting_maximum_line_length.html"},{default:n(()=>[Ps]),_:1}),Cs])]),e("tr",null,[Is,e("td",Es,[Ds,Ms,Fs,o(s,{to:"/Docs/setting_disableproblems.html"},{default:n(()=>[As]),_:1}),Ts])]),e("tr",null,[qs,e("td",Bs,[ks,o(s,{to:"/Docs/setting_maximum_line_length.html"},{default:n(()=>[Zs]),_:1}),Rs])]),e("tr",null,[Hs,e("td",Ns,[Us,o(s,{to:"/Docs/getting_started.html"},{default:n(()=>[Vs]),_:1}),Js])]),js,Ys,e("tr",null,[Ws,e("td",Xs,[Gs,e("a",Qs,[$s,o(i)]),Ks])]),en,tn,on,sn,nn,ln,an,dn,e("tr",null,[rn,e("td",cn,[un,hn,_n,e("ul",null,[e("li",null,[fn,mn,gn,o(s,{to:"/Docs/interact_zos_zowe_explorer.html#setting-up-and-using-rse-profiles-in-ibm-z-open-editor"},{default:n(()=>[pn]),_:1}),bn]),yn,e("li",null,[xn,wn,vn,o(s,{to:"/Docs/advanced_language_detection.html"},{default:n(()=>[Sn]),_:1}),zn])])])])])])],64)}var En=u(h,[["render",On]]);export{En as default};
