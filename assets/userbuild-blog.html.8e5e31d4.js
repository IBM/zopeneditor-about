import{r as n,o as r,a as l,b as e,d as i,F as d,e as t,c as s}from"./app.06a10f17.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";var u="/zopeneditor-about/assets/userbuild-diagram.1b51deb4.png",c="/zopeneditor-about/assets/userbuild-settings.eade3663.png",h="/zopeneditor-about/assets/userbuild-menus.821e6e23.png",p="/zopeneditor-about/assets/userbuild-finish-log.31f71f3d.png";const _={},g=e("h1",{id:"ibm-z\xAE-open-editor-makes-building-cobol-pl-i-and-hlasm-applications-easier-with-user-build",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ibm-z\xAE-open-editor-makes-building-cobol-pl-i-and-hlasm-applications-easier-with-user-build","aria-hidden":"true"},"#"),t(" IBM Z\xAE Open Editor makes building COBOL, PL/I, and HLASM applications easier with User Build")],-1),b=e("blockquote",null,[e("p",null,"by Kristina Mayo")],-1),f=e("p",null,"There is a new exciting feature in the IBM Z Open Editor VS Code extension, it's called User Build. User Build allows you as a z/OS\xAE developer who writes COBOL, PL/I, or HLASM to build your applications directly out of VS Code or CodeReady Workspaces.",-1),m=t("This feature is created for you if you are an "),w={href:"https://www.ibm.com/products/dependency-based-build#:~:text=IBM%20Dependency%20Based%20Build%20(DBB)%20provides%20capabilities%20to%20build%20traditional,be%20used%20on%20z%2FOS.",target:"_blank",rel:"noopener noreferrer"},B=t("IBM\xAE Dependency Based Build"),y=t(" user and would like to try developing in VS Code. User Build enables you to:"),v=s('<ul><li>Build applications without interrupting your workflow and going outside the IDE.</li><li>Quickly compile code changes without opening a pull request or sharing the code with others.</li></ul><h2 id="architectural-overview" tabindex="-1"><a class="header-anchor" href="#architectural-overview" aria-hidden="true">#</a> Architectural overview</h2><p>As an overview, User Build builds a program by performing the following tasks automatically:</p><ul><li>Uploads the application file to z/OS.</li><li>Uploads the application&#39;s copybooks and include files to z/OS.</li><li>Invokes the remote build script that you defined in User Build settings.</li><li>Downloads build log files locally for easier viewing.</li></ul><img src="'+u+'" alt="User Build diagram" width="450" height="429"><p><strong>Notes:</strong></p><ul><li>User Build does not require Git to work.</li><li>User can specify a custom script to execute for User Build, though DBB with zAppBuild solution is recommended.</li></ul><h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites" aria-hidden="true">#</a> Prerequisites</h2><p>Before using the user build feature, ensure that the following host and client requirements are met.</p><p><strong>Host requirements:</strong></p>',10),k={href:"https://www.ibm.com/products/dependency-based-build#:~:text=IBM%20Dependency%20Based%20Build%20(DBB)%20provides%20capabilities%20to%20build%20traditional,be%20used%20on%20z%2FOS.",target:"_blank",rel:"noopener noreferrer"},z=t("IBM Dependency Based Build"),S=t(" configured on z/OS"),O={href:"https://github.com/IBM/dbb-zappbuild",target:"_blank",rel:"noopener noreferrer"},U=t("zAppBuild"),x=t(" directory copied on z/OS and configured with data set references"),C=e("p",null,[e("strong",null,"Client requirements:")],-1),I=e("li",null,[e("p",null,"VS Code installed")],-1),L=e("li",null,[e("p",null,"Z Open Editor VS Code extension installed")],-1),V={href:"https://docs.zowe.org/v1-3-x/getting-started/cli-getting-started.html#creating-a-z/OSmf-profile",target:"_blank",rel:"noopener noreferrer"},M=t("Zowe\u2122 CLI profiles"),T=t(" created (to connect to z/OS)"),q=t("User Build utilizes open source "),D={href:"https://docs.zowe.org/stable/getting-started/overview.html",target:"_blank",rel:"noopener noreferrer"},A=t("Zowe technologies"),E=t(" to communicate with z/OS. For that reason, you need to have Zowe CLI profiles to tell User Build how to connect to z/OS."),N=e("h2",{id:"user-build-settings",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#user-build-settings","aria-hidden":"true"},"#"),t(" User build settings")],-1),F=t("Before running User Build, you need to configure it via settings to tell User Build where on z/OS to upload files and which build script to execute. The settings should be defined and store as JSON inside "),Z={href:"https://code.visualstudio.com/docs/getstarted/settings",target:"_blank",rel:"noopener noreferrer"},H=t("VS Code settings files"),P=t("."),R=t("User Build has 2 types of settings: workspace settings and user settings, though both can be placed inside workspace settings file for convenience. See "),j={href:"https://www.ibm.com/docs/en/developer-for-zos/16.0?topic=code-setting-up-user-build",target:"_blank",rel:"noopener noreferrer"},G=t("user build docs"),J=t(" for detailed descriptions of each setting."),K=s('<p>The following example shows workspace and user settings are all stored inside <code>zopeneditor-sample/.vscode/settings.json</code> for convenience. <img src="'+c+'" alt="User Build settings example"></p><h2 id="running-user-build" tabindex="-1"><a class="header-anchor" href="#running-user-build" aria-hidden="true">#</a> Running User Build</h2><p>Once settings are filled out, right-click inside a file in the editor, select <strong>Run IBM User Build</strong> to execute remote script and see results directly in VS Code.</p><p><img src="'+h+'" alt="User Build menus inside VS Code"></p><p>The user build log will be streamed in the Output panel inside VS Code. The build is successful when you see the message <code>Build State: CLEAN</code> in the output. The picture below shows successful zAppBuild output for a COBOL application and a log file.</p><p><img src="'+p+'" alt="User Build successful COBOL build"></p><h2 id="trying-out-user-build" tabindex="-1"><a class="header-anchor" href="#trying-out-user-build" aria-hidden="true">#</a> Trying out User Build</h2>',7),Q=t("To get started with User Build, follow this "),W={href:"https://www.ibm.com/docs/en/developer-for-zos/16.0?topic=tutorial-building-cobol-pli-hlasm-applications",target:"_blank",rel:"noopener noreferrer"},X=t("hands-on tutorial"),Y=t(" to use IBM's sample code and the defined workspace settings in the repository."),$=t("For full documentation, refer to "),ee={href:"https://www.ibm.com/docs/en/developer-for-zos/16.0?topic=code-setting-up-user-build",target:"_blank",rel:"noopener noreferrer"},te=t("Setting up the user build"),oe=t(".");function ie(se,ne){const o=n("ExternalLinkIcon");return r(),l(d,null,[g,b,f,e("p",null,[m,e("a",w,[B,i(o)]),y]),v,e("ul",null,[e("li",null,[e("a",k,[z,i(o)]),S]),e("li",null,[e("a",O,[U,i(o)]),x])]),C,e("ul",null,[I,L,e("li",null,[e("p",null,[e("a",V,[M,i(o)]),T]),e("p",null,[q,e("a",D,[A,i(o)]),E])])]),N,e("p",null,[F,e("a",Z,[H,i(o)]),P]),e("p",null,[R,e("a",j,[G,i(o)]),J]),K,e("p",null,[Q,e("a",W,[X,i(o)]),Y]),e("p",null,[$,e("a",ee,[te,i(o)]),oe])],64)}var de=a(_,[["render",ie]]);export{de as default};
