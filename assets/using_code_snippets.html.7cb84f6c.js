import{c as e}from"./app.daa93c96.js";import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";const t={},c=e('<h1 id="explore-code-snippets" tabindex="-1"><a class="header-anchor" href="#explore-code-snippets" aria-hidden="true">#</a> Explore code snippets</h1><p>If you would like to explore using code snippets, you can add some complexity to this exercise. For instance, you can make the Customer File a VSAM file. The editor provides a full list of VSAM statments that can be inserted into your code. To start, you can navigate to the <code>File Control</code> section of SAM1.cbl, then <code>F1</code>, select <code>Insert Snippet</code>, then enter <code>VSAM</code> in the Search bar. You will see a list of VSAM snippets. Scroll to the <code>VSAM: KSDS Select/Assign Clause</code> snippet and hit <code>Enter</code>. A pre-formatted SELECT/ASSIGN clause will be inserted. Notice that hitting the <code>TAB</code> key will send the cursor to each variable/operand that needs to be defined.</p><p>From there, you can use the <code>OPEN</code>, <code>READ</code>, <code>WRITE</code>, <code>REWRITE</code>, and <code>CLOSE</code> VSAM snippets where appropriate.</p><p>You can also explore using subsystem snippets, such as <code>CICS</code>, <code>IMS</code>, and <code>DB2</code>. For instance, you need to create another COBOL subroutine which will be called by <code>SAM1</code> to make DB2 updates. You can create a new file in your COBOL folder named <code>SAM3.cbl</code>, then insert the model subroutine snippet (Search for <code>Model</code>) which will give you a template for a new subroutine program. You can explore the various <code>Embedded SQL</code> snippets by searching for <code>SQL</code> in the list. You can insert code to declare a cursor, open a cursor, select records, update, etc. There is even a snippet for a generic DB2 error handling routine.</p><p>If you need to modify a <code>CICS</code> program, you can search for <code>CICS</code> snippets and you will notice all of the <code>EXEC CICS</code> statements available. Likewise, for <code>IMS</code>, you will see options for the many Working-Storage definition areas, as well as <code>CALL</code> statements with the many different functions available.</p>',5);function d(a,n){return c}var i=o(t,[["render",d]]);export{i as default};
