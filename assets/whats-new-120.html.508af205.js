import{r as s,o as a,a as i,b as o,d as t,w as l,F as d,e,c as h}from"./app.8133f2f7.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";var p="/Zowe-Commercial/zopeneditor-about/assets/remote-file-conversion.7896e76c.png",u="/Zowe-Commercial/zopeneditor-about/assets/welcome-page.fda6a575.png";const f={},_=o("h1",{id:"scaling-up-the-audience-with-ibm-z-open-editor-and-wazi-developer-1-2-0",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#scaling-up-the-audience-with-ibm-z-open-editor-and-wazi-developer-1-2-0","aria-hidden":"true"},"#"),e(" Scaling up the audience with IBM Z Open Editor and Wazi Developer 1.2.0")],-1),g=o("blockquote",null,[o("p",null,[e("by Peter Haumer"),o("br"),e(" 18 March 2021")])],-1),m=e("IBM Z\xAE Open Editor 1.2, together with its companion application Zowe\u2122 Explorer 1.13, and its packaging in IBM\xAE Wazi Developer 1.2 are available now. This is already our eighth major release since we started publishing the editor in the "),w={href:"https://marketplace.visualstudio.com/items?itemName=IBM.zopeneditor",target:"_blank",rel:"noopener noreferrer"},b=e("VS Code Marketplace"),v=e(" in September 2019. Since then, Z Open Editor has been installed almost 28.000 times by Enterprise Application developers and students from 85 different countries. We continue to add new features and refine the user experience based on the feedback we are getting. Therefore, several of the major capabilities added in this new release are some of the most frequently asked about enhancements, as well as address areas where we saw new users struggling. We hope that these capabilities will be attractive to users who have not considered our editor, yet. Here is a quick overview of the highlights."),y=o("h2",{id:"added-rexx-as-a-new-language",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#added-rexx-as-a-new-language","aria-hidden":"true"},"#"),e(" Added REXX as a new language")],-1),k=e("We set out devising Z Open Editor with the vision of creating a great editing experience for z/OS\xAE Enterprise languages that is really attractive to the next generation of developers. As we see big adoption numbers though educational offerings such as IBM's Master the Mainframe and the Open Mainframe Project's COBOL training classes, we also hear from experienced enterprise developers who use the editor and Zowe Explorer in their day-to-day activities. One request we heard from the experienced audience over and over is: can you support "),x={href:"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.4.0/com.ibm.zos.v2r4.ikja300/tso/ikja300/abstract.htm",target:"_blank",rel:"noopener noreferrer"},E=e("REXX"),z=e("?"),I=o("p",null,"With Z Open Editor 1.2, we are proud to announce that we are now shipping an all-new language server for REXX that gives you all the capabilities you expect: syntax errors and highlighting, code completion, outline view, navigate variable references etc. Plus, for all the enhancements that we added in the previous and current release around executing TSO and Unix commands for the IBM RSE API Plug-in for Zowe CLI, you can use them for your REXX development directly because they seamlessly integrate into the editor environment as a CLI.",-1),O=e("Our REXX support was realized by following the open "),S={href:"https://langserver.org",target:"_blank",rel:"noopener noreferrer"},C=e("language server"),B=e(" protocol, just like our language support for COBOL, PL/I and High-Level Assembler. Therefore, we are also able to ship it with our flagship offering "),Z={href:"https://www.ibm.com/products/developer-for-zos",target:"_blank",rel:"noopener noreferrer"},W=e("IBM Developer for z/OS 15.0.1"),M=e(" at the same time giving developers the choice of using either a VS Code or Eclipse-based editing experience for REXX."),R=e("To learn all about our REXX support, read our dedicated "),L={href:"https://ibm.github.io/zopeneditor-about/Blog/announcing-rexx.html",target:"_blank",rel:"noopener noreferrer"},T=e("Blog post"),D=e(" and "),A=o("a",{href:"../Docs/tutorial_rexx"},"Tutorial",-1),P=e("."),X=o("h2",{id:"full-support-of-international-ebcdic-code-pages-for-all-operations",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#full-support-of-international-ebcdic-code-pages-for-all-operations","aria-hidden":"true"},"#"),e(" Full support of international EBCDIC code pages for all operations")],-1),F=o("p",null,"Another frequent request from developers is better support for code page conversions. Because Z Open Editor and Zowe Explorer pull program files from z/OS to edit them locally, the program files will be converted to UTF-8 and converted back to EBCDIC when written back. Particularly for MVS\u2122, international users were asking for more options configuring the EBCDIC code pages to convert from and to.",-1),V=e("In previous releases of Zowe CLI, Zowe Explorer, and RSE API CLI plug-in, we added a parameter to specify the encoding to be used with your "),j={href:"https://docs.zowe.org/stable/web_help/index.html?p=zowe_profiles_create_zosmf-profile",target:"_blank",rel:"noopener noreferrer"},q=e("CLI profile"),N=e(" as well as specific "),H={href:"https://docs.zowe.org/stable/web_help/index.html?p=zowe_zos-files_upload_file-to-data-set",target:"_blank",rel:"noopener noreferrer"},U=e("upload"),Y=e(" and "),G={href:"https://docs.zowe.org/stable/web_help/index.html?p=zowe_zos-files_download_data-set",target:"_blank",rel:"noopener noreferrer"},K=e("download"),J=e(" commands. These parameters are available to z/OSMF as well as RSE API users. However, they only covered a subset of use cases that people were telling us about. What if you uploaded whole directories with a mix of program and binary files or what if you had data sets using different code pages?"),Q=h('<p><img src="'+p+'" alt="Converted special characters"><br><em>Fig. 1: Z Open Editor converting special characters for EBCDIC code pages for remote MVS copybooks</em></p><p>With Z Open Editor 1.2, we added special support for conversions with RSE API that allows you to configure conversion mappings based on various criteria such as based on local file name extensions or the names of the data set, using wildcards, you are interacting with. You can define such mapping rules on the organizational level as server defaults, on a project-level by managing the mappings files with your source code, for example in an SCM, as well as individual level by having a mapping file in your home directory. This will allow you to define different code pages for data sets used only by you versus data sets used by a team or project down to the member name level including mapping files as binary versus text.</p><p>Conversion mappings can be used for all z/OS MVS interactions in Z Open Editor, Zowe Explorer, and RSE API CLI plug-in. For example, when you open a file in Zowe Explorer via an RSE API profile, when you resolve copybooks in COBOL programs using a remote property group, or executing a script using RSE API CLI plug-in commands. We also provide a similar mapping concept for USS when running Dependency-Based Builds using our User Build operations.</p><p>To learn more about conversion mappings, see this new <a href="./rse-march-120">RSE API CLI blog post</a> for this release as well as our detailed <a href="../Docs/mvs_encoding">documentation page</a>.</p><h2 id="a-new-onboarding-experience-for-new-developers" tabindex="-1"><a class="header-anchor" href="#a-new-onboarding-experience-for-new-developers" aria-hidden="true">#</a> A new onboarding experience for new developers</h2><p>For this release, we also had another look at typical stumbling blocks for new users. Particularly, the areas of ensuring the correct prerequisites are installed and configured on the developer&#39;s machine as well as Zowe CLI profiles are created and configured. We also see that users might either not be aware or have problems with correctly configuring property groups for resolving include files and copybooks.</p><p>We decided to add a wizard in this release that welcomes new users, checks the installation and prerequisites, and makes recommendations for fixing. Plus, it provides pointers for getting started with various capabilities as well as how to provide feedback or ask questions. The Welcome page will open automatically the first time you install or upgrade to 1.2 and you can choose to disable or continue to see it at startup.</p><p><img src="'+u+'" alt="Z Open Editor Welcome page"><br><em>Fig. 2: The new Welcome page for Z Open Editor 1.2</em></p><h2 id="better-support-for-teams-working-on-different-platforms" tabindex="-1"><a class="header-anchor" href="#better-support-for-teams-working-on-different-platforms" aria-hidden="true">#</a> Better support for teams working on different platforms</h2><p>Another area we saw users run into trouble with using include file resolution was specifying path and file names for include files, especially when different team members were working on different platforms. For example, a Windows user creating a COBOL copybook using a lowercase file name on the file system and in Git but referring to it in their programs with an uppercase spelling. This worked fine on case-insensitive Windows, but a user running Z Open Editor in Red Hat\xAE CodeReady Workspaces would see errors as the underlying Linux\xAE file system is case sensitive.</p>',10),$=e("We changed the behavior of Z Open Editor to be case-insensitive by default now, but also added the option for developers or teams to make Z Open Editor "),ee=e("enforce the right casing"),oe=e(" as well. This is recommended to avoid potential issues such as files being created with the same name, but different cases in the same folder on Linux, which could lead to ambiguous behavior for COBOL copy statements."),te=o("h2",{id:"added-more-flexible-ways-to-deploy-in-your-organization",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#added-more-flexible-ways-to-deploy-in-your-organization","aria-hidden":"true"},"#"),e(" Added more flexible ways to deploy in your organization")],-1),re=o("p",null,"In addition to new product features, we are also addressing feedback about deploying our solutions in client organizations.",-1),se=e("We added more ways of getting our solution components by publishing our RSE API Zowe CLI plug-in in the public "),ne={href:"https://www.npmjs.com/package/@ibm/rse-api-for-zowe-cli",target:"_blank",rel:"noopener noreferrer"},ae=e("npmjs.com"),ie=e(" registry that allows you now to install the plug-in with a simple "),le=o("code",null,"zowe plugins install @ibm/rse-api-for-zowe-cli",-1),de=e(" command without the need to first download and extract the plug-in from the IBM site. Although, this option of downloading from the IBM site is still available as well."),he=e("We are also started publishing Z Open Editor at "),ce={href:"https://open-vsx.org/extension/IBM/zopeneditor",target:"_blank",rel:"noopener noreferrer"},pe=e("open-vsx.org"),ue=e(", which is an alternative to the Microsoft Marketplace that is based on open source software. open-vsx.org is now the default for other open source editors in which Z Open Editor can run such as "),fe={href:"https://theia-ide.org",target:"_blank",rel:"noopener noreferrer"},_e=e("Eclipse Theia"),ge=e(" or "),me={href:"https://vscodium.com",target:"_blank",rel:"noopener noreferrer"},we=e("VSCodium"),be=e(". Furthermore, organizations can install and host their "),ve={href:"https://github.com/eclipse/openvsx/wiki/Deploying-Open-VSX",target:"_blank",rel:"noopener noreferrer"},ye=e("own Open VSX servers"),ke=e(" in-house allowing them to have full control over which extensions developers can install and which not."),xe=e("We also improved the way that users can migrate to new releases of our IBM Wazi Developer for Workspaces offering more easily by allowing them to subscribe to simple OpenShift\xAE update feeds that that will "),Ee={href:"https://access.redhat.com/documentation/en-us/red_hat_codeready_workspaces/2.3/html/installation_guide/upgrading-codeready-workspaces_crw",target:"_blank",rel:"noopener noreferrer"},ze=e("deploy the new versions of Wazi Developer and CodeReady Workspaces"),Ie=e(" and migrate their workspaces."),Oe=o("h2",{id:"new-ways-to-try-our-solutions",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#new-ways-to-try-our-solutions","aria-hidden":"true"},"#"),e(" New ways to try our solutions")],-1),Se=o("p",null,"Finally, we have new and improved ways of trying our solutions for evaluations.",-1),Ce=e('We provide a new version of the \u201CBring Your Own (BYO) IDE for Cloud Native Development" '),Be={href:"https://www.ibm.com/it-infrastructure/z/software-trials",target:"_blank",rel:"noopener noreferrer"},Ze=e("Z Trial"),We=e(" that walks you through a complete lifecycle and development pipeline with either VS Code or Eclipse-based tools."),Me=e("You can also easily try Red Hat OpenShift and CodeReady Workspaces with Z Open Editor and Zowe Explorer. To do that, sign-up for a trial account here at "),Re={href:"https://developers.redhat.com/developer-sandbox",target:"_blank",rel:"noopener noreferrer"},Le=e("https://developers.redhat.com/developer-sandbox"),Te=e(". This will give you access to OpenShift as well CodeReady Workspaces (check the docs and video on that site for details). Once you have CodeReady Workspaces up, you can just follow the instructions here in our public GitHub for deploying Z Open Editor and Zowe Explorer: "),De={href:"https://github.com/IBM/zopeneditor-about/tree/master/che",target:"_blank",rel:"noopener noreferrer"},Ae=e("https://github.com/IBM/zopeneditor-about/tree/master/che"),Pe=e(". To use a mainframe, you could create an account with Master the Mainframe and connect that via a Zowe profile."),Xe=e("Finally, we want to mention for developers who use "),Fe={href:"https://docs.zowe.org/stable/user-guide/sdks-using.html",target:"_blank",rel:"noopener noreferrer"},Ve=e("Zowe SDKs"),je=e(" to create their own developments tools that you can now also try the Zowe SDK with RSE API Plug-in for Zowe CLI as well. We have created a very simple example here that uses the TSO SDK showing how you can write Node.js scripts that use z/OSMF as well as RSE API interchangeably to execute TSE commands programmatically: "),qe={href:"https://github.com/phaumer/zowe-cli-tso-rse-sample",target:"_blank",rel:"noopener noreferrer"},Ne=e("https://github.com/phaumer/zowe-cli-tso-rse-sample"),He=e(". Let us know if you would like to see more example such as these."),Ue=e("We hope you enjoy all these new capabilities in IBM Z Open Editor and IBM Wazi Developer. Visit our site for more detailed information and to provide us with feedback on "),Ye={href:"https://github.com/IBM/zopeneditor-about/issues",target:"_blank",rel:"noopener noreferrer"},Ge=e("GitHub"),Ke=e(" or our "),Je={href:"https://community.ibm.com/community/user/ibmz-and-linuxone/groups/topic-home/discussions?communitykey=856d8833-1c7c-4322-bf62-0644edb577e4&tab=discussions",target:"_blank",rel:"noopener noreferrer"},Qe=e("Wazi Developer Community page"),$e=e(".");function eo(oo,to){const r=s("ExternalLinkIcon"),n=s("RouterLink");return a(),i(d,null,[_,g,o("p",null,[m,o("a",w,[b,t(r)]),v]),y,o("p",null,[k,o("a",x,[E,t(r)]),z]),I,o("p",null,[O,o("a",S,[C,t(r)]),B,o("a",Z,[W,t(r)]),M]),o("p",null,[R,o("a",L,[T,t(r)]),D,A,P]),X,F,o("p",null,[V,o("a",j,[q,t(r)]),N,o("a",H,[U,t(r)]),Y,o("a",G,[K,t(r)]),J]),Q,o("p",null,[$,t(n,{to:"/Docs/setting_propertygroup.html#enforcing-case-sensitive-file-name-matching"},{default:l(()=>[ee]),_:1}),oe]),te,re,o("p",null,[se,o("a",ne,[ae,t(r)]),ie,le,de]),o("p",null,[he,o("a",ce,[pe,t(r)]),ue,o("a",fe,[_e,t(r)]),ge,o("a",me,[we,t(r)]),be,o("a",ve,[ye,t(r)]),ke]),o("p",null,[xe,o("a",Ee,[ze,t(r)]),Ie]),Oe,Se,o("p",null,[Ce,o("a",Be,[Ze,t(r)]),We]),o("p",null,[Me,o("a",Re,[Le,t(r)]),Te,o("a",De,[Ae,t(r)]),Pe]),o("p",null,[Xe,o("a",Fe,[Ve,t(r)]),je,o("a",qe,[Ne,t(r)]),He]),o("p",null,[Ue,o("a",Ye,[Ge,t(r)]),Ke,o("a",Je,[Qe,t(r)]),$e])],64)}var no=c(f,[["render",eo]]);export{no as default};
